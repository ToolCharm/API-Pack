[
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/cards",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "cards",
        "framework": "tcgdex.net",
        "functionality": "fetch the list of cards",
        "api_arguments": {},
        "description": "desc",
        "path": "/cards",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "how to get the list of cards from TCGdex API",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6882006355694362,
                "back_trans_input": "Task: how to get the list of cards from TCGdex API\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://tcgplayer.com/api](https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.2518894343540587
            },
            {
                "idx": 2,
                "candidate": "how do you list all the cards and there attributes?",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9923095703125,
                "back_trans_input": "Task: how do you list all the cards and there attributes?\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task 2: Create an Endpoint with the following information provided by your client\n * Name:",
                "back_trans_input_tokens_mean": -2.4486380543625144
            },
            {
                "idx": 3,
                "candidate": "list all cards.?t=TCGdex API",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0703650804666371,
                "back_trans_input": "Task: list all cards.?t=TCGdex API\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"cards\": [\n    {\n      \"name\": \"Pokemon",
                "back_trans_input_tokens_mean": -2.4928068947373774
            },
            {
                "idx": 4,
                "candidate": "fetch the list of cards.? id is 663",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2622716086251395,
                "back_trans_input": "Task: fetch the list of cards.? id is 663\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"id\": \"663\",\n  \"name\": \"Misty'",
                "back_trans_input_tokens_mean": -2.596278287668144
            },
            {
                "idx": 5,
                "candidate": "i want to search all the available cards from TCGdex API",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2362005636096,
                "back_trans_input": "Task: i want to search all the available cards from TCGdex API\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": " (https://tcgplayer.com/api)",
                "back_trans_input_tokens_mean": -2.371591294932569
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "how to get the list of cards from TCGdex API"
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/cards\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "cards",
        "framework": "tcgdex.net",
        "functionality": "fetch the list of cards",
        "api_arguments": {},
        "description": "desc",
        "path": "/cards",
        "method": "get",
        "lang": "Java",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find all the cards for a specified card name",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4687971635298296,
                "back_trans_input": "Task: find all the cards for a specified card name\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Re-create the Endpoint Identifier\n\nThe format should be `/<",
                "back_trans_input_tokens_mean": -2.384568997791835
            },
            {
                "idx": 2,
                "candidate": "fetch the list of cards according to a given dex?",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7261666517991285,
                "back_trans_input": "Task: fetch the list of cards according to a given dex?\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<details>\n\t<summary>Click here for the solution</summary>\n\n\t```php\n",
                "back_trans_input_tokens_mean": -2.42478655095686
            },
            {
                "idx": 3,
                "candidate": "what is all of the cards? name them.",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4597900390625,
                "back_trans_input": "Task: what is all of the cards? name them.\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Re-Generate Endpoint Identifier\n\nThe first thing we need to do is regener",
                "back_trans_input_tokens_mean": -2.495393297313589
            },
            {
                "idx": 4,
                "candidate": "How to get the card list in XML format for an MTG game?",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8705188526826746,
                "back_trans_input": "Task: How to get the card list in XML format for an MTG game?\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### **Solution:**\n\n\n```javascript\nfetch('https://api.",
                "back_trans_input_tokens_mean": -2.473067041170799
            },
            {
                "idx": 5,
                "candidate": "fetch the list of cards on site. I will provide a link to the card in the endpoint.",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7618291161277078,
                "back_trans_input": "Task: fetch the list of cards on site. I will provide a link to the card in the endpoint.\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://tcgplayer.com/api/docs]",
                "back_trans_input_tokens_mean": -2.4182451759896626
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "find all the cards for a specified card name"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/cards'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "cards",
        "framework": "tcgdex.net",
        "functionality": "fetch the list of cards",
        "api_arguments": {},
        "description": "desc",
        "path": "/cards",
        "method": "get",
        "lang": "Node",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "get the list of all cards from a collection",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0943672873757102,
                "back_trans_input": "Task: get the list of all cards from a collection\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```bash\ncurl --request GET \\\n  \"https://api.",
                "back_trans_input_tokens_mean": -2.356758884021214
            },
            {
                "idx": 2,
                "candidate": "to list all the cards in my deck.txt file",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.259832969733647,
                "back_trans_input": "Task: to list all the cards in my deck.txt file\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": " (https://github.com/tendermint/tmc-examples/tree/master/tc",
                "back_trans_input_tokens_mean": -2.4204054548029315
            },
            {
                "idx": 3,
                "candidate": "find the list of all cards.name and card ids",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3824013392130534,
                "back_trans_input": "Task: find the list of all cards.name and card ids\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You must use the `/v1/cards` path in your request URL,",
                "back_trans_input_tokens_mean": -2.4777877707230416
            },
            {
                "idx": 4,
                "candidate": "fetch list of cards.?I need to do that using TCGdex API",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2533170580863953,
                "back_trans_input": "Task: fetch list of cards.?I need to do that using TCGdex API\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** Please ensure your generated endpoint identifiers are unique within their respective APIs.",
                "back_trans_input_tokens_mean": -2.5192182745252336
            },
            {
                "idx": 5,
                "candidate": "what cards does the tcgdex API have?",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.766080379486084,
                "back_trans_input": "Task: what cards does the tcgdex API have?\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\nfetch('https://tcgdex.",
                "back_trans_input_tokens_mean": -2.399749779068263
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "what cards does the tcgdex API have?"
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/cards\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "cards",
        "framework": "tcgdex.net",
        "functionality": "fetch the list of cards",
        "api_arguments": {},
        "description": "desc",
        "path": "/cards",
        "method": "get",
        "lang": "Python",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "i want cards list.using TCGdex API",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.311688129718487,
                "back_trans_input": "Task: i want cards list.using TCGdex API\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\nfetch('https://api.",
                "back_trans_input_tokens_mean": -2.51695310023793
            },
            {
                "idx": 2,
                "candidate": "list all cards from TCGdex API.",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8848116278648377,
                "back_trans_input": "Task: list all cards from TCGdex API.\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"cards\": [\n        {\n            \"id\": \"1\",\n            ",
                "back_trans_input_tokens_mean": -2.2637982157479346
            },
            {
                "idx": 3,
                "candidate": "what is the API to get the list of cards?",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9871316389604048,
                "back_trans_input": "Task: what is the API to get the list of cards?\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2)\n\nYou have been asked to create a new endpoint in your application that allows users",
                "back_trans_input_tokens_mean": -2.322754876655445
            },
            {
                "idx": 4,
                "candidate": "what list of cards are available?. the TCGdex API",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0933233817418417,
                "back_trans_input": "Task: what list of cards are available?. the TCGdex API\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"cards\": [\n    {\n      \"id\": \"2\",\n      ",
                "back_trans_input_tokens_mean": -2.47919094151464
            },
            {
                "idx": 5,
                "candidate": "Find a list of available cards. Also return the name, image, and cost of each card.",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4375804719470797,
                "back_trans_input": "Task: Find a list of available cards. Also return the name, image, and cost of each card.\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task 2\n\nTask: Get information about a specific card by its ID.",
                "back_trans_input_tokens_mean": -2.2972689372737234
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "list all cards from TCGdex API."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/cards\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "cards",
        "framework": "tcgdex.net",
        "functionality": "fetch the list of cards",
        "api_arguments": {},
        "description": "desc",
        "path": "/cards",
        "method": "get",
        "lang": "go",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "query a list of all available cards for a certain card type",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5346282958984374,
                "back_trans_input": "Task: query a list of all available cards for a certain card type\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task 2: query information about a specific card by its ID\n\nFunctionality: get info",
                "back_trans_input_tokens_mean": -2.3636190994926123
            },
            {
                "idx": 2,
                "candidate": "Find all cards in a set. Name the API.",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.226593017578125,
                "back_trans_input": "Task: Find all cards in a set. Name the API.\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n* **Hint:** The first card has id=1, the second id=2, etc.",
                "back_trans_input_tokens_mean": -2.436869403772187
            },
            {
                "idx": 3,
                "candidate": "what is the list of all cards with a certain value?",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3055437528170073,
                "back_trans_input": "Task: what is the list of all cards with a certain value?\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"cards\": [\n        {\n            \"id\": 1,\n            \"",
                "back_trans_input_tokens_mean": -2.358649510922639
            },
            {
                "idx": 4,
                "candidate": "what is the list of cards available?. ...",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5572918978604404,
                "back_trans_input": "Task: what is the list of cards available?. ...\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\n\n// endpoint_id(string) function returns string value that represent the endpoint id as defined",
                "back_trans_input_tokens_mean": -2.4716967354833552
            },
            {
                "idx": 5,
                "candidate": "get the list of all cards from database. Use TCGdex API",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.02147526293993,
                "back_trans_input": "Task: get the list of all cards from database. Use TCGdex API\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"api_id\": \"TCGdex\",\n  \"endpoint_",
                "back_trans_input_tokens_mean": -2.379073288481114
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "get the list of all cards from database. Use TCGdex API"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/cards\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "cards",
        "framework": "tcgdex.net",
        "functionality": "fetch the list of cards",
        "api_arguments": {},
        "description": "desc",
        "path": "/cards",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "fetch the list of cards from dexterity",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9965131933038885,
                "back_trans_input": "Task: fetch the list of cards from dexterity\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solution\n\nThe above information can be used as follows:\n\n```yaml\napiVersion: v",
                "back_trans_input_tokens_mean": -2.396122259753091
            },
            {
                "idx": 2,
                "candidate": "fetch the list of cards from a deck.",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.688359260559082,
                "back_trans_input": "Task: fetch the list of cards from a deck.\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": " (https://github.com/tcgplayer-api/tcgplayer)",
                "back_trans_input_tokens_mean": -2.2805792008127486
            },
            {
                "idx": 3,
                "candidate": "get the list of cards on tcgdex",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6794055792001578,
                "back_trans_input": "Task: get the list of cards on tcgdex\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[END OF THE INPUT]\n\n[INPUT FORMAT: <task> <functionality",
                "back_trans_input_tokens_mean": -2.3652639112302234
            },
            {
                "idx": 4,
                "candidate": "fetch all cards.tcgdexapi",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1014396927573464,
                "back_trans_input": "Task: fetch all cards.tcgdexapi\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<details>\n  <summary><b>Click here for the solution</b></summary>",
                "back_trans_input_tokens_mean": -2.4648160590781822
            },
            {
                "idx": 5,
                "candidate": "get the list of all the cards in tcgdex",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8556166648864746,
                "back_trans_input": "Task: get the list of all the cards in tcgdex\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```\nhttp://localhost:8080/tcgdex/cards?",
                "back_trans_input_tokens_mean": -2.351070853701809
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "fetch the list of cards from a deck."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/cards\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "cards",
        "framework": "tcgdex.net",
        "functionality": "fetch the list of cards",
        "api_arguments": {},
        "description": "desc",
        "path": "/cards",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "fetch the list of all TCG cards.?",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2796682357788085,
                "back_trans_input": "Task: fetch the list of all TCG cards.?\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<details>\n\t<summary>Click here for the solution</summary>\n\n\t```php\n\t$endpoint",
                "back_trans_input_tokens_mean": -2.4294969141483307
            },
            {
                "idx": 2,
                "candidate": "tcgdex API list the card.",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3173564997586338,
                "back_trans_input": "Task: tcgdex API list the card.\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoints are available here [https://github.",
                "back_trans_input_tokens_mean": -2.493480007927697
            },
            {
                "idx": 3,
                "candidate": "what's the list of cards? for a person",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6280707212594838,
                "back_trans_input": "Task: what&#x27;s the list of cards? for a person\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Examples\n\n * [Example1](https://github.",
                "back_trans_input_tokens_mean": -2.537089139987261
            },
            {
                "idx": 4,
                "candidate": "fetch the list of cards.using tcgdex",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6604362555912563,
                "back_trans_input": "Task: fetch the list of cards.using tcgdex\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": " (https://tcg-api-docs.",
                "back_trans_input_tokens_mean": -2.4231872347603858
            },
            {
                "idx": 5,
                "candidate": "i have the list of all cards in deck.",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6190109252929688,
                "back_trans_input": "Task: i have the list of all cards in deck.\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> Your code should not contain any hardcoded values (e.",
                "back_trans_input_tokens_mean": -2.4471553490225193
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "fetch the list of cards.using tcgdex"
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/cards\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "cards",
        "framework": "tcgdex.net",
        "functionality": "fetch the list of cards",
        "api_arguments": {},
        "description": "desc",
        "path": "/cards",
        "method": "get",
        "lang": "swift",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Get a list of cards that are in the database.",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0522724787394206,
                "back_trans_input": "Task: Get a list of cards that are in the database.\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Notes:\n\n\n### Endpoint Identifier\n\n**The endpoint must start with `/api/v",
                "back_trans_input_tokens_mean": -2.3026230795341625
            },
            {
                "idx": 2,
                "candidate": "fetch a list of all cards in order by name",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1175537109375,
                "back_trans_input": "Task: fetch a list of all cards in order by name\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Fetch `/cards`\n\nFetch the following URL using your favorite HTTP",
                "back_trans_input_tokens_mean": -2.3692864949724317
            },
            {
                "idx": 3,
                "candidate": "tcgdex API: find list of all cards in database",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0409724712371826,
                "back_trans_input": "Task: tcgdex API: find list of all cards in database\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\nfetch(\"https://tcg-api.",
                "back_trans_input_tokens_mean": -2.5307197239087977
            },
            {
                "idx": 4,
                "candidate": "if you are using the TCGdex API, can you tell me which cards list shows all cards",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.578454396941445,
                "back_trans_input": "Task: if you are using the TCGdex API, can you tell me which cards list shows all cards\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```bash\ncurl \"https://tcgplayerapi.",
                "back_trans_input_tokens_mean": -2.487691717763101
            },
            {
                "idx": 5,
                "candidate": "fetch the list of cards from a specific set",
                "input_text": "Functionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.724951137195934,
                "back_trans_input": "Task: fetch the list of cards from a specific set\n\nFunctionality: fetch the list of cards\nDescription: desc\nEndpoint: cards\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[Your response]\n\ncards/list",
                "back_trans_input_tokens_mean": -2.330009937286377
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "fetch the list of cards from a specific set"
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/cards/%7BcardId%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "findPetsByTags",
        "framework": "tcgdex.net",
        "functionality": "Finds Card by Global ID",
        "api_arguments": {},
        "description": "Find a defined card thatusing its global id",
        "path": "/cards/{cardId}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find cards with tags containing \"Scry.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.007102272727273,
                "back_trans_input": "Task: Find cards with tags containing &quot;Scry.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n</div>\n\n\n<br><h3>Step</h3>\n<p>\n\n",
                "back_trans_input_tokens_mean": -2.7905149611215743
            },
            {
                "idx": 2,
                "candidate": "Find a card by its global ID. Use the TCGdex API.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.3628627272213207,
                "back_trans_input": "Task: Find a card by its global ID. Use the TCGdex API.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Use the endpoint to get information about it\n\n\n```bash\ncurl \"https://",
                "back_trans_input_tokens_mean": -2.531030038686899
            },
            {
                "idx": 3,
                "candidate": "Find the list of pets with certain tags.n",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5727678934733074,
                "back_trans_input": "Task: Find the list of pets with certain tags.n\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task 2 (10 points) — Find the pet using its global ID\n\n\n### ",
                "back_trans_input_tokens_mean": -2.7373673223680064
            },
            {
                "idx": 4,
                "candidate": "Find all global cards by name. Use the TCGdex API as the source.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4691166679064434,
                "back_trans_input": "Task: Find all global cards by name. Use the TCGdex API as the source.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2. Find a Card using ID from the TCG API\n\nFunctionality: Finds Card",
                "back_trans_input_tokens_mean": -2.663604093320442
            },
            {
                "idx": 5,
                "candidate": "Find the global ID of a card.?",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7063718318939209,
                "back_trans_input": "Task: Find the global ID of a card.?\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": " (https://github.com/TCG-DEX/tcg_api)\n\n",
                "back_trans_input_tokens_mean": -2.6860146131671843
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find a card by its global ID. Use the TCGdex API."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/cards/%7BcardId%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "findPetsByTags",
        "framework": "tcgdex.net",
        "functionality": "Finds Card by Global ID",
        "api_arguments": {},
        "description": "Find a defined card thatusing its global id",
        "path": "/cards/{cardId}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find all the cards with a specific global id",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5974804438077487,
                "back_trans_input": "Task: find all the cards with a specific global id\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Generate the endpoint's identifier using the rules below\n\n  * The endpoint identifier should consist",
                "back_trans_input_tokens_mean": -2.6532913766256194
            },
            {
                "idx": 2,
                "candidate": "Find a card by global id.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5698628902435303,
                "back_trans_input": "Task: Find a card by global id.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## **Hints:**\n\n* Use the endpoint, function, description, and API names as hints",
                "back_trans_input_tokens_mean": -2.6236023705852918
            },
            {
                "idx": 3,
                "candidate": "What is the global id for all cards in my deck?",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9116186414446149,
                "back_trans_input": "Task: What is the global id for all cards in my deck?\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [HackerRank](https://www.",
                "back_trans_input_tokens_mean": -2.6441114213731556
            },
            {
                "idx": 4,
                "candidate": "Find all the global ids of pets in TCG Dex.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3284830078482628,
                "back_trans_input": "Task: Find all the global ids of pets in TCG Dex.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n```js\n//your code here\n\n/*\n * @param {string} input \n *",
                "back_trans_input_tokens_mean": -2.7266812400212364
            },
            {
                "idx": 5,
                "candidate": "find the global id of all cards by name.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.196885625521342,
                "back_trans_input": "Task: find the global id of all cards by name.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\n /**\n  * @param  {string} petName - Name of your favorite",
                "back_trans_input_tokens_mean": -2.6601532659223004
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find a card by global id."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/cards/%7BcardId%7D'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "findPetsByTags",
        "framework": "tcgdex.net",
        "functionality": "Finds Card by Global ID",
        "api_arguments": {},
        "description": "Find a defined card thatusing its global id",
        "path": "/cards/{cardId}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How can I find a TCGdex card by its global ID?",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7580391615629196,
                "back_trans_input": "Task: How can I find a TCGdex card by its global ID?\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n## **3.2.",
                "back_trans_input_tokens_mean": -2.5568289202313093
            },
            {
                "idx": 2,
                "candidate": "Find all cards with global ID.nSay TCGdex API",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1208424303266737,
                "back_trans_input": "Task: Find all cards with global ID.nSay TCGdex API\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nTask: Find all cards from a specific set using their names or IDs.",
                "back_trans_input_tokens_mean": -2.7929407954216003
            },
            {
                "idx": 3,
                "candidate": "find a card by its global id",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5142644427039407,
                "back_trans_input": "Task: find a card by its global id\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"endpoint\": \"findPetsByTags\",\n  \"identifier\": \"",
                "back_trans_input_tokens_mean": -2.6178781178371966
            },
            {
                "idx": 4,
                "candidate": "Find all the globals for a given card.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4477291107177734,
                "back_trans_input": "Task: Find all the globals for a given card.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n* * * \n\n# **[Task 2]** (10 points)\n",
                "back_trans_input_tokens_mean": -2.678166112592143
            },
            {
                "idx": 5,
                "candidate": "Find global ID. I am trying to find a card by its global ID.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2301716524011947,
                "back_trans_input": "Task: Find global ID. I am trying to find a card by its global ID.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n\t\"global_id\": \"1\",\n\t\"name\": \"L",
                "back_trans_input_tokens_mean": -2.6200131342961237
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "find a card by its global id"
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/cards/%7BcardId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "findPetsByTags",
        "framework": "tcgdex.net",
        "functionality": "Finds Card by Global ID",
        "api_arguments": {},
        "description": "Find a defined card thatusing its global id",
        "path": "/cards/{cardId}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find a card by global id.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5585894703865051,
                "back_trans_input": "Task: find a card by global id.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Create the file in this directory named after the task with the extension `.",
                "back_trans_input_tokens_mean": -2.629120976471704
            },
            {
                "idx": 2,
                "candidate": "Find cards with tag 12345. Use TCGdex API",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1256249268849692,
                "back_trans_input": "Task: Find cards with tag 12345. Use TCGdex API\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Expected Output\n\n```json\n{\n  \"id\": \"findCard\",\n  \"functionality",
                "back_trans_input_tokens_mean": -2.662023387849331
            },
            {
                "idx": 3,
                "candidate": "what is the global id for all of the cards in the set?",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9166454821825027,
                "back_trans_input": "Task: what is the global id for all of the cards in the set?\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[API](https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.648097187280655
            },
            {
                "idx": 4,
                "candidate": "Find card by its global ID.?The API name is TCGdex API.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8957170579168532,
                "back_trans_input": "Task: Find card by its global ID.?The API name is TCGdex API.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": " (https://github.com/TCGDex/tcg-api)\n\n",
                "back_trans_input_tokens_mean": -2.6693875116246346
            },
            {
                "idx": 5,
                "candidate": "how do you find a card by it's global id on the TCGdex API",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6904190616174177,
                "back_trans_input": "Task: how do you find a card by it&#x27;s global id on the TCGdex API\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://github.com/TCGplayerLLC/tcg-api](https://github",
                "back_trans_input_tokens_mean": -2.5521988237605377
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "find a card by global id."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/cards/%7BcardId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "findPetsByTags",
        "framework": "tcgdex.net",
        "functionality": "Finds Card by Global ID",
        "api_arguments": {},
        "description": "Find a defined card thatusing its global id",
        "path": "/cards/{cardId}",
        "method": "get",
        "lang": "go",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find any card that has its global ID.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.072903719815341,
                "back_trans_input": "Task: find any card that has its global ID.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Task 2:** \n\nFind the pet cards with type \"Legendary\".",
                "back_trans_input_tokens_mean": -2.682763551308857
            },
            {
                "idx": 2,
                "candidate": "Find card that has a certain global ID.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.263031005859375,
                "back_trans_input": "Task: Find card that has a certain global ID.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How To Run?\n- Start the server with `node index.",
                "back_trans_input_tokens_mean": -2.658792365857256
            },
            {
                "idx": 3,
                "candidate": "Find a card name by global ID.?",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3596477508544922,
                "back_trans_input": "Task: Find a card name by global ID.?\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint: /api/tcgdex/pets/{id}\n\n#### Task:?",
                "back_trans_input_tokens_mean": -2.731435597920027
            },
            {
                "idx": 4,
                "candidate": "Find all cards by global id. I have the card number in text but not as an ID.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5506561344320124,
                "back_trans_input": "Task: Find all cards by global id. I have the card number in text but not as an ID.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n\n\n```json\n{\n    \"id\": \"findPetsByTags\",\n    \"name\": ",
                "back_trans_input_tokens_mean": -2.715275218237692
            },
            {
                "idx": 5,
                "candidate": "Find all cards on the TCGdex with a specific global ID.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8798291757702827,
                "back_trans_input": "Task: Find all cards on the TCGdex with a specific global ID.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## What we are looking for in your response?",
                "back_trans_input_tokens_mean": -2.5620362278102906
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find all cards on the TCGdex with a specific global ID."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/cards/%7BcardId%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "findPetsByTags",
        "framework": "tcgdex.net",
        "functionality": "Finds Card by Global ID",
        "api_arguments": {},
        "description": "Find a defined card thatusing its global id",
        "path": "/cards/{cardId}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find a card by its global id",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5590179400010542,
                "back_trans_input": "Task: Find a card by its global id\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n[![image](https://user-images.",
                "back_trans_input_tokens_mean": -2.6142909782977144
            },
            {
                "idx": 2,
                "candidate": "what is the id of all cards that have not been created",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3316224098205567,
                "back_trans_input": "Task: what is the id of all cards that have not been created\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<details>\n  <summary>Click here for the solution</summary>\n    <br/>\n    <",
                "back_trans_input_tokens_mean": -2.711636255657862
            },
            {
                "idx": 3,
                "candidate": "Find the global ID of an unknown card. Name the API.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.404052734375,
                "back_trans_input": "Task: Find the global ID of an unknown card. Name the API.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n##### Input\n\n```json\n{\n    \"globalId\": 1234567890\n}\n",
                "back_trans_input_tokens_mean": -2.6343860776405634
            },
            {
                "idx": 4,
                "candidate": "how to find all defined cards for a specific global id?",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2774331331253053,
                "back_trans_input": "Task: how to find all defined cards for a specific global id?\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2.2.2\n\nFor each question below, please specify your answer in JSON format",
                "back_trans_input_tokens_mean": -2.676801499866304
            },
            {
                "idx": 5,
                "candidate": "Find all tags a card has. What would be the endpoint for this?",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.286595064051011,
                "back_trans_input": "Task: Find all tags a card has. What would be the endpoint for this?\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": " (https://tcgapi-docs.",
                "back_trans_input_tokens_mean": -2.692294897035111
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find a card by its global id"
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/cards/%7BcardId%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "findPetsByTags",
        "framework": "tcgdex.net",
        "functionality": "Finds Card by Global ID",
        "api_arguments": {},
        "description": "Find a defined card thatusing its global id",
        "path": "/cards/{cardId}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the global ID of a card in TCGdex.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.587662296635764,
                "back_trans_input": "Task: Find the global ID of a card in TCGdex.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"id\": \"findPetsByTags\",\n    \"functionality\": ",
                "back_trans_input_tokens_mean": -2.5287635908352106
            },
            {
                "idx": 2,
                "candidate": "What is the API call to find a card that has all of its tags?",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1594105888815487,
                "back_trans_input": "Task: What is the API call to find a card that has all of its tags?\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```bash\n$ curl --request GET \\\n  --url https://api.",
                "back_trans_input_tokens_mean": -2.6034989283635066
            },
            {
                "idx": 3,
                "candidate": "Find all cards that have global ID 43424.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6824507279829546,
                "back_trans_input": "Task: Find all cards that have global ID 43424.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Notes:**\n\n* You might need to modify some endpoints in order to complete your project.",
                "back_trans_input_tokens_mean": -2.7191358947753907
            },
            {
                "idx": 4,
                "candidate": "what card have all the pet ids?",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.092688126997514,
                "back_trans_input": "Task: what card have all the pet ids?\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **Solution:**\n```javascript\n  /**\n   *\n   * @param  {Object}",
                "back_trans_input_tokens_mean": -2.830763551055408
            },
            {
                "idx": 5,
                "candidate": "Find the card that has global id 329A6DF-B5F2-E8C",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8675081567330793,
                "back_trans_input": "Task: Find the card that has global id 329A6DF-B5F2-E8C\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<div class=\"solution\">\n    <ul><li>id: 329A6DF",
                "back_trans_input_tokens_mean": -2.794198806197555
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find the global ID of a card in TCGdex."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/cards/%7BcardId%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "findPetsByTags",
        "framework": "tcgdex.net",
        "functionality": "Finds Card by Global ID",
        "api_arguments": {},
        "description": "Find a defined card thatusing its global id",
        "path": "/cards/{cardId}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find the global ID of a particular card.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1914655685424804,
                "back_trans_input": "Task: find the global ID of a particular card.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Hint 1\n\nThe first hint can be found in [this](https://github",
                "back_trans_input_tokens_mean": -2.6238330903092053
            },
            {
                "idx": 2,
                "candidate": "Find a specific card by ID.n",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2199228460138494,
                "back_trans_input": "Task: Find a specific card by ID.n\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 3.. \n\nTask: List all cards owned by user in the form of a list with",
                "back_trans_input_tokens_mean": -2.745345772289839
            },
            {
                "idx": 3,
                "candidate": "what is the most current global id for all cards?",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2894868025412927,
                "back_trans_input": "Task: what is the most current global id for all cards?\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [⬆ back to top](#table-of-contents)\n\n\n## Task 2",
                "back_trans_input_tokens_mean": -2.718310623168945
            },
            {
                "idx": 4,
                "candidate": "Find the identifier of any card with an unknown global id.",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6104559153318405,
                "back_trans_input": "Task: Find the identifier of any card with an unknown global id.\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### **Input Format** <a id=\"input\"></a>\n\n```json\n{\n  ",
                "back_trans_input_tokens_mean": -2.6655148210979642
            },
            {
                "idx": 5,
                "candidate": "what is the format of a global id?",
                "input_text": "Functionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9585556586583456,
                "back_trans_input": "Task: what is the format of a global id?\n\nFunctionality: Finds Card by Global ID\nDescription: Find a defined card thatusing its global id\nEndpoint: findPetsByTags\n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n---\n\nYou can use [this](https://github.",
                "back_trans_input_tokens_mean": -2.692031561843748
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "what is the format of a global id?"
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/categories",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/categories",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the name of a specific card from any database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1417495409647624,
                "back_trans_input": "Task: Find the name of a specific card from any database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n#### Task: Find all cards with a certain attribute in a database.",
                "back_trans_input_tokens_mean": -2.327558075616119
            },
            {
                "idx": 2,
                "candidate": "Find the name of all rare cards in the database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5384798916903408,
                "back_trans_input": "Task: Find the name of all rare cards in the database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Example\n\n```json\n{\n    \"endpoint\": \"https://api.",
                "back_trans_input_tokens_mean": -2.2901321857347403
            },
            {
                "idx": 3,
                "candidate": "How do you access the API to find card information for Magic the Gathering?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5747906416654587,
                "back_trans_input": "Task: How do you access the API to find card information for Magic the Gathering?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task 2: The Endpoint's Identifier\n\nYou have been assigned an endpoint for a",
                "back_trans_input_tokens_mean": -2.358845360511172
            },
            {
                "idx": 4,
                "candidate": "Find card information for a specific card. Name the API TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7102926770846049,
                "back_trans_input": "Task: Find card information for a specific card. Name the API TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nIdentifier: 6b0a7c5f-f9e2-4ea1-",
                "back_trans_input_tokens_mean": -2.285619831085205
            },
            {
                "idx": 5,
                "candidate": "Find the prices of various MTG cards for different countries, using the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5544876039028168,
                "back_trans_input": "Task: Find the prices of various MTG cards for different countries, using the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://tcgplayer.com/api](https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.3007585072921493
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find card information for a specific card. Name the API TCGdex API."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/categories\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/categories",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find all of the rare cards from a deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5362271395596592,
                "back_trans_input": "Task: find all of the rare cards from a deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **6.2.3.",
                "back_trans_input_tokens_mean": -2.302811693262171
            },
            {
                "idx": 2,
                "candidate": "Find the card for a specific type of monster.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4624772505326704,
                "back_trans_input": "Task: Find the card for a specific type of monster.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Hints: \n\n* The task is to find out what kind of creature it is (a",
                "back_trans_input_tokens_mean": -2.316931441978172
            },
            {
                "idx": 3,
                "candidate": "search cards based on their name, type and rarity",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6275459436269908,
                "back_trans_input": "Task: search cards based on their name, type and rarity\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: search decks based on their author or tag\n\nFunctionality:\nDescription:",
                "back_trans_input_tokens_mean": -2.3115240379616067
            },
            {
                "idx": 4,
                "candidate": "Find cards in the TCGdex.com database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7148185869057974,
                "back_trans_input": "Task: Find cards in the TCGdex.com database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n> This question has been asked during Google (2022) interviews",
                "back_trans_input_tokens_mean": -2.215665487809615
            },
            {
                "idx": 5,
                "candidate": "i want to check which card can you play in your deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9328558785574776,
                "back_trans_input": "Task: i want to check which card can you play in your deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input Format\n\nThe input line contains three space-separated integers N, M, K ",
                "back_trans_input_tokens_mean": -2.4330238479751722
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find cards in the TCGdex.com database."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/categories'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/categories",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "what is the list of all tcg decks?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0556182861328125,
                "back_trans_input": "Task: what is the list of all tcg decks?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Endpoint 2:\n\n```json\n{\n    \"id\": \"3b9e",
                "back_trans_input_tokens_mean": -2.3786366250779896
            },
            {
                "idx": 2,
                "candidate": "search for cards in the tcgdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8920747316800631,
                "back_trans_input": "Task: search for cards in the tcgdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n## Solution\n\n```sh\n#!/bin/bash\n# get a random number between 1",
                "back_trans_input_tokens_mean": -2.297377540005578
            },
            {
                "idx": 3,
                "candidate": "What API allows me to see a list of all cards that are in the \"Magic: The Gather",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1597735665061257,
                "back_trans_input": "Task: What API allows me to see a list of all cards that are in the &quot;Magic: The Gather\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nIdentifier: tcgplayer\nFunctionality: List All Cards\nDescription: Lists all Magic: The Gathering",
                "back_trans_input_tokens_mean": -2.4137725416293816
            },
            {
                "idx": 4,
                "candidate": "Find cards with the most value. Give me the top 20 values.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.0118582589285716,
                "back_trans_input": "Task: Find cards with the most value. Give me the top 20 values.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You must include your code in order to receive full credit!",
                "back_trans_input_tokens_mean": -2.3986533743090335
            },
            {
                "idx": 5,
                "candidate": "how do you use the TCGdex API in a web app?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9292570799589157,
                "back_trans_input": "Task: how do you use the TCGdex API in a web app?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# [TCGdex API](https://github.",
                "back_trans_input_tokens_mean": -2.2461898664457607
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "how do you use the TCGdex API in a web app?"
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/categories\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/categories",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Add a card to TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7383407137610696,
                "back_trans_input": "Task: Add a card to TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**NOTE:** You need to submit two files in order to complete the challenge, one with your answer as",
                "back_trans_input_tokens_mean": -2.213156126163624
            },
            {
                "idx": 2,
                "candidate": "Shows me every list of cards. Name the API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.228388468424479,
                "back_trans_input": "Task: Shows me every list of cards. Name the API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nFunctionality: Get all cards from tcgplayer.",
                "back_trans_input_tokens_mean": -2.5048865572028203
            },
            {
                "idx": 3,
                "candidate": "Get list of cards from the TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.244943767786026,
                "back_trans_input": "Task: Get list of cards from the TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## 2. Create a new directory with your team’s name in it\n\nIn",
                "back_trans_input_tokens_mean": -2.1938378045318325
            },
            {
                "idx": 4,
                "candidate": "Find all of the cards in my collection that have _ and also this specific card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9679294162326388,
                "back_trans_input": "Task: Find all of the cards in my collection that have _ and also this specific card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task\nFind all of the cards in my collection that have attack value less than or equal to ",
                "back_trans_input_tokens_mean": -2.3964740161238045
            },
            {
                "idx": 5,
                "candidate": "search for and download a list of every card in the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1190814905696445,
                "back_trans_input": "Task: search for and download a list of every card in the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## 2. What are endpoints?\n\n**Endpoints** are the URLs that define where requests can",
                "back_trans_input_tokens_mean": -2.1784650885540504
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Add a card to TCGdex API."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/categories\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/categories",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Get all the cards in the TCG deck database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.828252304684032,
                "back_trans_input": "Task: Get all the cards in the TCG deck database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Input Format\n\nThe first line contains an integer T -- the number of test cases.",
                "back_trans_input_tokens_mean": -2.2813380180148903
            },
            {
                "idx": 2,
                "candidate": "Find the names and prices of cards.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2277138449928977,
                "back_trans_input": "Task: Find the names and prices of cards.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### How To Solve This Task?\n\n1.",
                "back_trans_input_tokens_mean": -2.4326551562157746
            },
            {
                "idx": 3,
                "candidate": "Find the price of a card in a collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1097793579101562,
                "back_trans_input": "Task: Find the price of a card in a collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2. Create a new endpoint with its own id, description, function and api from scratch\n",
                "back_trans_input_tokens_mean": -2.2615681754218206
            },
            {
                "idx": 4,
                "candidate": "To read the card data of a game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.0749862670898436,
                "back_trans_input": "Task: To read the card data of a game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n(You can find more information about this API on [TCGplayer Developer Portal](https://develop",
                "back_trans_input_tokens_mean": -2.3354553864381025
            },
            {
                "idx": 5,
                "candidate": "Find an Anime card. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2776281152452742,
                "back_trans_input": "Task: Find an Anime card. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```js\nconst tcgdex = new TCGdex();\ntcgdex.",
                "back_trans_input_tokens_mean": -2.368207263946533
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find the price of a card in a collection."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/categories\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/categories",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How do you query the database? Name one API to do it.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.91876220703125,
                "back_trans_input": "Task: How do you query the database? Name one API to do it.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Endpoint Generator\n\n## Task\n\nIn order to generate endpoints with their functionalities, descriptions, and",
                "back_trans_input_tokens_mean": -2.3881800855909074
            },
            {
                "idx": 2,
                "candidate": "Find all of the current cards that have been added to the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0618837343321905,
                "back_trans_input": "Task: Find all of the current cards that have been added to the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n---\n\n# Endpoints\n\n## Endpoint Identifier\nThe endpoint identifier should be unique among endpoints within an",
                "back_trans_input_tokens_mean": -2.2272085896853744
            },
            {
                "idx": 3,
                "candidate": "Find a specific card. API name:TCGdex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0864506108420235,
                "back_trans_input": "Task: Find a specific card. API name:TCGdex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nIdentifier: /v1/cards/{card_id}\n\nName: Card",
                "back_trans_input_tokens_mean": -2.3758688059720128
            },
            {
                "idx": 4,
                "candidate": "Find all the cards in CCG. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.005224609375,
                "back_trans_input": "Task: Find all the cards in CCG. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nEndpoint ID:\n\nNote: The above information is just for reference purpose only.",
                "back_trans_input_tokens_mean": -2.2999098870606547
            },
            {
                "idx": 5,
                "candidate": "Find every card in TCGdex.com using the API endpoint",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3213454112410545,
                "back_trans_input": "Task: Find every card in TCGdex.com using the API endpoint\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"id\": \"1\",\n  \"name\": \"Rocket Blast",
                "back_trans_input_tokens_mean": -2.2617737225123813
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find all of the current cards that have been added to the TCGdex database."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/categories\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/categories",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "what card does TCGdex say a creature has in the set",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.835083745419979,
                "back_trans_input": "Task: what card does TCGdex say a creature has in the set\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```swagger\n/creature/{id}/set/{set_id}\n```",
                "back_trans_input_tokens_mean": -2.5087898458753313
            },
            {
                "idx": 2,
                "candidate": "Find the best value of my cards. Using TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3222699388861656,
                "back_trans_input": "Task: Find the best value of my cards. Using TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### The Task\n\nThe goal here is to use the information provided about the endpoint in order to regener",
                "back_trans_input_tokens_mean": -2.3468859259006196
            },
            {
                "idx": 3,
                "candidate": "Create a deck for Magic. Use TCGdex API as an example.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.284363494199865,
                "back_trans_input": "Task: Create a deck for Magic. Use TCGdex API as an example.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task\n\nThis challenge requires that you create a new application using the OpenAPI Specification v3 ",
                "back_trans_input_tokens_mean": -2.3332618412218595
            },
            {
                "idx": 4,
                "candidate": "Find cards by keyword. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9911225736141205,
                "back_trans_input": "Task: Find cards by keyword. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Hints\n\n > **HINT1:** Look at the documentation in your workspace for help!",
                "back_trans_input_tokens_mean": -2.30767839605158
            },
            {
                "idx": 5,
                "candidate": "find card name by a code. Use TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.584993028640747,
                "back_trans_input": "Task: find card name by a code. Use TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n> Note that endpoints are not necessarily unique, so do not assume the same endpoint can only have one functionality",
                "back_trans_input_tokens_mean": -2.413363791800834
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find cards by keyword. Use TCGdex API."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/categories\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/categories",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all the cards in a given collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0464431762695312,
                "back_trans_input": "Task: Find all the cards in a given collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"identifier\": \"find_cards\",\n    \"functionality\": \"",
                "back_trans_input_tokens_mean": -2.288978754917038
            },
            {
                "idx": 2,
                "candidate": "How do I use a TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8850882848103842,
                "back_trans_input": "Task: How do I use a TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How should I submit my answer?\n\nPlease create a pull request against the repository with your solution",
                "back_trans_input_tokens_mean": -2.231642626841134
            },
            {
                "idx": 3,
                "candidate": "Find all of the cards listed on TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9826851387818655,
                "back_trans_input": "Task: Find all of the cards listed on TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Solution\n```php\n$endpoint = \"https://api.",
                "back_trans_input_tokens_mean": -2.2602583451704548
            },
            {
                "idx": 4,
                "candidate": "How do I retrieve cards from the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9544559900577252,
                "back_trans_input": "Task: How do I retrieve cards from the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Hints/Tips\n\n * The endpoint, its functionality, and its description are all available on the",
                "back_trans_input_tokens_mean": -2.198727289835612
            },
            {
                "idx": 5,
                "candidate": "Find a specific card with no images. Name the API TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1731611092885335,
                "back_trans_input": "Task: Find a specific card with no images. Name the API TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nFunctionality: Get cards by ID\n\nDescription: \nGet all cards in your collection that",
                "back_trans_input_tokens_mean": -2.362324859784997
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "How do I use a TCGdex API?"
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/categories/%7Bcategory%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/categories/{category}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all cards by their name. API: TCGdex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1101608872413635,
                "back_trans_input": "Task: Find all cards by their name. API: TCGdex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nIdentifier: c7c5f8e6-d9a2-4bf1-",
                "back_trans_input_tokens_mean": -2.312851403210614
            },
            {
                "idx": 2,
                "candidate": "Use TCGdex API to list all cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1499405123970725,
                "back_trans_input": "Task: Use TCGdex API to list all cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Notes\n\n * All endpoints are in the format `https://api.",
                "back_trans_input_tokens_mean": -2.259736314826055
            },
            {
                "idx": 3,
                "candidate": "Find the price of a card. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5319752991199493,
                "back_trans_input": "Task: Find the price of a card. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n(Note that these are example endpoints)\n\n### 2.",
                "back_trans_input_tokens_mean": -2.2275525320947698
            },
            {
                "idx": 4,
                "candidate": "find all magic the gathering cards. name of the api endpoint?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.397055689493815,
                "back_trans_input": "Task: find all magic the gathering cards. name of the api endpoint?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://github.com/karlatgus/tcgdex](https://github.",
                "back_trans_input_tokens_mean": -2.4699891580117717
            },
            {
                "idx": 5,
                "candidate": "To find the current set of cards in a MTG card, you can use TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4650457284667275,
                "back_trans_input": "Task: To find the current set of cards in a MTG card, you can use TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Task\n\n## Endpoint's Identifier \n\n* The first part of the URL after https://api",
                "back_trans_input_tokens_mean": -2.408087177436893
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find the price of a card. Use the TCGdex API."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/categories/%7Bcategory%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/categories/{category}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Lists all available cards. Get the full list of cards for a specific card game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9419194271689968,
                "back_trans_input": "Task: Lists all available cards. Get the full list of cards for a specific card game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoints in your solution must match those provided above exactly.",
                "back_trans_input_tokens_mean": -2.297601882271145
            },
            {
                "idx": 2,
                "candidate": "Find all cards from a particular set. Use TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8561285585165024,
                "back_trans_input": "Task: Find all cards from a particular set. Use TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Solution\n\n```javascript\nfunction getCardsFromSet(setName) {\n  return fetch",
                "back_trans_input_tokens_mean": -2.3106469086238315
            },
            {
                "idx": 3,
                "candidate": "what's the name of the API that let me look up a card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4566250688889448,
                "back_trans_input": "Task: what&#x27;s the name of the API that let me look up a card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Notes on the Task\n\n### The Endpoint Identifier\n\n**Note:** You are not required to match",
                "back_trans_input_tokens_mean": -2.355079422649155
            },
            {
                "idx": 4,
                "candidate": "What is the best way to get a database of cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1362879826472356,
                "back_trans_input": "Task: What is the best way to get a database of cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## 2. Write an OpenAPI specification file that describes your service\n\nYour work is to write",
                "back_trans_input_tokens_mean": -2.298581868951971
            },
            {
                "idx": 5,
                "candidate": "How can I list all of the cards in the TCGdex library?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0628266036510468,
                "back_trans_input": "Task: How can I list all of the cards in the TCGdex library?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input Format\n\nInput format consists of the following information separated by commas: \n\n* The first",
                "back_trans_input_tokens_mean": -2.2624706301772806
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find all cards from a particular set. Use TCGdex API"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.tcgdex.net/v2/%7Blang%7D/categories/%7Bcategory%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/categories/{category}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find what cards are in TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.294693160057068,
                "back_trans_input": "Task: Find what cards are in TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint: https://tcgplayerapi.",
                "back_trans_input_tokens_mean": -2.2561413976881237
            },
            {
                "idx": 2,
                "candidate": "How to use the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.714355981349945,
                "back_trans_input": "Task: How to use the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://github.com/TheCodingGenie/TCGdex](https://github",
                "back_trans_input_tokens_mean": -2.194561004638672
            },
            {
                "idx": 3,
                "candidate": "how do you search the card database?n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2362143776633523,
                "back_trans_input": "Task: how do you search the card database?n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://docs.cardano-community.",
                "back_trans_input_tokens_mean": -2.4660740433452286
            },
            {
                "idx": 4,
                "candidate": "How can I add a new card to TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7843447497912815,
                "back_trans_input": "Task: How can I add a new card to TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[Hint] This challenge does not require any authentication or authorization tokens.",
                "back_trans_input_tokens_mean": -2.1950314152348147
            },
            {
                "idx": 5,
                "candidate": "Find all the card that have an image of a particular mandala in its art.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7131858825683595,
                "back_trans_input": "Task: Find all the card that have an image of a particular mandala in its art.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTo solve your problem:\n\n * You can use any language or toolchain\n * You",
                "back_trans_input_tokens_mean": -2.447720303742782
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "How to use the TCGdex API?"
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/categories/%7Bcategory%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/categories/{category}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find a card in the database of games.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9082366943359375,
                "back_trans_input": "Task: find a card in the database of games.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### The answer must contain all four required elements.",
                "back_trans_input_tokens_mean": -2.340912328702267
            },
            {
                "idx": 2,
                "candidate": "Query data from TCGdex using the API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4963722229003906,
                "back_trans_input": "Task: Query data from TCGdex using the API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** The endpoints are available in the docs folder under the root directory of your project.",
                "back_trans_input_tokens_mean": -2.2481910810558072
            },
            {
                "idx": 3,
                "candidate": "Create a database of all the cards in a game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.049070064838116,
                "back_trans_input": "Task: Create a database of all the cards in a game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [Task 2](https://github.",
                "back_trans_input_tokens_mean": -2.2532318885173273
            },
            {
                "idx": 4,
                "candidate": "To get the list of all cards in an existing collection using TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2607422404819064,
                "back_trans_input": "Task: To get the list of all cards in an existing collection using TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How to use it?\n\n1.",
                "back_trans_input_tokens_mean": -2.2597372449677566
            },
            {
                "idx": 5,
                "candidate": "what is the name of the API that helps find all cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5619741586538463,
                "back_trans_input": "Task: what is the name of the API that helps find all cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n```json\n{\n    \"cards\": [\n        ...",
                "back_trans_input_tokens_mean": -2.3039725020125106
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Create a database of all the cards in a game."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/categories/%7Bcategory%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/categories/{category}",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Create a database on cards I have.r",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.1165895462036133,
                "back_trans_input": "Task: Create a database on cards I have.r\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Write your endpoints in a file named `endpoints.",
                "back_trans_input_tokens_mean": -2.595816663492506
            },
            {
                "idx": 2,
                "candidate": "To find cards in a deck, use this API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4423834482828777,
                "back_trans_input": "Task: To find cards in a deck, use this API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input Format\n\nThe first line contains three integers n, m, k (1 ≤ n",
                "back_trans_input_tokens_mean": -2.309412289103237
            },
            {
                "idx": 3,
                "candidate": "I need the name of a card in Magic's database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5942488312721252,
                "back_trans_input": "Task: I need the name of a card in Magic&#x27;s database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n### 2.3. [Endpoint](https://github.",
                "back_trans_input_tokens_mean": -2.3636604338361504
            },
            {
                "idx": 4,
                "candidate": "Find a list of cards by name. Show all the information about them, including images and costs to build",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7196759310635654,
                "back_trans_input": "Task: Find a list of cards by name. Show all the information about them, including images and costs to build\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Endpoint Generation\n* **Endpoint ID:** `/api/cards/{name}`\n",
                "back_trans_input_tokens_mean": -2.4067311226820745
            },
            {
                "idx": 5,
                "candidate": "Find cards in a set. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7403895537058512,
                "back_trans_input": "Task: Find cards in a set. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [⬆ back to top](#table-of-contents)\n\n\n## Exercise 3",
                "back_trans_input_tokens_mean": -2.270048147865704
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find cards in a set. Use the TCGdex API."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/categories/%7Bcategory%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/categories/{category}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all cards with a certain keyword in it.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2775407270951704,
                "back_trans_input": "Task: Find all cards with a certain keyword in it.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solution Outline\n\n1. Create an Endpoint using a GET request method that returns a list of",
                "back_trans_input_tokens_mean": -2.317403969941316
            },
            {
                "idx": 2,
                "candidate": "Find the cards in a specific magic set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.412237548828125,
                "back_trans_input": "Task: Find the cards in a specific magic set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** (If you get stuck): Look at what information we have already given you :)",
                "back_trans_input_tokens_mean": -2.3513304451915706
            },
            {
                "idx": 3,
                "candidate": "what is the name of an API that allows me to find a specific card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0952841814826517,
                "back_trans_input": "Task: what is the name of an API that allows me to find a specific card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nEndpoints are usually defined in JSON format.",
                "back_trans_input_tokens_mean": -2.260138227228533
            },
            {
                "idx": 4,
                "candidate": "Find a list of all the card prices and rarities in TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.141453742980957,
                "back_trans_input": "Task: Find a list of all the card prices and rarities in TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n---\n\n<details>\n  <summary><b>Click here for the solution</b></summary>",
                "back_trans_input_tokens_mean": -2.24063909464869
            },
            {
                "idx": 5,
                "candidate": "Find a card in Magic.? I am interested to know about the name and number of cards that have",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8151175759055398,
                "back_trans_input": "Task: Find a card in Magic.? I am interested to know about the name and number of cards that have\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n*/\n\nfunction getCardInfo(cardName) {\n  let url = `https",
                "back_trans_input_tokens_mean": -2.606192152378923
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "what is the name of an API that allows me to find a specific card?"
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/categories/%7Bcategory%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/categories/{category}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Get the number of cards in a deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9657005310058594,
                "back_trans_input": "Task: Get the number of cards in a deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint\n```json\n{\n    \"id\": \"deck_cards\",\n    \"function",
                "back_trans_input_tokens_mean": -2.234534753817264
            },
            {
                "idx": 2,
                "candidate": "Show me all cards in the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9387499744241888,
                "back_trans_input": "Task: Show me all cards in the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** You can use the `endpoints` function from your code editor or terminal window;",
                "back_trans_input_tokens_mean": -2.2594186625349413
            },
            {
                "idx": 3,
                "candidate": "What API can I use to check the name of a card or find its image?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4508927530712552,
                "back_trans_input": "Task: What API can I use to check the name of a card or find its image?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## Task \n\n* What API can I use to get information about my account?",
                "back_trans_input_tokens_mean": -2.345022483493971
            },
            {
                "idx": 4,
                "candidate": "Find the name of a card in my collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.793690724806352,
                "back_trans_input": "Task: Find the name of a card in my collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** *The endpoint ID contains two words separated by a dash.",
                "back_trans_input_tokens_mean": -2.2478768737227828
            },
            {
                "idx": 5,
                "candidate": "Find card prices. - API name: TCGdex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4105520589011056,
                "back_trans_input": "Task: Find card prices. - API name: TCGdex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nEndpoint: https://tcgplayer-api.",
                "back_trans_input_tokens_mean": -2.355241921570924
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find the name of a card in my collection."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/categories/%7Bcategory%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/categories/{category}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "what is the url for my TCG cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.737517616965554,
                "back_trans_input": "Task: what is the url for my TCG cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task 2:\n\nTask: what is the url for my TCG card sets?",
                "back_trans_input_tokens_mean": -2.3458207095110857
            },
            {
                "idx": 2,
                "candidate": "api to get list of all cards in TCG",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4209320545196533,
                "back_trans_input": "Task: api to get list of all cards in TCG\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n## 2. Generate a new random string that can be used as an endpoint identifier\n\n",
                "back_trans_input_tokens_mean": -2.3391105157357677
            },
            {
                "idx": 3,
                "candidate": "Find all cards in the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7164310216903687,
                "back_trans_input": "Task: Find all cards in the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**NOTE:** The endpoints are located at https://github.",
                "back_trans_input_tokens_mean": -2.2321266068352594
            },
            {
                "idx": 4,
                "candidate": "what is the API for searching card lists? .",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8150301846590908,
                "back_trans_input": "Task: what is the API for searching card lists? .\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solution\n\nYou can find your solution in `src/solution`.",
                "back_trans_input_tokens_mean": -2.373328707633762
            },
            {
                "idx": 5,
                "candidate": "Use the TCGdex API to query for card info.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1072276005378137,
                "back_trans_input": "Task: Use the TCGdex API to query for card info.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How to submit your solution?\n\n1.",
                "back_trans_input_tokens_mean": -2.2579699164038307
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find all cards in the TCGdex."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/dex-ids",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/dex-ids",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find cards with certain abilities.rr",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.474269520152699,
                "back_trans_input": "Task: find cards with certain abilities.rr\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Re-Generate Endpoint Identifier\n\nThe endpoint identifier should start with '/tc",
                "back_trans_input_tokens_mean": -2.4833736238025486
            },
            {
                "idx": 2,
                "candidate": "Find the value of a card. Name the API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6945897738138834,
                "back_trans_input": "Task: Find the value of a card. Name the API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Expected Output\n\n\n```json\n{\n    \"endpoint_identifier\": \"1\",\n    \"function",
                "back_trans_input_tokens_mean": -2.3465988089185243
            },
            {
                "idx": 3,
                "candidate": "chang the card name in the tcgdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6371437072753907,
                "back_trans_input": "Task: chang the card name in the tcgdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n- [https://github.com/TCG-DEX/tcg-dex-",
                "back_trans_input_tokens_mean": -2.5146568792837636
            },
            {
                "idx": 4,
                "candidate": "Create a new user account. Name the API TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0488912612199783,
                "back_trans_input": "Task: Create a new user account. Name the API TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nEndpoint: http://127.0.0.",
                "back_trans_input_tokens_mean": -2.283166121592564
            },
            {
                "idx": 5,
                "candidate": "Find the current value of a Magic: The Gathering trading card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0661913871765136,
                "back_trans_input": "Task: Find the current value of a Magic: The Gathering trading card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 5.3.2.2.",
                "back_trans_input_tokens_mean": -2.255284661645288
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find the value of a card. Name the API."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/dex-ids\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/dex-ids",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What TCGdex API is used for?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.310031819343567,
                "back_trans_input": "Task: What TCGdex API is used for?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## 2. What are the endpoints in the `/tcg-trades`",
                "back_trans_input_tokens_mean": -2.2137808623137296
            },
            {
                "idx": 2,
                "candidate": "What API should I use to find the name of a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9457387583596366,
                "back_trans_input": "Task: What API should I use to find the name of a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## Endpoint 1\n\n**Endpoint:** Get a list of all cards in a set\n\n**Identifier",
                "back_trans_input_tokens_mean": -2.2798938579387493
            },
            {
                "idx": 3,
                "candidate": "Find what card is the most expensive in my deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4600275213068181,
                "back_trans_input": "Task: Find what card is the most expensive in my deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task\n* Find all cards that have been sold by users within last day with price greater than ",
                "back_trans_input_tokens_mean": -2.3202974161970507
            },
            {
                "idx": 4,
                "candidate": "Identify cards in the Magic: The Gathering card set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.339517932671767,
                "back_trans_input": "Task: Identify cards in the Magic: The Gathering card set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://github.com/tcgplayer/TCGdex](https://github.",
                "back_trans_input_tokens_mean": -2.303696553641503
            },
            {
                "idx": 5,
                "candidate": "i want to look up the value of a card for magic the gathering",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1773654713350183,
                "back_trans_input": "Task: i want to look up the value of a card for magic the gathering\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n##### Hint1:\n\nThe endpoints are found in the json file located at https://github",
                "back_trans_input_tokens_mean": -2.369999647140503
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "What API should I use to find the name of a card?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/dex-ids'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/dex-ids",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is the URL to TCG-dex's API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7599173528807504,
                "back_trans_input": "Task: What is the URL to TCG-dex&#x27;s API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1.1 How can I test my endpoints?",
                "back_trans_input_tokens_mean": -2.333926126231318
            },
            {
                "idx": 2,
                "candidate": "What site has info on Magic the Gathering?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8643824338912964,
                "back_trans_input": "Task: What site has info on Magic the Gathering?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:**\nThe endpoint is located in the documentation page under the \"Resources\" section.",
                "back_trans_input_tokens_mean": -2.4121414255873064
            },
            {
                "idx": 3,
                "candidate": "search for a card using TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9723155001799265,
                "back_trans_input": "Task: search for a card using TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** This challenge was created by [HackTheBox](https://www.",
                "back_trans_input_tokens_mean": -2.2335115835207318
            },
            {
                "idx": 4,
                "candidate": "show all of the cards in the database with their names, and what type they are",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7322646247016058,
                "back_trans_input": "Task: show all of the cards in the database with their names, and what type they are\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\nfunction getCards() {\n  return db\n    .",
                "back_trans_input_tokens_mean": -2.3602772920028023
            },
            {
                "idx": 5,
                "candidate": "To get a list of every card in the collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4808521270751953,
                "back_trans_input": "Task: To get a list of every card in the collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The information provided here was generated using the following command on the `api/v1",
                "back_trans_input_tokens_mean": -2.2785639281666605
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "search for a card using TCGdex API."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/dex-ids\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/dex-ids",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Create a TCGdex API account.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9985642671585083,
                "back_trans_input": "Task: Create a TCGdex API account.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Please note that your output should not contain any whitespace.",
                "back_trans_input_tokens_mean": -2.2293497067745602
            },
            {
                "idx": 2,
                "candidate": "Find all the TCGdex wiki articles.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.548986478285356,
                "back_trans_input": "Task: Find all the TCGdex wiki articles.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nSolution: \n```python\n# endpoint_1/endpoint-generator.",
                "back_trans_input_tokens_mean": -2.3386892477671304
            },
            {
                "idx": 3,
                "candidate": "Create a list of random cards. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8745998367667198,
                "back_trans_input": "Task: Create a list of random cards. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Get all card names from the TCGdex API.",
                "back_trans_input_tokens_mean": -2.226040207179247
            },
            {
                "idx": 4,
                "candidate": "Find the name of a card in a database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7820072968800863,
                "back_trans_input": "Task: Find the name of a card in a database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n*Note that the endpoints are not always in the same order as they appear here.",
                "back_trans_input_tokens_mean": -2.265935085437916
            },
            {
                "idx": 5,
                "candidate": "Create a file that describes all the cards for a particular game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6891952514648438,
                "back_trans_input": "Task: Create a file that describes all the cards for a particular game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<details>\n  <summary><b>Click here for the solution</b></summary>",
                "back_trans_input_tokens_mean": -2.2976060815759607
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find the name of a card in a database."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/dex-ids\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/dex-ids",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Add a card to TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.63465256690979,
                "back_trans_input": "Task: Add a card to TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Create a new file in your project named `index.",
                "back_trans_input_tokens_mean": -2.2093168775611947
            },
            {
                "idx": 2,
                "candidate": "Can I use TCGdex API to download a list of all current card prices for every single M",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6491875106638128,
                "back_trans_input": "Task: Can I use TCGdex API to download a list of all current card prices for every single M\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[Task 1](https://github.",
                "back_trans_input_tokens_mean": -2.466098336612477
            },
            {
                "idx": 3,
                "candidate": "What does TCGdex have that shows which card is the most powerful for a given set of cards",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.814131503755396,
                "back_trans_input": "Task: What does TCGdex have that shows which card is the most powerful for a given set of cards\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2.7.2.1.",
                "back_trans_input_tokens_mean": -2.3762676655745305
            },
            {
                "idx": 4,
                "candidate": "Show a list of all cards in every deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4029298262162642,
                "back_trans_input": "Task: Show a list of all cards in every deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n### Sample Output\n```json\n{\n  \"id\": \"show_cards\",\n  ",
                "back_trans_input_tokens_mean": -2.3032761679755316
            },
            {
                "idx": 5,
                "candidate": "Find information about a card. Name the API TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.757799543440342,
                "back_trans_input": "Task: Find information about a card. Name the API TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nIdentifier:\n\nFunctionality:\n\nDescription:\n\nEndpoint:\n\n",
                "back_trans_input_tokens_mean": -2.3059081862458086
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Add a card to TCGdex."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/dex-ids\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/dex-ids",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "what are all the cards in the Magic: The Gathering database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0986759151731218,
                "back_trans_input": "Task: what are all the cards in the Magic: The Gathering database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n### Solution\n\n```javascript\n// Given that there is no card with id = 0",
                "back_trans_input_tokens_mean": -2.303643235215196
            },
            {
                "idx": 2,
                "candidate": "what is the API to access TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1799770918759434,
                "back_trans_input": "Task: what is the API to access TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nTask: what is the API to access TCGdex?",
                "back_trans_input_tokens_mean": -2.252531025387825
            },
            {
                "idx": 3,
                "candidate": "Find information of cards.?I'm interested to know the name and artist, how many different colors each",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.4923761541193183,
                "back_trans_input": "Task: Find information of cards.?I&#x27;m interested to know the name and artist, how many different colors each\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2?I want to see what my collection looks like in a pie chart.",
                "back_trans_input_tokens_mean": -2.692195610921891
            },
            {
                "idx": 4,
                "candidate": "What data is in the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1875314929268577,
                "back_trans_input": "Task: What data is in the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n# Solution\n\nIn order to solve the problem we need to take into account that there are",
                "back_trans_input_tokens_mean": -2.2330868047311765
            },
            {
                "idx": 5,
                "candidate": "Find the prices of various collectible cards for Magic: The Gathering.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4806368271509807,
                "back_trans_input": "Task: Find the prices of various collectible cards for Magic: The Gathering.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://tcgplayerapi.com/docs](https://tcgplayerapi.",
                "back_trans_input_tokens_mean": -2.283384084701538
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "what are all the cards in the Magic: The Gathering database?"
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/dex-ids\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/dex-ids",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Create a list of all cards in a given set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8665953416090745,
                "back_trans_input": "Task: Create a list of all cards in a given set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## 2. Generate an API token using the Open API Specification\n\nThe second part of",
                "back_trans_input_tokens_mean": -2.264691589075491
            },
            {
                "idx": 2,
                "candidate": "What are the names of all the card dexes tcgdex has?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2379050254821777,
                "back_trans_input": "Task: What are the names of all the card dexes tcgdex has?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Hint\n\nThe endpoint is located in the file `tcg/endpoints/cards",
                "back_trans_input_tokens_mean": -2.3597974017658063
            },
            {
                "idx": 3,
                "candidate": "Show all the cards in a particular game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.476169967651367,
                "back_trans_input": "Task: Show all the cards in a particular game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Endpoint identifier: show_cards\n\n",
                "back_trans_input_tokens_mean": -2.3143062769809615
            },
            {
                "idx": 4,
                "candidate": "what card does it say in the database?n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7371597290039062,
                "back_trans_input": "Task: what card does it say in the database?n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. The Endpoint Generator\n\n### Endpoint Generator\n\nThis program will generate endpoints based",
                "back_trans_input_tokens_mean": -2.5460240752608687
            },
            {
                "idx": 5,
                "candidate": "What can I use this API to do? Ask it!",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6095366844764123,
                "back_trans_input": "Task: What can I use this API to do? Ask it!\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n[https://github.com/tcgplayer-labs/tcgdex-api",
                "back_trans_input_tokens_mean": -2.3774166107177734
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Create a list of all cards in a given set."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/dex-ids\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/dex-ids",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the best rare in a set.?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8193443298339844,
                "back_trans_input": "Task: Find the best rare in a set.?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solutions\n\n[Solution by @nathancollins](https://github.",
                "back_trans_input_tokens_mean": -2.518553560634829
            },
            {
                "idx": 2,
                "candidate": "Find a card's name. I need to get this info from TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2690315076283045,
                "back_trans_input": "Task: Find a card&#x27;s name. I need to get this info from TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Find the Card Name and Display it on a Web Page\n\n### Task 1:",
                "back_trans_input_tokens_mean": -2.3075867704123505
            },
            {
                "idx": 3,
                "candidate": "Find the most recent list of cards added to TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3421963453292847,
                "back_trans_input": "Task: Find the most recent list of cards added to TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint 1/2: \nEndpoints are a way for users of your APIs to",
                "back_trans_input_tokens_mean": -2.240996780648696
            },
            {
                "idx": 4,
                "candidate": "Add a card to the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5238233407338461,
                "back_trans_input": "Task: Add a card to the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2\n\nTask: Add a new item to a user's inventory in the TCG",
                "back_trans_input_tokens_mean": -2.2021163166116136
            },
            {
                "idx": 5,
                "candidate": "What are some examples of what I can search for on TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.175269640982151,
                "back_trans_input": "Task: What are some examples of what I can search for on TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Solution\n\nHere the endpoints are named based on their functionality and their namespaces.",
                "back_trans_input_tokens_mean": -2.2789953696100334
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Add a card to the TCGdex database."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/dex-ids/%7BdexId%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/dex-ids/{dexId}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all the sets for a specific card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1773719787597656,
                "back_trans_input": "Task: Find all the sets for a specific card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n\n\n<details>\n    <summary>Click here for the solution</summary>\n\n    ```python\n    import",
                "back_trans_input_tokens_mean": -2.3380255543182944
            },
            {
                "idx": 2,
                "candidate": "Add a new card to the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5966800634677594,
                "back_trans_input": "Task: Add a new card to the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```bash\ncurl https://api-tcg.",
                "back_trans_input_tokens_mean": -2.1677769509228795
            },
            {
                "idx": 3,
                "candidate": "Find all magic the gathering card names. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9296960353851318,
                "back_trans_input": "Task: Find all magic the gathering card names. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nEndpoints are often used for authentication, authorization, and resource management.",
                "back_trans_input_tokens_mean": -2.313781618017011
            },
            {
                "idx": 4,
                "candidate": "How to use TCGdex API?.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8243546962738038,
                "back_trans_input": "Task: How to use TCGdex API?.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Input Format \n\nThe first line contains two integers N and M denoting the number of endpoints in",
                "back_trans_input_tokens_mean": -2.2914233408241627
            },
            {
                "idx": 5,
                "candidate": "What is the latest version of the API? ",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3331019083658855,
                "back_trans_input": "Task: What is the latest version of the API? \n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task\n\nWhat is the latest version of the API?",
                "back_trans_input_tokens_mean": -2.258147077025654
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Add a new card to the TCGdex API."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/dex-ids/%7BdexId%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/dex-ids/{dexId}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How would I access the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.091936544938521,
                "back_trans_input": "Task: How would I access the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2 (3 points)\n\nYou are given two endpoints that belong to different APIs",
                "back_trans_input_tokens_mean": -2.234865766052806
            },
            {
                "idx": 2,
                "candidate": "Create a deck.name with the API TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5760176181793213,
                "back_trans_input": "Task: Create a deck.name with the API TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** The answer can be found in the docs!",
                "back_trans_input_tokens_mean": -2.4501191388379344
            },
            {
                "idx": 3,
                "candidate": "How do I access the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6468847664919767,
                "back_trans_input": "Task: How do I access the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Endpoint Identifier\n\nThe endpoint id should be generated by using `uuidv4`.",
                "back_trans_input_tokens_mean": -2.1976691692247305
            },
            {
                "idx": 4,
                "candidate": "Find all the cards for a Magic the Gathering collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.303557065817026,
                "back_trans_input": "Task: Find all the cards for a Magic the Gathering collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://github.com/tcgplayer/api](https://github.",
                "back_trans_input_tokens_mean": -2.343577778667485
            },
            {
                "idx": 5,
                "candidate": "Find the set of all cards that can exist on a card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9801461356026786,
                "back_trans_input": "Task: Find the set of all cards that can exist on a card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## -->\n```\n\nThe expected output should look like below.",
                "back_trans_input_tokens_mean": -2.3900979188111453
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "How do I access the TCGdex API?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/dex-ids/%7BdexId%7D'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/dex-ids/{dexId}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Get the TCGdex number of a Magic deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.641563708965595,
                "back_trans_input": "Task: Get the TCGdex number of a Magic deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [Editorial](https://leetcode.",
                "back_trans_input_tokens_mean": -2.3565822254527697
            },
            {
                "idx": 2,
                "candidate": "What are some popular card decks used in Magic: The Gathering?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4619219303131104,
                "back_trans_input": "Task: What are some popular card decks used in Magic: The Gathering?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Expected results:**\n\n```json\n{\n  \"endpoint_id\": \"1\",\n  \"",
                "back_trans_input_tokens_mean": -2.325597505311708
            },
            {
                "idx": 3,
                "candidate": "Find the value of a magic card. I want to know the \"collectible trading card game\" cards",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4593765518882058,
                "back_trans_input": "Task: Find the value of a magic card. I want to know the &quot;collectible trading card game&quot; cards\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task2 (Hard)\n\nYou are asked to create an endpoint that returns all values in",
                "back_trans_input_tokens_mean": -2.376087834758143
            },
            {
                "idx": 4,
                "candidate": "what is the name of every card in the game?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4041664817116477,
                "back_trans_input": "Task: what is the name of every card in the game?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hints:\n\nThe answer can be found by looking at a card that has been added to",
                "back_trans_input_tokens_mean": -2.260971314316496
            },
            {
                "idx": 5,
                "candidate": "Get the name, flavor text of a card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8571494709361682,
                "back_trans_input": "Task: Get the name, flavor text of a card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n##### Example Response\n\n\n\n```json\n{\n    \"endpoint\": {\n        \"id\": \"",
                "back_trans_input_tokens_mean": -2.3196316825018988
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "what is the name of every card in the game?"
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/dex-ids/%7BdexId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/dex-ids/{dexId}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find all the cards for a certain set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1895584106445312,
                "back_trans_input": "Task: find all the cards for a certain set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How To Run This Task?\n\n1.",
                "back_trans_input_tokens_mean": -2.318978461149697
            },
            {
                "idx": 2,
                "candidate": "Query for every card from this database. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4702140162972843,
                "back_trans_input": "Task: Query for every card from this database. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How to run locally?\n\n1.",
                "back_trans_input_tokens_mean": -2.399829362568102
            },
            {
                "idx": 3,
                "candidate": "Find an image for the card with name \"TCGdex\"",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.52075191338857,
                "back_trans_input": "Task: Find an image for the card with name &quot;TCGdex&quot;\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n### **Step 1.** Find the image file that corresponds to your endpoint\n\n* Go to this",
                "back_trans_input_tokens_mean": -2.2798131633008647
            },
            {
                "idx": 4,
                "candidate": "Identify a card by number or search for a specific card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8925440470377604,
                "back_trans_input": "Task: Identify a card by number or search for a specific card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n[Task](https://github.com/1Hive/1hive-eth-monorepo",
                "back_trans_input_tokens_mean": -2.3011132326993073
            },
            {
                "idx": 5,
                "candidate": "Use the TCGdex API to find information about a card name.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9587756171822548,
                "back_trans_input": "Task: Use the TCGdex API to find information about a card name.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## -->\n```bash\ncurl \"https://tcgplayerapi.",
                "back_trans_input_tokens_mean": -2.2421417278526103
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Use the TCGdex API to find information about a card name."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/dex-ids/%7BdexId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/dex-ids/{dexId}",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Add a card to TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6358473300933838,
                "back_trans_input": "Task: Add a card to TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input Format\n\nThe first line contains two integers N and M, where N is the number of",
                "back_trans_input_tokens_mean": -2.2093168775611947
            },
            {
                "idx": 2,
                "candidate": "I want to create a custom deck for trading cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9649613698323567,
                "back_trans_input": "Task: I want to create a custom deck for trading cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 1. Create a new file called endpoints/deck_create.",
                "back_trans_input_tokens_mean": -2.3117922511669473
            },
            {
                "idx": 3,
                "candidate": "Find the most popular card in a Magic: The Gathering deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9314950625101726,
                "back_trans_input": "Task: Find the most popular card in a Magic: The Gathering deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Search through an array of objects that contain two properties called firstName and lastName",
                "back_trans_input_tokens_mean": -2.215077202599328
            },
            {
                "idx": 4,
                "candidate": "what is the id for the card \"Twin Suns\"",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2535213232040405,
                "back_trans_input": "Task: what is the id for the card &quot;Twin Suns&quot;\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nExample solution (don't copy):\n```javascript\nfunction getCardId({",
                "back_trans_input_tokens_mean": -2.4063828509786855
            },
            {
                "idx": 5,
                "candidate": "Find the list of a card's stats.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.095810850461324,
                "back_trans_input": "Task: Find the list of a card&#x27;s stats.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```bash\ncurl https://api.tcgplayer.",
                "back_trans_input_tokens_mean": -2.342552494358372
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Add a card to TCGdex."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/dex-ids/%7BdexId%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/dex-ids/{dexId}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find any card i can get my hands on.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9524796225807883,
                "back_trans_input": "Task: Find any card i can get my hands on.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"id\": \"get_cards\",\n    \"function\": \"find",
                "back_trans_input_tokens_mean": -2.4301509724722967
            },
            {
                "idx": 2,
                "candidate": "What is the API to check the stats on a cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6379331861223494,
                "back_trans_input": "Task: What is the API to check the stats on a cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Endpoint\n\nThe endpoints are stored in the file [endpoints.",
                "back_trans_input_tokens_mean": -2.354756333611228
            },
            {
                "idx": 3,
                "candidate": "How can I check to see if a card is in the database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.869933009147644,
                "back_trans_input": "Task: How can I check to see if a card is in the database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```\nGET https://api.thecomicgenius.",
                "back_trans_input_tokens_mean": -2.2827366973672594
            },
            {
                "idx": 4,
                "candidate": "Find all of the cards in a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6946310043334961,
                "back_trans_input": "Task: Find all of the cards in a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://tcgplayer.com/apis/v1/](https://tcgplayer",
                "back_trans_input_tokens_mean": -2.2999742766407048
            },
            {
                "idx": 5,
                "candidate": "how can i add my card into this database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.915984413840554,
                "back_trans_input": "Task: how can i add my card into this database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Get an existing endpoint from the endpoint list\n\n\n```javascript\n// Write your code below",
                "back_trans_input_tokens_mean": -2.4763582326747753
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find all of the cards in a set."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/dex-ids/%7BdexId%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/dex-ids/{dexId}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the set number of a card in a database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0980943533090444,
                "back_trans_input": "Task: Find the set number of a card in a database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n(There are no endpoints with a similar function)",
                "back_trans_input_tokens_mean": -2.3517382210547773
            },
            {
                "idx": 2,
                "candidate": "Add a card from the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7539315720399221,
                "back_trans_input": "Task: Add a card from the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Your answer in code form\n\n```javascript {.",
                "back_trans_input_tokens_mean": -2.2274268439056675
            },
            {
                "idx": 3,
                "candidate": "How can I use the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6601052717729048,
                "back_trans_input": "Task: How can I use the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solution Notes\n\nThe solution is in `src/main/java/com/github/",
                "back_trans_input_tokens_mean": -2.215911970226043
            },
            {
                "idx": 4,
                "candidate": "I need an API that has all of the images from TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6085888296365738,
                "back_trans_input": "Task: I need an API that has all of the images from TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2.2 [API Endpoint](https://github.",
                "back_trans_input_tokens_mean": -2.313150171647992
            },
            {
                "idx": 5,
                "candidate": "How do I add a card to the TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6230125342096601,
                "back_trans_input": "Task: How do I add a card to the TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Sample Response\n\n```json\n{\n  \"id\": \"d1a8e6b",
                "back_trans_input_tokens_mean": -2.202010438248918
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "How do I add a card to the TCGdex?"
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/dex-ids/%7BdexId%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/dex-ids/{dexId}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is the URL to find the cost of a Magic cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7384356090000697,
                "back_trans_input": "Task: What is the URL to find the cost of a Magic cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** You can use a tool like Postman or Paw to help with your testing!",
                "back_trans_input_tokens_mean": -2.350791209452861
            },
            {
                "idx": 2,
                "candidate": "Can I get the mtg database to download all card information onto my personal computer?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.2369794343647205,
                "back_trans_input": "Task: Can I get the mtg database to download all card information onto my personal computer?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2.3.1.1.",
                "back_trans_input_tokens_mean": -2.462124136219854
            },
            {
                "idx": 3,
                "candidate": "find the most played card in a database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.68228759765625,
                "back_trans_input": "Task: find the most played card in a database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** The task is not hardcoded into the application!",
                "back_trans_input_tokens_mean": -2.3681477698210243
            },
            {
                "idx": 4,
                "candidate": "Find the list of all cards from a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9991829612038352,
                "back_trans_input": "Task: Find the list of all cards from a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n### Step 1\n\n##### Find the endpoint in the codebase.",
                "back_trans_input_tokens_mean": -2.317954628555863
            },
            {
                "idx": 5,
                "candidate": "Find all cards of a certain card type from the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0464550186606014,
                "back_trans_input": "Task: Find all cards of a certain card type from the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n### 2. Write a function that parses the JSON data returned by the API call in question into",
                "back_trans_input_tokens_mean": -2.1711038204661586
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find all cards of a certain card type from the TCGdex database."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/energy-types",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/energy-types",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Search for a specific card. What API can I call?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2727637657752404,
                "back_trans_input": "Task: Search for a specific card. What API can I call?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The answer may not always be in the exact order as shown above.",
                "back_trans_input_tokens_mean": -2.392256823453036
            },
            {
                "idx": 2,
                "candidate": "Use TCGdex API to find information about cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9918951193491617,
                "back_trans_input": "Task: Use TCGdex API to find information about cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nExpected output: \n```json\n{\n    \"identifier\": \"card\",\n    \"functionality",
                "back_trans_input_tokens_mean": -2.277376729791815
            },
            {
                "idx": 3,
                "candidate": "List all of the cards from a particular set in one list.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.514422825404576,
                "back_trans_input": "Task: List all of the cards from a particular set in one list.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### How To Submit Your Work (Submission)\n\n1.",
                "back_trans_input_tokens_mean": -2.3131212457880244
            },
            {
                "idx": 4,
                "candidate": "What is a valid TCGdex API endpoint?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1158519983291626,
                "back_trans_input": "Task: What is a valid TCGdex API endpoint?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 7.2.3: `/api/v1/tcg-cards/{",
                "back_trans_input_tokens_mean": -2.2096616849986783
            },
            {
                "idx": 5,
                "candidate": "Find rare magic the gathering cards. Include all card details, like name, rarity, and a link",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7193673307245427,
                "back_trans_input": "Task: Find rare magic the gathering cards. Include all card details, like name, rarity, and a link\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n***\n\nTo complete your submission, please fill in each field below with its corresponding value from the original",
                "back_trans_input_tokens_mean": -2.469412237910901
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Use TCGdex API to find information about cards."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/energy-types\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/energy-types",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "what is the latest cdex update?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.621490478515625,
                "back_trans_input": "Task: what is the latest cdex update?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> Endpoint Id: v2/latest_cdexupdate\n\n<br>\n\n### 5",
                "back_trans_input_tokens_mean": -2.435623564810123
            },
            {
                "idx": 2,
                "candidate": "Find cards for a particular set. What are the best sources to use?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4103853702545166,
                "back_trans_input": "Task: Find cards for a particular set. What are the best sources to use?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Task\n\nFind cards for a particular set.",
                "back_trans_input_tokens_mean": -2.355791986516092
            },
            {
                "idx": 3,
                "candidate": "Find cards with a given creature type. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0973567143082619,
                "back_trans_input": "Task: Find cards with a given creature type. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** You can find the answer here: https://github.",
                "back_trans_input_tokens_mean": -2.288564192510284
            },
            {
                "idx": 4,
                "candidate": "What are all the cards in TCGdex with a name that starts with A?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3255550547649986,
                "back_trans_input": "Task: What are all the cards in TCGdex with a name that starts with A?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Example 2\n\n  Task: What are all the cards in TCGdex whose attack value is",
                "back_trans_input_tokens_mean": -2.222795634434141
            },
            {
                "idx": 5,
                "candidate": "Find information on a set.rTell me the name and list of all sets created by company",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8907994357022373,
                "back_trans_input": "Task: Find information on a set.rTell me the name and list of all sets created by company\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Sample Output \n\n```json\n{\n    \"endpoint\": \"sets\",\n    \"id\": ",
                "back_trans_input_tokens_mean": -2.7191331977518196
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find cards with a given creature type. Use TCGdex API."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/energy-types'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/energy-types",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Using TCGdex API, find the name and image of specific card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2442722601049088,
                "back_trans_input": "Task: Using TCGdex API, find the name and image of specific card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[TCGdex](https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.333057863670483
            },
            {
                "idx": 2,
                "candidate": "Add a card to the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5335842154242776,
                "back_trans_input": "Task: Add a card to the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [📝](https://github.",
                "back_trans_input_tokens_mean": -2.21616792678833
            },
            {
                "idx": 3,
                "candidate": "what does the dex for card xyz?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8303731282552083,
                "back_trans_input": "Task: what does the dex for card xyz?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v4\n\n---\n\nTask: What does the /cards/{cardId}/tcgplayerPrice",
                "back_trans_input_tokens_mean": -2.529213914247317
            },
            {
                "idx": 4,
                "candidate": "Add a new card in TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9449742635091146,
                "back_trans_input": "Task: Add a new card in TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nThe following are a few examples from other tasks that were part of the same challenge.",
                "back_trans_input_tokens_mean": -2.225549557887086
            },
            {
                "idx": 5,
                "candidate": "Find all cards featuring a specific art. What is the name of this API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2324205286362593,
                "back_trans_input": "Task: Find all cards featuring a specific art. What is the name of this API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Retrieve information about all Magic: the Gathering sets ever released.",
                "back_trans_input_tokens_mean": -2.3447023692883944
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Add a card to the TCGdex."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/energy-types\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/energy-types",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "how to get dex for a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.326324462890625,
                "back_trans_input": "Task: how to get dex for a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2.1.2.3.",
                "back_trans_input_tokens_mean": -2.420847514890275
            },
            {
                "idx": 2,
                "candidate": "Find information on a card. What can I use to search for the name of a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0943002700805664,
                "back_trans_input": "Task: Find information on a card. What can I use to search for the name of a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n## Endpoint\n### Functionality\nThe function of this endpoint is to find all cards that",
                "back_trans_input_tokens_mean": -2.3065303248217983
            },
            {
                "idx": 3,
                "candidate": "Find cards in tcgdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1776684761047362,
                "back_trans_input": "Task: Find cards in tcgdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://api.tcgplayer.",
                "back_trans_input_tokens_mean": -2.34372805640811
            },
            {
                "idx": 4,
                "candidate": "Find information about a card. What API would I use?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0493806692270131,
                "back_trans_input": "Task: Find information about a card. What API would I use?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```{note} Note that endpoints are not necessarily unique per API.",
                "back_trans_input_tokens_mean": -2.3609797044233845
            },
            {
                "idx": 5,
                "candidate": "What API is this? I would like to find out a certain card's price at an online store",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7324610298330134,
                "back_trans_input": "Task: What API is this? I would like to find out a certain card&#x27;s price at an online store\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **Scenario: The Endpoint Is Useful But It Has A Different Name Than Expected**\n",
                "back_trans_input_tokens_mean": -2.4495317896858593
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find information on a card. What can I use to search for the name of a card?"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/energy-types\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/energy-types",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How do I access the TCGdex web API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5686908562978108,
                "back_trans_input": "Task: How do I access the TCGdex web API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\n// Your code here...\n```",
                "back_trans_input_tokens_mean": -2.2917216821150346
            },
            {
                "idx": 2,
                "candidate": "Find the rares and commons for a given card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1222940591665416,
                "back_trans_input": "Task: Find the rares and commons for a given card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input Format\n\nThe input file contains one line with five space-separated fields.",
                "back_trans_input_tokens_mean": -2.3013842062516647
            },
            {
                "idx": 3,
                "candidate": "Find all my cards by id. Name of API is TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.149816356207195,
                "back_trans_input": "Task: Find all my cards by id. Name of API is TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nFunctionality: \nDescription: \nEndpoint: \n\n",
                "back_trans_input_tokens_mean": -2.3516370524530825
            },
            {
                "idx": 4,
                "candidate": "Find a list of all current card names and their definitions.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4640579223632812,
                "back_trans_input": "Task: Find a list of all current card names and their definitions.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You can find endpoints from https://github.",
                "back_trans_input_tokens_mean": -2.333033648404208
            },
            {
                "idx": 5,
                "candidate": "Using TCGdex API, get all sets currently in the database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3506305292248726,
                "back_trans_input": "Task: Using TCGdex API, get all sets currently in the database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n\n## Requirements\n\n* **TCGdex API**\n  * https://github.",
                "back_trans_input_tokens_mean": -2.3026831044559986
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find the rares and commons for a given card."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/energy-types\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/energy-types",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find a card by its art.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3232172185724431,
                "back_trans_input": "Task: Find a card by its art.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n(This example is from the real world.",
                "back_trans_input_tokens_mean": -2.434233215619933
            },
            {
                "idx": 2,
                "candidate": "what are all the names of each card in a set?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2955603966346154,
                "back_trans_input": "Task: what are all the names of each card in a set?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Sample Input File Format\n```json\n{\n    \"endpoint\": \"https://tcgplayer",
                "back_trans_input_tokens_mean": -2.3422616091641513
            },
            {
                "idx": 3,
                "candidate": "Find all of the cards with the text \"Silversmith\".",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7386387416294642,
                "back_trans_input": "Task: Find all of the cards with the text &quot;Silversmith&quot;.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n## **2. Create an Endpoint** \n\n> You are the owner of TCG",
                "back_trans_input_tokens_mean": -2.332491940465467
            },
            {
                "idx": 4,
                "candidate": "How can I get a list from the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9310200611750284,
                "back_trans_input": "Task: How can I get a list from the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## [TCGdex](https://github.",
                "back_trans_input_tokens_mean": -2.232705729348319
            },
            {
                "idx": 5,
                "candidate": "What is the API for finding a list of all the cards in my collection?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.100015303667854,
                "back_trans_input": "Task: What is the API for finding a list of all the cards in my collection?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n(Note that your answer may not match what we have here.",
                "back_trans_input_tokens_mean": -2.2101060633073772
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "How can I get a list from the TCGdex API?"
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/energy-types\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/energy-types",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the names of all cards in a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7391100796786222,
                "back_trans_input": "Task: Find the names of all cards in a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Endpoint\n```{r}\nendpoint_id <- \"c9b8f",
                "back_trans_input_tokens_mean": -2.2491379843817816
            },
            {
                "idx": 2,
                "candidate": "Find a list of all Magic the Gathering cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.69995645682017,
                "back_trans_input": "Task: Find a list of all Magic the Gathering cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> Note that there are no spaces in endpoint identifiers or namespaces, but there are spaces between words in",
                "back_trans_input_tokens_mean": -2.247226255911368
            },
            {
                "idx": 3,
                "candidate": "Find the names and card ids of all magic cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3509526252746582,
                "back_trans_input": "Task: Find the names and card ids of all magic cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Example response in JSON\n\n {\n     \"id\": \"1\",\n     \"functionality\": ",
                "back_trans_input_tokens_mean": -2.312469377430207
            },
            {
                "idx": 4,
                "candidate": "Find information on a card. Name of API is TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8571145744884715,
                "back_trans_input": "Task: Find information on a card. Name of API is TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nIdentifier: d1b8eac4-c7a6-4a3e-9",
                "back_trans_input_tokens_mean": -2.304156025250753
            },
            {
                "idx": 5,
                "candidate": "What is the API that you can find all a card has been printed, including rares?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8284759521484375,
                "back_trans_input": "Task: What is the API that you can find all a card has been printed, including rares?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note** Please make sure your code works with the following data set as well! \n\n```js\n",
                "back_trans_input_tokens_mean": -2.4866631988786225
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find a list of all Magic the Gathering cards."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/energy-types\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/energy-types",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "i want to search for some cards in my deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5893287658691406,
                "back_trans_input": "Task: i want to search for some cards in my deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hints\n\nThe endpoints are in JSON format, so it has 2 main keys: ",
                "back_trans_input_tokens_mean": -2.362325843321074
            },
            {
                "idx": 2,
                "candidate": "Find the best prices for cards in MTG.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5813507080078124,
                "back_trans_input": "Task: Find the best prices for cards in MTG.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n```javascript\n// ...\nimport { getPricesForCardsInMtgApi }",
                "back_trans_input_tokens_mean": -2.3685664291735047
            },
            {
                "idx": 3,
                "candidate": "Create a database of all the TCG cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.200969392603094,
                "back_trans_input": "Task: Create a database of all the TCG cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Allow users to search through their collection by typing in specific card names or attributes,",
                "back_trans_input_tokens_mean": -2.2953698370191784
            },
            {
                "idx": 4,
                "candidate": "I want to find every card in a specific set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3037967681884766,
                "back_trans_input": "Task: I want to find every card in a specific set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Example\n\nThe endpoint should have been generated as follows:\n```sh\ncurl https://tc",
                "back_trans_input_tokens_mean": -2.3054062598342195
            },
            {
                "idx": 5,
                "candidate": "Find the name of a card from Magic: The Gathering.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8344879150390625,
                "back_trans_input": "Task: Find the name of a card from Magic: The Gathering.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Install the required libraries\n\nInstall the following libraries using pip3 install or whatever method",
                "back_trans_input_tokens_mean": -2.224684784629128
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find the name of a card from Magic: The Gathering."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/energy-types/%7Benergy-type%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/energy-types/{energy-type}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is the API that allows you to lookup card information?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0824907743013823,
                "back_trans_input": "Task: What is the API that allows you to lookup card information?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nYou can find all endpoints here: https://docs.",
                "back_trans_input_tokens_mean": -2.264129586653276
            },
            {
                "idx": 2,
                "candidate": "Find all the Mtg cards in your collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6760031960227273,
                "back_trans_input": "Task: Find all the Mtg cards in your collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<details>\n    <summary>Click here for the solution</summary>\n    \n    ```python\n    def find",
                "back_trans_input_tokens_mean": -2.379170400125009
            },
            {
                "idx": 3,
                "candidate": "Find a specific card in the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7042273978392283,
                "back_trans_input": "Task: Find a specific card in the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Solution\n```json\n{\n    \"endpoint_id\": \"a1b2c3",
                "back_trans_input_tokens_mean": -2.2254883718053136
            },
            {
                "idx": 4,
                "candidate": "Create a TCGdex.io account",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1240135729312897,
                "back_trans_input": "Task: Create a TCGdex.io account\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n## Solution ##\n\nThe solution can be found in `solution/`.",
                "back_trans_input_tokens_mean": -2.273944266488619
            },
            {
                "idx": 5,
                "candidate": "Find a specific card.br>I need to find the value of a specific card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9948604757135565,
                "back_trans_input": "Task: Find a specific card.br&gt;I need to find the value of a specific card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nThe following endpoints are from the TCGdex API:\n\n\n### GET /api",
                "back_trans_input_tokens_mean": -2.445983256323863
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find a specific card in the TCGdex."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/energy-types/%7Benergy-type%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/energy-types/{energy-type}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How would I create an account with TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.30963729818662,
                "back_trans_input": "Task: How would I create an account with TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: How would I get all my orders from TCGdex?",
                "back_trans_input_tokens_mean": -2.3026974764737216
            },
            {
                "idx": 2,
                "candidate": "Show me all of the cards I can craft from my deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9456505408653846,
                "back_trans_input": "Task: Show me all of the cards I can craft from my deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Notes\n\n* Do not include any extra information in your response.",
                "back_trans_input_tokens_mean": -2.311825692116677
            },
            {
                "idx": 3,
                "candidate": "Obtain all the rare cards from the TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4110673580850874,
                "back_trans_input": "Task: Obtain all the rare cards from the TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input:\n```\n  Endpoint Identifier   Functionality    Description     Name of API\n  ---------------------",
                "back_trans_input_tokens_mean": -2.192288771542636
            },
            {
                "idx": 4,
                "candidate": "show the list of cards in an api.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.55284423828125,
                "back_trans_input": "Task: show the list of cards in an api.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:**\nThe first line contains two integers n (1 ≤ n ≤ 100), m",
                "back_trans_input_tokens_mean": -2.3922320570901174
            },
            {
                "idx": 5,
                "candidate": "What is the API endpoint for TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.694233775138855,
                "back_trans_input": "Task: What is the API endpoint for TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```python\ndef tcg_endpoint(\n    api=\"tcg\",\n    func=\"get_collection",
                "back_trans_input_tokens_mean": -2.149836715208281
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "What is the API endpoint for TCGdex?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.tcgdex.net/v2/%7Blang%7D/energy-types/%7Benergy-type%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/energy-types/{energy-type}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What are the different APIs available?n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4237337979403408,
                "back_trans_input": "Task: What are the different APIs available?n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **3. What does it take to build a blockchain application?",
                "back_trans_input_tokens_mean": -2.4202139872425006
            },
            {
                "idx": 2,
                "candidate": "Find the value of a single card. Name the API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0397404157198393,
                "back_trans_input": "Task: Find the value of a single card. Name the API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n##### Input file contains all endpoints in the following format:\n\n```txt\n{\n\t\"",
                "back_trans_input_tokens_mean": -2.3420184395530006
            },
            {
                "idx": 3,
                "candidate": "Show all the cards in a specific set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.943109130859375,
                "back_trans_input": "Task: Show all the cards in a specific set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Show card details by its id.",
                "back_trans_input_tokens_mean": -2.352152209415614
            },
            {
                "idx": 4,
                "candidate": "Can you help me download a list of all the magic card prices?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9513193766276042,
                "back_trans_input": "Task: Can you help me download a list of all the magic card prices?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nTask: I have a bunch of cards in my collection that are worth over $1000 each",
                "back_trans_input_tokens_mean": -2.3510878767286028
            },
            {
                "idx": 5,
                "candidate": "Get a list of all card games. I want to see some pictures and the names, please.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8314314342680431,
                "back_trans_input": "Task: Get a list of all card games. I want to see some pictures and the names, please.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## [Previous Page](.",
                "back_trans_input_tokens_mean": -2.385097859269482
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Show all the cards in a specific set."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/energy-types/%7Benergy-type%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/energy-types/{energy-type}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "what is this API used for?address",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.097013300115412,
                "back_trans_input": "Task: what is this API used for?address\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Please note that there are no right or wrong answers in these tasks!** We just want to see",
                "back_trans_input_tokens_mean": -2.4225284086083465
            },
            {
                "idx": 2,
                "candidate": "To find all the cards in a specific set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0087249062278054,
                "back_trans_input": "Task: To find all the cards in a specific set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Write the Endpoint\n\nNow that you have the information about your endpoint, write",
                "back_trans_input_tokens_mean": -2.2844148101630033
            },
            {
                "idx": 3,
                "candidate": "how do you query the tcgdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9900414148966471,
                "back_trans_input": "Task: how do you query the tcgdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Create a new endpoint that returns all the tokens on tcgdex in JSON format\n",
                "back_trans_input_tokens_mean": -2.396575595730933
            },
            {
                "idx": 4,
                "candidate": "Show all cards in a particular set.?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1997543334960938,
                "back_trans_input": "Task: Show all cards in a particular set.?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How To Use This Project?\n1) Clone the repository on your local machine using git command line",
                "back_trans_input_tokens_mean": -2.4414975395742453
            },
            {
                "idx": 5,
                "candidate": "What's the best way to query all possible cards in Magic: The Gathering?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4338520500395033,
                "back_trans_input": "Task: What&#x27;s the best way to query all possible cards in Magic: The Gathering?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solution 1\n\nThis solution does not match the provided answer key because it uses the wrong API",
                "back_trans_input_tokens_mean": -2.309216408406274
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "To find all the cards in a specific set."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/energy-types/%7Benergy-type%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/energy-types/{energy-type}",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is the easiest way to search for an item (i.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7225024883563702,
                "back_trans_input": "Task: What is the easiest way to search for an item (i.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. You are working on a project with multiple endpoints that all belong to the same API ",
                "back_trans_input_tokens_mean": -2.3999880722590854
            },
            {
                "idx": 2,
                "candidate": "how do i retrieve all cards in the TCGdex database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2091591914494833,
                "back_trans_input": "Task: how do i retrieve all cards in the TCGdex database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> Hint: You can use the endpoints that are already generated by us as reference.",
                "back_trans_input_tokens_mean": -2.2907064131328037
            },
            {
                "idx": 3,
                "candidate": "Find the value of a card using TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7628702606473651,
                "back_trans_input": "Task: Find the value of a card using TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```\nhttps://tcgplayer-api.",
                "back_trans_input_tokens_mean": -2.2053827337316565
            },
            {
                "idx": 4,
                "candidate": "What are all the different Magic:the Gathering cards listed in the database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7499715313315392,
                "back_trans_input": "Task: What are all the different Magic:the Gathering cards listed in the database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://api.tcgplayer.",
                "back_trans_input_tokens_mean": -2.38532091664002
            },
            {
                "idx": 5,
                "candidate": "Use a web API to search for card images.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6028164950284092,
                "back_trans_input": "Task: Use a web API to search for card images.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **Expected Output**\n\n\n```json\n{\n\t\"identifier\": \"https://api.",
                "back_trans_input_tokens_mean": -2.3262997733222113
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find the value of a card using TCGdex API."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/energy-types/%7Benergy-type%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/energy-types/{energy-type}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find all the cards in a given set?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3530242919921875,
                "back_trans_input": "Task: find all the cards in a given set?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> The answer must match exactly what we are looking for!",
                "back_trans_input_tokens_mean": -2.3760769924270773
            },
            {
                "idx": 2,
                "candidate": "Get a list of all the available card names.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4098587036132812,
                "back_trans_input": "Task: Get a list of all the available card names.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Endpoint\n\n### 2.",
                "back_trans_input_tokens_mean": -2.2607399622599282
            },
            {
                "idx": 3,
                "candidate": "Use the TCGdex API to find a specific card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6196250319480896,
                "back_trans_input": "Task: Use the TCGdex API to find a specific card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n### Solution Code\n\n ```java\n    public class EndpointGenerator {\n        public static void main",
                "back_trans_input_tokens_mean": -2.2005219674325205
            },
            {
                "idx": 4,
                "candidate": "what is the id and name of the \"TCGdex API\"",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.152579791016049,
                "back_trans_input": "Task: what is the id and name of the &quot;TCGdex API&quot;\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nID: \nName: \n\nAnswer: \n\n```json\n{\n    \"id\": \"",
                "back_trans_input_tokens_mean": -2.21522342552573
            },
            {
                "idx": 5,
                "candidate": "What is the API for a website that allows to add cards to it?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6297416687011719,
                "back_trans_input": "Task: What is the API for a website that allows to add cards to it?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": ". \n\nExample: https://tcgapi.",
                "back_trans_input_tokens_mean": -2.3319835494049883
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Use the TCGdex API to find a specific card."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/energy-types/%7Benergy-type%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/energy-types/{energy-type}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find the value of a card by its number",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3583769364790483,
                "back_trans_input": "Task: find the value of a card by its number\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## **5.2.",
                "back_trans_input_tokens_mean": -2.308150634587368
            },
            {
                "idx": 2,
                "candidate": "Find all the cards which are reprints.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6339347145774148,
                "back_trans_input": "Task: Find all the cards which are reprints.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n### Sample Response \n\n```json\n{\n  \"cards\": [\n    \"https://api",
                "back_trans_input_tokens_mean": -2.3376962135885364
            },
            {
                "idx": 3,
                "candidate": "Find the name of a card.? I need to find the name of a card without any information",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9015966545451771,
                "back_trans_input": "Task: Find the name of a card.? I need to find the name of a card without any information\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Find the endpoint\n\nFirst we have to find the endpoint that we are looking for",
                "back_trans_input_tokens_mean": -2.4146452316871057
            },
            {
                "idx": 4,
                "candidate": "Using the TCGdex API, how do I get a list of all Magic: The Gather",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7788700027899309,
                "back_trans_input": "Task: Using the TCGdex API, how do I get a list of all Magic: The Gather\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## 1. Use SwaggerHub or Postman to find the answer\n\nIn order",
                "back_trans_input_tokens_mean": -2.291558544514543
            },
            {
                "idx": 5,
                "candidate": "Use TCGdex API to look up a Magic the Gathering card number.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9712887273894416,
                "back_trans_input": "Task: Use TCGdex API to look up a Magic the Gathering card number.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** TCGdex has many endpoints that can give information about cards in different ways.",
                "back_trans_input_tokens_mean": -2.2985939644930657
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Using the TCGdex API, how do I get a list of all Magic: The Gather"
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/energy-types/%7Benergy-type%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/energy-types/{energy-type}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all of the cards listed in a specific set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.150421142578125,
                "back_trans_input": "Task: Find all of the cards listed in a specific set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n## **Input Data:** \n\n| Field     | Type    | Value  | Description                ",
                "back_trans_input_tokens_mean": -2.28846336504735
            },
            {
                "idx": 2,
                "candidate": "Show the full price of a card. Use this API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8113123086782603,
                "back_trans_input": "Task: Show the full price of a card. Use this API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n(This was taken from the API documentation)",
                "back_trans_input_tokens_mean": -2.403612066846375
            },
            {
                "idx": 3,
                "candidate": "Query for the cards with rares and mythics.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8332730806790865,
                "back_trans_input": "Task: Query for the cards with rares and mythics.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n##### Input\n\nThe input consists of one line containing four space-separated integers: \n\n*",
                "back_trans_input_tokens_mean": -2.3514009068865294
            },
            {
                "idx": 4,
                "candidate": "How can I use the TCGdex API to add a card to the database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7340796182030126,
                "back_trans_input": "Task: How can I use the TCGdex API to add a card to the database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoint functionality must match exactly with the one provided in the question's description above.",
                "back_trans_input_tokens_mean": -2.213589142108786
            },
            {
                "idx": 5,
                "candidate": "How do I use the API to get information on a Magic The Gathering card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.072264638211992,
                "back_trans_input": "Task: How do I use the API to get information on a Magic The Gathering card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nhttps://github.com/MagicTCG/api/blob/master/docs/tcg",
                "back_trans_input_tokens_mean": -2.2349905277553357
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "How can I use the TCGdex API to add a card to the database?"
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/hp",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/hp",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Is there an API to look up information on all cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.465802706204928,
                "back_trans_input": "Task: Is there an API to look up information on all cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 4.2.5.1\n\nTask: \"Create an endpoint that will accept",
                "back_trans_input_tokens_mean": -2.301213177767667
            },
            {
                "idx": 2,
                "candidate": "How do I query the TCGdex for information on my specific card, to get more details regarding its",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.048524179241874,
                "back_trans_input": "Task: How do I query the TCGdex for information on my specific card, to get more details regarding its\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Hint(s): **\n",
                "back_trans_input_tokens_mean": -2.4791073322296144
            },
            {
                "idx": 3,
                "candidate": "Find the rarity of a Magic card from its name.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1650137534508338,
                "back_trans_input": "Task: Find the rarity of a Magic card from its name.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " (https://github.com/TCGplayer/tcg-api)\n\n",
                "back_trans_input_tokens_mean": -2.288340122327892
            },
            {
                "idx": 4,
                "candidate": "Find the list of all card types in a TCG.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1538647138155425,
                "back_trans_input": "Task: Find the list of all card types in a TCG.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2.5.2.1 - Create a new Endpoint\n\nNavigate to",
                "back_trans_input_tokens_mean": -2.209727582064542
            },
            {
                "idx": 5,
                "candidate": "find all the card names.? I would like to get a list of all the card names.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0410906473795574,
                "back_trans_input": "Task: find all the card names.? I would like to get a list of all the card names.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": ".\n\n```json\n{\n  \"id\": \"get_cards\",\n  \"function\": \"",
                "back_trans_input_tokens_mean": -2.3632484175201154
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find the list of all card types in a TCG."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/hp\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/hp",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "what is the api to query your database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7265380859375,
                "back_trans_input": "Task: what is the api to query your database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"id\": \"3a9f2c0e-f5",
                "back_trans_input_tokens_mean": -2.4233300396215136
            },
            {
                "idx": 2,
                "candidate": "How can I get the value of a Magic: The Gathering card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8041737675666809,
                "back_trans_input": "Task: How can I get the value of a Magic: The Gathering card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2\n\n\n\nTask: How can I get all cards from an expansion set?",
                "back_trans_input_tokens_mean": -2.267916440963745
            },
            {
                "idx": 3,
                "candidate": "List all cards by name.n\"\"\"\"\"\"\"",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2540664672851562,
                "back_trans_input": "Task: List all cards by name.n&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "</code></pre>\n\n<h2 id=\"endpoint-identifiers\">Endpoints identifiers</h2",
                "back_trans_input_tokens_mean": -2.3457546552022297
            },
            {
                "idx": 4,
                "candidate": "what deck is janie under? using TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.809989556670189,
                "back_trans_input": "Task: what deck is janie under? using TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " \n\nExpected output:\n\ndeck_name\n\n",
                "back_trans_input_tokens_mean": -2.5348702851716465
            },
            {
                "idx": 5,
                "candidate": "show all cards of a specific set. Show all cards from the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1697650790214538,
                "back_trans_input": "Task: show all cards of a specific set. Show all cards from the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2:\n\nYou are required to create a new task in your own words.",
                "back_trans_input_tokens_mean": -2.257973067780845
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "How can I get the value of a Magic: The Gathering card?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/hp'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/hp",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "what are the names of the most valuable cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6176284790039062,
                "back_trans_input": "Task: what are the names of the most valuable cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```{r}\nendpoint_name <- \"CardValues\"\nendpoint_description <-",
                "back_trans_input_tokens_mean": -2.306687001828794
            },
            {
                "idx": 2,
                "candidate": "What is the best way to determine if a card has been released?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.01834636926651,
                "back_trans_input": "Task: What is the best way to determine if a card has been released?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"id\": \"get_card\",\n    \"method\": \"GET",
                "back_trans_input_tokens_mean": -2.2582175050462996
            },
            {
                "idx": 3,
                "candidate": "Find the list of cards in a specific set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7930030822753906,
                "back_trans_input": "Task: Find the list of cards in a specific set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task\n\nFind the list of all the cards in a specific set.",
                "back_trans_input_tokens_mean": -2.25941386046233
            },
            {
                "idx": 4,
                "candidate": "how to get a list of the most expensive magic cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3147999690129206,
                "back_trans_input": "Task: how to get a list of the most expensive magic cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Create a new file named `endpoints/endpoint_name.",
                "back_trans_input_tokens_mean": -2.326849330555309
            },
            {
                "idx": 5,
                "candidate": "How do I access my account on TCGdex API in an app?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7511167600750923,
                "back_trans_input": "Task: How do I access my account on TCGdex API in an app?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<details>\n  <summary><b>Solution</b></summary>\n\n  ```json\n    {\n      ",
                "back_trans_input_tokens_mean": -2.3472367880637184
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find the list of cards in a specific set."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/hp\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/hp",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all of the cards in a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6948570251464844,
                "back_trans_input": "Task: Find all of the cards in a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:**\nYou are looking at endpoints from a different perspective than before!",
                "back_trans_input_tokens_mean": -2.2998385919588746
            },
            {
                "idx": 2,
                "candidate": "what is the official magic card database?n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4073153409090908,
                "back_trans_input": "Task: what is the official magic card database?n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2.3.2.1\n\nYou are given an endpoint URL that has been randomly",
                "back_trans_input_tokens_mean": -2.485945122264256
            },
            {
                "idx": 3,
                "candidate": "find the most played card in a Magic: The Gathering collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.391968297958374,
                "back_trans_input": "Task: find the most played card in a Magic: The Gathering collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n#Solution\n```bash\nfunction endpointName() {\n  local endpoint=\"${1}\"\n  echo",
                "back_trans_input_tokens_mean": -2.323126406282992
            },
            {
                "idx": 4,
                "candidate": "What does the TCGdex API look like when used to access it from a web browser?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4410529023125058,
                "back_trans_input": "Task: What does the TCGdex API look like when used to access it from a web browser?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint 1\n\n\n```json\n{\n    \"id\": \"get_all_list",
                "back_trans_input_tokens_mean": -2.229524402295129
            },
            {
                "idx": 5,
                "candidate": "Show a list of all cards in the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0214791297912598,
                "back_trans_input": "Task: Show a list of all cards in the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nExpected Output: \n\n```json\n{\n    \"id\": \"list_all_",
                "back_trans_input_tokens_mean": -2.2148009751524245
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find all of the cards in a set."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/hp\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/hp",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Use a specific API to get card details.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6728515625,
                "back_trans_input": "Task: Use a specific API to get card details.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> The endpoints are listed in alphabetical order on TCGdex.",
                "back_trans_input_tokens_mean": -2.3907000461471415
            },
            {
                "idx": 2,
                "candidate": "How can I get the most recent data for the TCGdex database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3147884979844093,
                "back_trans_input": "Task: How can I get the most recent data for the TCGdex database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n#### Task 2 (5 points)\nThe following code was written by one of your co-",
                "back_trans_input_tokens_mean": -2.230500890497576
            },
            {
                "idx": 3,
                "candidate": "Find all card text.? I can give you a deck name, what do you need to find the",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7909871881658381,
                "back_trans_input": "Task: Find all card text.? I can give you a deck name, what do you need to find the\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```js\n{\n  \"id\": \"6c1b3f4e-8c",
                "back_trans_input_tokens_mean": -2.59505866745771
            },
            {
                "idx": 4,
                "candidate": "Show me all the card names in a deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2450984608043323,
                "back_trans_input": "Task: Show me all the card names in a deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nEndpoint: \n\nFunctionality: \n\nDescription: \n\n\nAPI: TCGd",
                "back_trans_input_tokens_mean": -2.3226950963338218
            },
            {
                "idx": 5,
                "candidate": "Show all the card types for each set of the Magic the Gathering trading card game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.742381042904324,
                "back_trans_input": "Task: Show all the card types for each set of the Magic the Gathering trading card game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nhttps://stackoverflow.com/questions/tagged/rest",
                "back_trans_input_tokens_mean": -2.271197609279467
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "How can I get the most recent data for the TCGdex database?"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/hp\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/hp",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Use TCGdex API to find cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9961213946342469,
                "back_trans_input": "Task: Use TCGdex API to find cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nTask: Use TCGplayer API to search card by title and price.",
                "back_trans_input_tokens_mean": -2.300807061018767
            },
            {
                "idx": 2,
                "candidate": "How would I find the value of a rare?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.933549014004794,
                "back_trans_input": "Task: How would I find the value of a rare?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 1.2.4\n\nThe following endpoint returns information about a card by its id ",
                "back_trans_input_tokens_mean": -2.380497367293746
            },
            {
                "idx": 3,
                "candidate": "Find the list of cards in a given set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9278241937810724,
                "back_trans_input": "Task: Find the list of cards in a given set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nSample Input:\n\n```json\n\"endpoint\": \"https://tcg-api.",
                "back_trans_input_tokens_mean": -2.27383150877776
            },
            {
                "idx": 4,
                "candidate": "Find the list of all Magic: The Gathering cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7772167126337687,
                "back_trans_input": "Task: Find the list of all Magic: The Gathering cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint 1\n\n\n```javascript\n// This code will run on your local machine when you press",
                "back_trans_input_tokens_mean": -2.2437819384653634
            },
            {
                "idx": 5,
                "candidate": "To get the names of the cards that have some specific value, use this API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8711431166704964,
                "back_trans_input": "Task: To get the names of the cards that have some specific value, use this API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** The solution can be found by looking at `src/main/resources/endpoints",
                "back_trans_input_tokens_mean": -2.3362018419348676
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find the list of all Magic: The Gathering cards."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/hp\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/hp",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I would like to query the TCGdex API but without having to create my own interface/proto",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9139190153642134,
                "back_trans_input": "Task: I would like to query the TCGdex API but without having to create my own interface/proto\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Task\n\nI want to get all the tokens on the Polygon network in one go instead of",
                "back_trans_input_tokens_mean": -2.419066068505039
            },
            {
                "idx": 2,
                "candidate": "Find a particular card.?tcg:TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3307655056317647,
                "back_trans_input": "Task: Find a particular card.?tcg:TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"task\": \"?",
                "back_trans_input_tokens_mean": -2.5401892103590407
            },
            {
                "idx": 3,
                "candidate": "What APIs allows me to download a list of rare and unreleased magic the gathering cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.602599439166841,
                "back_trans_input": "Task: What APIs allows me to download a list of rare and unreleased magic the gathering cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## [Section II: The Endpoint](#section-ii-the-endpoint)\n\n",
                "back_trans_input_tokens_mean": -2.4190887911566374
            },
            {
                "idx": 4,
                "candidate": "What API can I use to search for a card type?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3030771108774037,
                "back_trans_input": "Task: What API can I use to search for a card type?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nAnswer:\n\n```javascript\nfunction getCardType(card_type) {\n  return fetch",
                "back_trans_input_tokens_mean": -2.3031177520751953
            },
            {
                "idx": 5,
                "candidate": "Create a list of all cards in the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6230983813603719,
                "back_trans_input": "Task: Create a list of all cards in the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Example Response\n\n```json\n[\n    {\n        \"id\": \"0\",\n        \"name",
                "back_trans_input_tokens_mean": -2.1497103614466533
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Create a list of all cards in the TCGdex API."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/hp\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/hp",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all cards in the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7158694624900818,
                "back_trans_input": "Task: Find all cards in the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"id\": \"get_all_cards\",\n    \"functionality\":",
                "back_trans_input_tokens_mean": -2.232578531459526
            },
            {
                "idx": 2,
                "candidate": "How to search TCGdex using API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.558663010597229,
                "back_trans_input": "Task: How to search TCGdex using API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Solution\n\n  Functionality: Search card by name\n  Description: Get all cards with the specified name in",
                "back_trans_input_tokens_mean": -2.296834740373823
            },
            {
                "idx": 3,
                "candidate": "i wanna find list of all the cards in magic",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7980612974900465,
                "back_trans_input": "Task: i wanna find list of all the cards in magic\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n* [TCGdex.com](https://www.",
                "back_trans_input_tokens_mean": -2.4791795478926764
            },
            {
                "idx": 4,
                "candidate": "Show current card stats for cards not in a deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.2641651447002706,
                "back_trans_input": "Task: Show current card stats for cards not in a deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n## 题目大意：\n\n> 给定一个endpoint的id、",
                "back_trans_input_tokens_mean": -2.4029833854885276
            },
            {
                "idx": 5,
                "candidate": "Create a list of cards. Name the API TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6904978379607201,
                "back_trans_input": "Task: Create a list of cards. Name the API TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nFunctionality: List all Pokemon Cards in the dex (Pokedex)\nDescription: Retrieves",
                "back_trans_input_tokens_mean": -2.3003402832335076
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find all cards in the TCGdex."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/hp/%7Bhp%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/hp/{hp}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "i want to add new card from the website",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6647422096946023,
                "back_trans_input": "Task: i want to add new card from the website\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**NOTE:** You can also use your own endpoints if you have them available!",
                "back_trans_input_tokens_mean": -2.439882528002017
            },
            {
                "idx": 2,
                "candidate": "how can i get the value of a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9854558308919271,
                "back_trans_input": "Task: how can i get the value of a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The first two lines contain the functionality and description respectively.",
                "back_trans_input_tokens_mean": -2.397349198659261
            },
            {
                "idx": 3,
                "candidate": "What is the url of the API that handles cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5601603190104167,
                "back_trans_input": "Task: What is the url of the API that handles cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " for Cards v1\n\n> Note: The endpoint may not exist in the actual version of the API but should",
                "back_trans_input_tokens_mean": -2.3193392447375376
            },
            {
                "idx": 4,
                "candidate": "Find the card I own.? Ask for a specific game and it's cards",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.853856136924342,
                "back_trans_input": "Task: Find the card I own.? Ask for a specific game and it&#x27;s cards\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " Version 2\n\n\n&nbsp;\n\n---\n\n## Revision\n\nWhat are endpoints?",
                "back_trans_input_tokens_mean": -2.564939205463116
            },
            {
                "idx": 5,
                "candidate": "How can I use the TCGdex API in Java?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0095710846093984,
                "back_trans_input": "Task: How can I use the TCGdex API in Java?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Sample Solution\n```java\npublic class Solution {\n  public static void main(String[] args",
                "back_trans_input_tokens_mean": -2.250626649942484
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "How can I use the TCGdex API in Java?"
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/hp/%7Bhp%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/hp/{hp}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the rarity of a Magic: The Gathering card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6903262223516192,
                "back_trans_input": "Task: Find the rarity of a Magic: The Gathering card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Generate the Endpoint ID, Functionality, Description, and API Name\n\n\n",
                "back_trans_input_tokens_mean": -2.2272259642224794
            },
            {
                "idx": 2,
                "candidate": "What is the TCGdex API? I need some ajax calls to interact with it.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3298059160059148,
                "back_trans_input": "Task: What is the TCGdex API? I need some ajax calls to interact with it.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Notes on what makes a good identifier/functionality\n\nA good identifier should be short but descriptive",
                "back_trans_input_tokens_mean": -2.278462761539524
            },
            {
                "idx": 3,
                "candidate": "Find all cards by keyword. Use the TCGdex API to do this.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0591421828550451,
                "back_trans_input": "Task: Find all cards by keyword. Use the TCGdex API to do this.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task\nFind all cards by keyword using the TCGdex API.",
                "back_trans_input_tokens_mean": -2.277481054223102
            },
            {
                "idx": 4,
                "candidate": "Show all rare creatures in TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.074514615535736,
                "back_trans_input": "Task: Show all rare creatures in TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```yaml\nGET https://tcgplayerapi.",
                "back_trans_input_tokens_mean": -2.3005994337576405
            },
            {
                "idx": 5,
                "candidate": "Create your own index.json file for the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2479193657636642,
                "back_trans_input": "Task: Create your own index.json file for the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n##### Input File(s)\n\nindex.",
                "back_trans_input_tokens_mean": -2.1927671179307247
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find the rarity of a Magic: The Gathering card."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/hp/%7Bhp%7D'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/hp/{hp}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the price of a Magic card.?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0473302841186523,
                "back_trans_input": "Task: Find the price of a Magic card.?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** The endpoint for finding the price of a magic card can be found in this documentation page https",
                "back_trans_input_tokens_mean": -2.4040286091138734
            },
            {
                "idx": 2,
                "candidate": "Find the price of a MTG card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0557317733764648,
                "back_trans_input": "Task: Find the price of a MTG card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**You can find more information about endpoints in the [Endpoints](..",
                "back_trans_input_tokens_mean": -2.3077566735098296
            },
            {
                "idx": 3,
                "candidate": "What is the API name for getting info on cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2473921342329546,
                "back_trans_input": "Task: What is the API name for getting info on cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nThis challenge was created by [Santiago](https://github.",
                "back_trans_input_tokens_mean": -2.3083282085733674
            },
            {
                "idx": 4,
                "candidate": "Find the card's database information.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4933178316463123,
                "back_trans_input": "Task: Find the card&#x27;s database information.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n```json\n{\n    \"id\": \"card\",\n    \"functionality\": \"Find the",
                "back_trans_input_tokens_mean": -2.486009948903864
            },
            {
                "idx": 5,
                "candidate": "Find card sets for TCGdex.com.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5292212637988003,
                "back_trans_input": "Task: Find card sets for TCGdex.com.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Solution:**\n\n```javascript\n// endpoint = \"https://api.",
                "back_trans_input_tokens_mean": -2.275641082623683
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find the price of a MTG card."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/hp/%7Bhp%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/hp/{hp}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find me a list of all the card in Magic.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6193450291951497,
                "back_trans_input": "Task: Find me a list of all the card in Magic.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [📝 Solution](solution)",
                "back_trans_input_tokens_mean": -2.3856160750082873
            },
            {
                "idx": 2,
                "candidate": "i want to create an application that uses the TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0615763515233994,
                "back_trans_input": "Task: i want to create an application that uses the TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n*This question was asked in the 2018 Hackathon on TCGplayer's Discord channel.*",
                "back_trans_input_tokens_mean": -2.264348641037941
            },
            {
                "idx": 3,
                "candidate": "What are all of the mtg cards in the database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0916780744280135,
                "back_trans_input": "Task: What are all of the mtg cards in the database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## [1] Create a new directory named \"task_1\".",
                "back_trans_input_tokens_mean": -2.360325154391202
            },
            {
                "idx": 4,
                "candidate": "Find information on certain cards. Use TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3054290826504047,
                "back_trans_input": "Task: Find information on certain cards. Use TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": ": https://tcgplayerapi.com/docs\n",
                "back_trans_input_tokens_mean": -2.351974121007052
            },
            {
                "idx": 5,
                "candidate": "Find which cards are legal in a Magic the Gathering deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1337212238992964,
                "back_trans_input": "Task: Find which cards are legal in a Magic the Gathering deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nThe above question has been provided by https://www.",
                "back_trans_input_tokens_mean": -2.2862225099043414
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "i want to create an application that uses the TCGdex API"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/hp/%7Bhp%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/hp/{hp}",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is the quickest way to look up a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9544831789456881,
                "back_trans_input": "Task: What is the quickest way to look up a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2.1.2.1.",
                "back_trans_input_tokens_mean": -2.316063732182214
            },
            {
                "idx": 2,
                "candidate": "Find the name of a card in TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5914658124630268,
                "back_trans_input": "Task: Find the name of a card in TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n# Hint\n\nYou can find some information about the endpoints from the TCGdex",
                "back_trans_input_tokens_mean": -2.1687229069796476
            },
            {
                "idx": 3,
                "candidate": "show a card's information when someone clicks on the card image.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.809333972632885,
                "back_trans_input": "Task: show a card&#x27;s information when someone clicks on the card image.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How to test it?\n\n1.",
                "back_trans_input_tokens_mean": -2.3789320904275644
            },
            {
                "idx": 4,
                "candidate": "Find all cards in a specific set. Name the API: TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6534360396234613,
                "back_trans_input": "Task: Find all cards in a specific set. Name the API: TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nIdentifier:\nFunctionality: Find all cards in a specific set.",
                "back_trans_input_tokens_mean": -2.248552610134256
            },
            {
                "idx": 5,
                "candidate": "find card prices.?nI would like to have the exact cost of any card or list of cards",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8520715886896306,
                "back_trans_input": "Task: find card prices.?nI would like to have the exact cost of any card or list of cards\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n```javascript\n// endpointId should match the value in your endpoint\nconst endpointId = \"",
                "back_trans_input_tokens_mean": -2.6368501630880066
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find the name of a card in TCGdex."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/hp/%7Bhp%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/hp/{hp}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Create a list of all the card's abilities.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3373541434605916,
                "back_trans_input": "Task: Create a list of all the card&#x27;s abilities.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Task\nTask: Create a page that displays all cards with their images from the set",
                "back_trans_input_tokens_mean": -2.34310143334525
            },
            {
                "idx": 2,
                "candidate": "Find every card in a Magic the Gathering set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9373429218928019,
                "back_trans_input": "Task: Find every card in a Magic the Gathering set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2: Get a list of all the cards in MTG format (https://api",
                "back_trans_input_tokens_mean": -2.316966833891692
            },
            {
                "idx": 3,
                "candidate": "Find the name of a card in an online store.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1086180210113525,
                "back_trans_input": "Task: Find the name of a card in an online store.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## --- Part Two: Create a new Endpoint ---\n\nFor part two of your exam",
                "back_trans_input_tokens_mean": -2.3012002717464344
            },
            {
                "idx": 4,
                "candidate": "How do you get the api key for TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3929710473333086,
                "back_trans_input": "Task: How do you get the api key for TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nSolution:\n```python\nimport requests\nfrom lxml import etree as ET\n\nurl",
                "back_trans_input_tokens_mean": -2.277263564032477
            },
            {
                "idx": 5,
                "candidate": "What is the address for TCGdex's API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3029354352217455,
                "back_trans_input": "Task: What is the address for TCGdex&#x27;s API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input Format\n\n### Functionality\n\nA string with only lowercase letters (a-z",
                "back_trans_input_tokens_mean": -2.2813301672015274
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find every card in a Magic the Gathering set."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/hp/%7Bhp%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/hp/{hp}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Write an application that searches for a card from the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9980766843346989,
                "back_trans_input": "Task: Write an application that searches for a card from the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hints\n\n * You can find all endpoints in the OpenAPI file\n * You need to call",
                "back_trans_input_tokens_mean": -2.1829550893683183
            },
            {
                "idx": 2,
                "candidate": "Search for any Card by card name. Ask for all sets with this card in them.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.1973614162868924,
                "back_trans_input": "Task: Search for any Card by card name. Ask for all sets with this card in them.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Example Response\n\n ```json\n {\n     \"identifier\": \"search\",\n     \"functionality\":",
                "back_trans_input_tokens_mean": -2.4626651303521516
            },
            {
                "idx": 3,
                "candidate": "Find the latest list of card names. Show me all the cards in a particular set or rarity.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.52548640424555,
                "back_trans_input": "Task: Find the latest list of card names. Show me all the cards in a particular set or rarity.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Tip:** This challenge uses the same endpoint as Challenge 5!",
                "back_trans_input_tokens_mean": -2.3925842996370994
            },
            {
                "idx": 4,
                "candidate": "Create a list of all cards in the database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8533422296697443,
                "back_trans_input": "Task: Create a list of all cards in the database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## Task 2\n\n**Note:** This task can only be completed once per user.",
                "back_trans_input_tokens_mean": -2.2742369263260453
            },
            {
                "idx": 5,
                "candidate": "How do I use the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5426732518456199,
                "back_trans_input": "Task: How do I use the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Endpoint + Functionality + Description + API Name\n\nYou will",
                "back_trans_input_tokens_mean": -2.194123609350362
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "How do I use the TCGdex API?"
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/hp/%7Bhp%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/hp/{hp}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Add a card to TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6358209609985351,
                "back_trans_input": "Task: Add a card to TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** This problem has been modified since it was originally posted.",
                "back_trans_input_tokens_mean": -2.2093168775611947
            },
            {
                "idx": 2,
                "candidate": "what is the name of the API that will tell me all the cards in a magic deck?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0988735198974608,
                "back_trans_input": "Task: what is the name of the API that will tell me all the cards in a magic deck?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```bash\ncurl https://tcgplayer-api.",
                "back_trans_input_tokens_mean": -2.273354261349409
            },
            {
                "idx": 3,
                "candidate": "Find the list of cards in a database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1459239959716796,
                "back_trans_input": "Task: Find the list of cards in a database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nHint:\n\n> You can use `curl --head \"https://api",
                "back_trans_input_tokens_mean": -2.298868018890096
            },
            {
                "idx": 4,
                "candidate": "How to call the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9166549324989319,
                "back_trans_input": "Task: How to call the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2)\nYou are provided with the following information about an API: a list of endpoints",
                "back_trans_input_tokens_mean": -2.220623431382356
            },
            {
                "idx": 5,
                "candidate": "Find all the sets that have a certain color in its name.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5880584716796875,
                "back_trans_input": "Task: Find all the sets that have a certain color in its name.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:**\n* Endpoint IDs must start with the word \"endpoint\".",
                "back_trans_input_tokens_mean": -2.4366711796940983
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Add a card to TCGdex."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/illustrators",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/illustrators",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Search a database of all Magic the Gathering cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2161098917325337,
                "back_trans_input": "Task: Search a database of all Magic the Gathering cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint\n\n```json\n{\n  \"id\": \"e3f9c1a",
                "back_trans_input_tokens_mean": -2.3304478923479715
            },
            {
                "idx": 2,
                "candidate": "Create a card. What is the API for that?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.279935359954834,
                "back_trans_input": "Task: Create a card. What is the API for that?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://www.thecodinggenie.",
                "back_trans_input_tokens_mean": -2.3745584991000115
            },
            {
                "idx": 3,
                "candidate": "I want to know more about TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5124833186467488,
                "back_trans_input": "Task: I want to know more about TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note that some endpoints may not have all these fields filled out.",
                "back_trans_input_tokens_mean": -2.2083144297293567
            },
            {
                "idx": 4,
                "candidate": "Find a magic card from the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0647483789003813,
                "back_trans_input": "Task: Find a magic card from the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://tcgplayer.com/api](https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.201948380470276
            },
            {
                "idx": 5,
                "candidate": "what's the API for searching in TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.522138705620399,
                "back_trans_input": "Task: what&#x27;s the API for searching in TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solution Guidelines\n\nTo complete the challenge, we need to find the endpoints that are used by the",
                "back_trans_input_tokens_mean": -2.3155753968054786
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find a magic card from the TCGdex API."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/illustrators\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/illustrators",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Can I get an array of all the cards in MTG?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5284470778245192,
                "back_trans_input": "Task: Can I get an array of all the cards in MTG?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**NOTE:** If your solution does not match what we expect it to do, our test cases might have",
                "back_trans_input_tokens_mean": -2.359731622644373
            },
            {
                "idx": 2,
                "candidate": "Get the name of a card. What is the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9043818712234497,
                "back_trans_input": "Task: Get the name of a card. What is the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<details>\n  <summary>Click here for the solution</summary>\n    <ul>",
                "back_trans_input_tokens_mean": -2.3137826375793993
            },
            {
                "idx": 3,
                "candidate": "Add a card.nnWhat is the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.02056489388148,
                "back_trans_input": "Task: Add a card.nnWhat is the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n### Solution\n\n```json\n{\n    \"endpoint\": \"addcard\",\n    \"functionality\":",
                "back_trans_input_tokens_mean": -2.432466839041029
            },
            {
                "idx": 4,
                "candidate": "Identify all of the cards in a particular set and subset.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3231999715169271,
                "back_trans_input": "Task: Identify all of the cards in a particular set and subset.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Endpoint Identifier\n\nYou are provided with a partial endpoint identifier.",
                "back_trans_input_tokens_mean": -2.3686651403253727
            },
            {
                "idx": 5,
                "candidate": "Find all my rare cards in the TCGdex database that cost more than $.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8019233014848497,
                "back_trans_input": "Task: Find all my rare cards in the TCGdex database that cost more than $.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Instructions \n\n* This file should contain your code only.",
                "back_trans_input_tokens_mean": -2.2927421701365502
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Get the name of a card. What is the TCGdex API?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/illustrators'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/illustrators",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all of the cards in a particular set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7170921672474254,
                "back_trans_input": "Task: Find all of the cards in a particular set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## --- Day 2 Part 1: Endpoint Testing --- ##\n\n\n",
                "back_trans_input_tokens_mean": -2.257462572168421
            },
            {
                "idx": 2,
                "candidate": "show me all the cards in a particular set",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0886618874289773,
                "back_trans_input": "Task: show me all the cards in a particular set\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n#### 2.2.1.4.",
                "back_trans_input_tokens_mean": -2.337255424428209
            },
            {
                "idx": 3,
                "candidate": "Find all cards that have been scanned into the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9787125666936238,
                "back_trans_input": "Task: Find all cards that have been scanned into the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**The answer should look like:** \n\n```json\n{\"endpointIdentifier\":\"card_id\",\"functionality",
                "back_trans_input_tokens_mean": -2.2463044098445346
            },
            {
                "idx": 4,
                "candidate": "Find all the cards in the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7932145053690131,
                "back_trans_input": "Task: Find all the cards in the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"id\": \"find_cards\",\n    \"functionality\": \"",
                "back_trans_input_tokens_mean": -2.2236178861845524
            },
            {
                "idx": 5,
                "candidate": "How can I find the latest Magic: The Gathering sets?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3531748881706824,
                "back_trans_input": "Task: How can I find the latest Magic: The Gathering sets?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: What are the current prices on the secondary market?",
                "back_trans_input_tokens_mean": -2.304833186756481
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find all of the cards in a particular set."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/illustrators\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/illustrators",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What API can be used to import card information?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7593852996826171,
                "back_trans_input": "Task: What API can be used to import card information?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 3.4.2.3.",
                "back_trans_input_tokens_mean": -2.389122168223063
            },
            {
                "idx": 2,
                "candidate": "How do I get all my cards from TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1551756347928728,
                "back_trans_input": "Task: How do I get all my cards from TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nSolution:\n```\nGET https://api.",
                "back_trans_input_tokens_mean": -2.2165938956396922
            },
            {
                "idx": 3,
                "candidate": "Find all the cards in a certain set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7507213592529297,
                "back_trans_input": "Task: Find all the cards in a certain set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## [Task 2](https://github.",
                "back_trans_input_tokens_mean": -2.312161797675017
            },
            {
                "idx": 4,
                "candidate": "What is the API that lets you scan a card to get its name?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.368260145187378,
                "back_trans_input": "Task: What is the API that lets you scan a card to get its name?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```js\n// Endpoint\nconst endpoints = {\n  \"TCGdex/cards",
                "back_trans_input_tokens_mean": -2.318386601135794
            },
            {
                "idx": 5,
                "candidate": "Find a card by number of colors. I want to use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2440371074174579,
                "back_trans_input": "Task: Find a card by number of colors. I want to use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[TCGdex Endpoint](https://docs.",
                "back_trans_input_tokens_mean": -2.3934008540778327
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find all the cards in a certain set."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/illustrators\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/illustrators",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find an online version of a board game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8760765075683594,
                "back_trans_input": "Task: Find an online version of a board game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How can I test if my solution works?",
                "back_trans_input_tokens_mean": -2.3029352415387874
            },
            {
                "idx": 2,
                "candidate": "Add a magic the gathering card to database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3610424041748046,
                "back_trans_input": "Task: Add a magic the gathering card to database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v2\n\n**Note:** The solution code can be found in the `src/solution.",
                "back_trans_input_tokens_mean": -2.339434193673535
            },
            {
                "idx": 3,
                "candidate": "What do I need to send to a URL to retrieve someone's personal collection details?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.887861872974195,
                "back_trans_input": "Task: What do I need to send to a URL to retrieve someone&#x27;s personal collection details?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Example\n```json\n{\n  \"id\": \"123\",\n  \"function\": \"",
                "back_trans_input_tokens_mean": -2.4515082635799375
            },
            {
                "idx": 4,
                "candidate": "Find the cost of any card.rRequirement: Use TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1075886090596516,
                "back_trans_input": "Task: Find the cost of any card.rRequirement: Use TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> **Note:** The API endpoint should not contain a trailing slash at the end",
                "back_trans_input_tokens_mean": -2.516132244856461
            },
            {
                "idx": 5,
                "candidate": "Find a list of cards for the current card game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0592740376790364,
                "back_trans_input": "Task: Find a list of cards for the current card game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task 1\n **Endpoint:**\n ```http://localhost:8080/api/cards?",
                "back_trans_input_tokens_mean": -2.29883121131757
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find a list of cards for the current card game."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/illustrators\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/illustrators",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is the list of rares in Magic?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5631912231445313,
                "back_trans_input": "Task: What is the list of rares in Magic?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\n{\n \"function\": \"list\",\n \"description\": \"List all cards",
                "back_trans_input_tokens_mean": -2.3527609750076577
            },
            {
                "idx": 2,
                "candidate": "Find all cards available in a format. Use TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2510709837079048,
                "back_trans_input": "Task: Find all cards available in a format. Use TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Find details about a specific card, including its full art image URL by the name",
                "back_trans_input_tokens_mean": -2.3724444146667207
            },
            {
                "idx": 3,
                "candidate": "what is the name of the API that can be used in a script to find all sets and cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3648157986727627,
                "back_trans_input": "Task: what is the name of the API that can be used in a script to find all sets and cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://developer.cardmarket.",
                "back_trans_input_tokens_mean": -2.295380814736631
            },
            {
                "idx": 4,
                "candidate": "Add a card to the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5337905016812411,
                "back_trans_input": "Task: Add a card to the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input Format\n\n```json\n{\n    \"identifier\": {\n        \"type\": <string",
                "back_trans_input_tokens_mean": -2.216541756082464
            },
            {
                "idx": 5,
                "candidate": "What is the API for finding all cards from one set?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4045969645182292,
                "back_trans_input": "Task: What is the API for finding all cards from one set?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Hint\n\n * You can use the developer console in your browser or any other tool that allows you",
                "back_trans_input_tokens_mean": -2.261436278169805
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Add a card to the TCGdex."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/illustrators\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/illustrators",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "what card can be made with this API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8867326216264204,
                "back_trans_input": "Task: what card can be made with this API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nFunctionality: \"Create Card\".",
                "back_trans_input_tokens_mean": -2.395805151663094
            },
            {
                "idx": 2,
                "candidate": "What is the name of the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.654268890619278,
                "back_trans_input": "Task: What is the name of the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": ".\n\n**This question has been asked in a real interview.",
                "back_trans_input_tokens_mean": -2.1255137291821566
            },
            {
                "idx": 3,
                "candidate": "how to download a full list of magic the gathering card in my language?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.0434255599975586,
                "back_trans_input": "Task: how to download a full list of magic the gathering card in my language?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## [List of endpoints](https://docs.",
                "back_trans_input_tokens_mean": -2.404424555533755
            },
            {
                "idx": 4,
                "candidate": "Describe the API that allows you to look up cards by name.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.302781241280692,
                "back_trans_input": "Task: Describe the API that allows you to look up cards by name.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Example:**  \n```bash\n# \"https://api.",
                "back_trans_input_tokens_mean": -2.2040942144823505
            },
            {
                "idx": 5,
                "candidate": "What is the name of the API where I can get information about a specific card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8571410708957248,
                "back_trans_input": "Task: What is the name of the API where I can get information about a specific card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Generate a new endpoint based on existing endpoints in other APIs\n\nTask: Create a",
                "back_trans_input_tokens_mean": -2.1931007281593655
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "What is the name of the TCGdex API?"
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/illustrators\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/illustrators",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Show all cards with specific colors in an API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.273828125,
                "back_trans_input": "Task: Show all cards with specific colors in an API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**HINTS:** You can use any language that supports JSON parsing/generation, such as JavaScript or",
                "back_trans_input_tokens_mean": -2.4858508286652743
            },
            {
                "idx": 2,
                "candidate": "Find a card from a database.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1057910919189453,
                "back_trans_input": "Task: Find a card from a database.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n**Solution:**\n\n```java\npublic String getCardByName(String name) throws Exception{\n   ",
                "back_trans_input_tokens_mean": -2.4259147284165867
            },
            {
                "idx": 3,
                "candidate": "how do you add cards to TCGdex's database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1289326293127877,
                "back_trans_input": "Task: how do you add cards to TCGdex&#x27;s database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solution\n\n```javascript\n// Solution goes here...",
                "back_trans_input_tokens_mean": -2.2877164260200833
            },
            {
                "idx": 4,
                "candidate": "Find card images from any database. Specifically, use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4862158099810283,
                "back_trans_input": "Task: Find card images from any database. Specifically, use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** [TCGdex API Documentation](https://tcgplayerapi.",
                "back_trans_input_tokens_mean": -2.3707156471584154
            },
            {
                "idx": 5,
                "candidate": "Create a database of card prices. I need some API which can list all the prices for each cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8567916696721858,
                "back_trans_input": "Task: Create a database of card prices. I need some API which can list all the prices for each cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nEndpoint ID: tcdex_cardprice",
                "back_trans_input_tokens_mean": -2.4232243449748063
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "how do you add cards to TCGdex's database?"
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/illustrators/%7Billustrator%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/illustrators/{illustrator}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the value of a card. What is the best way to do it?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8770711001227883,
                "back_trans_input": "Task: Find the value of a card. What is the best way to do it?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Endpoints\n### Card\nFind a specific card by its ID or a list of cards by their",
                "back_trans_input_tokens_mean": -2.2806178645083777
            },
            {
                "idx": 2,
                "candidate": "What are cards rated by TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4713611169294878,
                "back_trans_input": "Task: What are cards rated by TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## How To Run This App Locally\n\n1.",
                "back_trans_input_tokens_mean": -2.3426126727351435
            },
            {
                "idx": 3,
                "candidate": "what card is in a certain deck? ask for the card ID",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8185343424479166,
                "back_trans_input": "Task: what card is in a certain deck? ask for the card ID\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n##/endpoint_to_task)\n\n### Sample Task:\n\nGiven that your endpoint is named",
                "back_trans_input_tokens_mean": -2.473934998383393
            },
            {
                "idx": 4,
                "candidate": "Use the TCGdex API to get information about a specific card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6469656974077225,
                "back_trans_input": "Task: Use the TCGdex API to get information about a specific card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Solution\n\n```python\nfrom tcgapi import tcgapi_client as client\nimport requests",
                "back_trans_input_tokens_mean": -2.161134205033294
            },
            {
                "idx": 5,
                "candidate": "How do you search a database of cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.393743896484375,
                "back_trans_input": "Task: How do you search a database of cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: What are the rules for playing the game?",
                "back_trans_input_tokens_mean": -2.31963608643719
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Use the TCGdex API to get information about a specific card."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/illustrators/%7Billustrator%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/illustrators/{illustrator}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What are the list of all card names sorted by type?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.709695082444411,
                "back_trans_input": "Task: What are the list of all card names sorted by type?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How to submit your answer\n\n1.",
                "back_trans_input_tokens_mean": -2.3762203216552735
            },
            {
                "idx": 2,
                "candidate": "Find a card. Name the API. Ask it to find me a specific card",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0818993417840255,
                "back_trans_input": "Task: Find a card. Name the API. Ask it to find me a specific card\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nEndpoints: https://docs.tcgplayer.",
                "back_trans_input_tokens_mean": -2.410249576233981
            },
            {
                "idx": 3,
                "candidate": "What API do I use to search for card names on TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1387905851006508,
                "back_trans_input": "Task: What API do I use to search for card names on TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"id\": \"search_cards\",\n  \"functionality\": \"",
                "back_trans_input_tokens_mean": -2.261899789174398
            },
            {
                "idx": 4,
                "candidate": "What is the API name to determine if a card exists in a collection?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1723970572153728,
                "back_trans_input": "Task: What is the API name to determine if a card exists in a collection?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v2\n\n## 1. Determine the API Name from the Endpoint Identifier\n\nThe first part of",
                "back_trans_input_tokens_mean": -2.307701347148524
            },
            {
                "idx": 5,
                "candidate": "Find the list of cards that contain a specific card name.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1640296349158654,
                "back_trans_input": "Task: Find the list of cards that contain a specific card name.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** The endpoint's URL contains a search query parameter named card_name with value \"",
                "back_trans_input_tokens_mean": -2.2688974900679155
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "What API do I use to search for card names on TCGdex?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.tcgdex.net/v2/%7Blang%7D/illustrators/%7Billustrator%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/illustrators/{illustrator}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find a specific card, without knowing what the card is.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6443898127629206,
                "back_trans_input": "Task: Find a specific card, without knowing what the card is.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n*Note that some endpoints may not have all four fields filled out.",
                "back_trans_input_tokens_mean": -2.3295158624649046
            },
            {
                "idx": 2,
                "candidate": "Using the TCGdex API, return an entire deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4774044156074524,
                "back_trans_input": "Task: Using the TCGdex API, return an entire deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoint is located in api/tcg/v1/decks.",
                "back_trans_input_tokens_mean": -2.295520447395943
            },
            {
                "idx": 3,
                "candidate": "What are the names of all cards in Magic:The Gathering?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0724944727761405,
                "back_trans_input": "Task: What are the names of all cards in Magic:The Gathering?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Getting started \n\nCreate a new file called endpoints_generator.",
                "back_trans_input_tokens_mean": -2.2331813863805823
            },
            {
                "idx": 4,
                "candidate": "Add images to a deck's card page in the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7543093597187716,
                "back_trans_input": "Task: Add images to a deck&#x27;s card page in the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Notes\n\n### How do I know what endpoints are available?",
                "back_trans_input_tokens_mean": -2.347598693309686
            },
            {
                "idx": 5,
                "candidate": "Use the TCGdex API to search for a card and its stats.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9391587244139777,
                "back_trans_input": "Task: Use the TCGdex API to search for a card and its stats.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n\n\n#### 3. Generate a new endpoint based on your own ideas!\n\nYou can create any",
                "back_trans_input_tokens_mean": -2.1999984122159186
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Use the TCGdex API to search for a card and its stats."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/illustrators/%7Billustrator%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/illustrators/{illustrator}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find cards from a set, using the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0900647640228271,
                "back_trans_input": "Task: Find cards from a set, using the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Example\n\nThe following example shows how your solution should look like if it was correct.",
                "back_trans_input_tokens_mean": -2.250849425792694
            },
            {
                "idx": 2,
                "candidate": "Find all the names for a card.?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4300689697265625,
                "back_trans_input": "Task: Find all the names for a card.?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** *The API name does not match the URL.",
                "back_trans_input_tokens_mean": -2.4299359951379165
            },
            {
                "idx": 3,
                "candidate": "Add card to database using the API TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5911498069763184,
                "back_trans_input": "Task: Add card to database using the API TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### How do I start?\n\nThe easiest way to get started with this challenge is to use ",
                "back_trans_input_tokens_mean": -2.3427846735174005
            },
            {
                "idx": 4,
                "candidate": "what is a way to find prices for specific cards in the app?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7065043131510416,
                "back_trans_input": "Task: what is a way to find prices for specific cards in the app?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task\n\nWhat is a way to buy specific card at best market price?",
                "back_trans_input_tokens_mean": -2.409752198628017
            },
            {
                "idx": 5,
                "candidate": "Find any cards from a certain set. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.000631893382353,
                "back_trans_input": "Task: Find any cards from a certain set. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": ".\n\nAnswer:\n```bash\n$ curl https://api.",
                "back_trans_input_tokens_mean": -2.300767053637588
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find any cards from a certain set. Use the TCGdex API."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/illustrators/%7Billustrator%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/illustrators/{illustrator}",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How do I use TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7323904156684875,
                "back_trans_input": "Task: How do I use TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Re-Generate Endpoint Identifier\n\nYour first job is to come up with your",
                "back_trans_input_tokens_mean": -2.2288402628015587
            },
            {
                "idx": 2,
                "candidate": "What is the API to get a list of all cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6983231764573318,
                "back_trans_input": "Task: What is the API to get a list of all cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nSolution\n\nThe answer we are looking for:\n\nFunctionality: List Cards\nDescription:",
                "back_trans_input_tokens_mean": -2.226502193104137
            },
            {
                "idx": 3,
                "candidate": "how to use tcgdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7950698245655407,
                "back_trans_input": "Task: how to use tcgdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 5.4.4.3.",
                "back_trans_input_tokens_mean": -2.3480997265509838
            },
            {
                "idx": 4,
                "candidate": "how to query for the number of cards in a set?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2790721012995794,
                "back_trans_input": "Task: how to query for the number of cards in a set?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint Re-Generation Task\n\n```\nhttps://tcg.",
                "back_trans_input_tokens_mean": -2.3227943073619497
            },
            {
                "idx": 5,
                "candidate": "Identify all Magic the Gathering cards that have been created at CCG.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9240752160549164,
                "back_trans_input": "Task: Identify all Magic the Gathering cards that have been created at CCG.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[Solution](solution.md) | [Discuss](https://github.",
                "back_trans_input_tokens_mean": -2.3798085280827115
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "What is the API to get a list of all cards?"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/illustrators/%7Billustrator%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/illustrators/{illustrator}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What are some good databases for card game information?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.847625732421875,
                "back_trans_input": "Task: What are some good databases for card game information?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\nTask: What are some good APIs and endpoints for getting news headlines from around the world?",
                "back_trans_input_tokens_mean": -2.34618189379021
            },
            {
                "idx": 2,
                "candidate": "how can I get list of cards?n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2912153764204546,
                "back_trans_input": "Task: how can I get list of cards?n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"cards\": [\n        {\"id\" : 1,\"name\":\"",
                "back_trans_input_tokens_mean": -2.490599897420295
            },
            {
                "idx": 3,
                "candidate": "Find a list of every card released by Magic: TCG.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6887516975402832,
                "back_trans_input": "Task: Find a list of every card released by Magic: TCG.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Hint\nThe endpoints are located in the file named endpoints.",
                "back_trans_input_tokens_mean": -2.3623412085009052
            },
            {
                "idx": 4,
                "candidate": "What is the API for querying the TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9286322501989511,
                "back_trans_input": "Task: What is the API for querying the TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: What is the API for querying the TCGdex?",
                "back_trans_input_tokens_mean": -2.173137198697339
            },
            {
                "idx": 5,
                "candidate": "Use the API to get information on a specific card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0775286356608074,
                "back_trans_input": "Task: Use the API to get information on a specific card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Submitting Incomplete Solutions\nIt's possible to submit an incomplete solution so you can see",
                "back_trans_input_tokens_mean": -2.248283900252176
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "What is the API for querying the TCGdex?"
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/illustrators/%7Billustrator%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/illustrators/{illustrator}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find all cards of a certain type. using the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0040640971239876,
                "back_trans_input": "Task: find all cards of a certain type. using the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## [Previous section](..",
                "back_trans_input_tokens_mean": -2.2804458183154726
            },
            {
                "idx": 2,
                "candidate": "Find the name of a particular card I want to look up",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.565896647317069,
                "back_trans_input": "Task: Find the name of a particular card I want to look up\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nYou can find endpoints at https://tcgapi.",
                "back_trans_input_tokens_mean": -2.3468003164638174
            },
            {
                "idx": 3,
                "candidate": "Create a card list.nTo do this, call the \"\"\"\"\"\"\"\"",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.155533877286044,
                "back_trans_input": "Task: Create a card list.nTo do this, call the &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n\n\n## Example 1:\n```python\nInput:\nTask: Get the user account balance\n",
                "back_trans_input_tokens_mean": -2.3890447691082954
            },
            {
                "idx": 4,
                "candidate": "Find the names and abilities of cards from the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.372768291405269,
                "back_trans_input": "Task: Find the names and abilities of cards from the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Solution:**\n\n```json\n{\n    \"id\": \"card\",\n    \"function\": ",
                "back_trans_input_tokens_mean": -2.2617924213409424
            },
            {
                "idx": 5,
                "candidate": "Find cards for a certain rare. Name of the API: TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0507753899222927,
                "back_trans_input": "Task: Find cards for a certain rare. Name of the API: TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": ".\nIdentifier: tcgcard/\nFunctionality: Search Cards by Card Number or Text.",
                "back_trans_input_tokens_mean": -2.253203819537985
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "find all cards of a certain type. using the TCGdex API."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/illustrators/%7Billustrator%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/illustrators/{illustrator}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "i can find rares using TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9619630941977868,
                "back_trans_input": "Task: i can find rares using TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n(You are not allowed to use google.",
                "back_trans_input_tokens_mean": -2.3558555918002346
            },
            {
                "idx": 2,
                "candidate": "Find a list of Magic The Gathering cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.108659408309243,
                "back_trans_input": "Task: Find a list of Magic The Gathering cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nThe following code snippet is from the file app/Http/Controllers/Api/Card",
                "back_trans_input_tokens_mean": -2.2455463231166948
            },
            {
                "idx": 3,
                "candidate": "How can I query for information on a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2519721984863281,
                "back_trans_input": "Task: How can I query for information on a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2 (3 points)\nCreate a new endpoint that returns all cards owned by a",
                "back_trans_input_tokens_mean": -2.368328906871654
            },
            {
                "idx": 4,
                "candidate": "Find the corresponding card for an unknown card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5288818359375,
                "back_trans_input": "Task: Find the corresponding card for an unknown card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n\n\n\n\n```javascript\n    {\n        \"endpoint\": \"cards/id\",\n        \"description\":",
                "back_trans_input_tokens_mean": -2.3591823043110214
            },
            {
                "idx": 5,
                "candidate": "Find the value of a card. Use API: TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.66590135938981,
                "back_trans_input": "Task: Find the value of a card. Use API: TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:**\n\nYou can use the following endpoints as reference for your implementation:\n\n* [",
                "back_trans_input_tokens_mean": -2.2512887779035067
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find the value of a card. Use API: TCGdex API."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/rarities",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/rarities",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find a TCG card by its name.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5988486766815186,
                "back_trans_input": "Task: find a TCG card by its name.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input Format\n\nA line with four strings separated by spaces.",
                "back_trans_input_tokens_mean": -2.28021185643205
            },
            {
                "idx": 2,
                "candidate": "How do I find a list of cards in the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7145378870122573,
                "back_trans_input": "Task: How do I find a list of cards in the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Hint(s):\nThe documentation can be found at https://github.",
                "back_trans_input_tokens_mean": -2.1886734606926903
            },
            {
                "idx": 3,
                "candidate": "Find the price value of a card. Ask for the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9297213421927558,
                "back_trans_input": "Task: Find the price value of a card. Ask for the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nThe answer here should look like\n\n```javascript\n// 1) Re-generate the functionality variable",
                "back_trans_input_tokens_mean": -2.29385782946711
            },
            {
                "idx": 4,
                "candidate": "Find all available card types.nThe API name is TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1151879098680284,
                "back_trans_input": "Task: Find all available card types.nThe API name is TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nEndpoints:\n\n/cards?limit=100&offset=0&type=all\n\n/cards",
                "back_trans_input_tokens_mean": -2.3771523496379023
            },
            {
                "idx": 5,
                "candidate": "What is the name of the API endpoint that allows to get a list of all Magic: The Gather",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.954155748540705,
                "back_trans_input": "Task: What is the name of the API endpoint that allows to get a list of all Magic: The Gather\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n### Task 2\n\n\n| Endpoint                        | Functionality                   | Description                                             |",
                "back_trans_input_tokens_mean": -2.296171099452649
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "How do I find a list of cards in the TCGdex API?"
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/rarities\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/rarities",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Add a card to TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7379360415718772,
                "back_trans_input": "Task: Add a card to TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nHint: The endpoint's name should start with \"AddCard\".",
                "back_trans_input_tokens_mean": -2.213156126163624
            },
            {
                "idx": 2,
                "candidate": "Find every card in the Magic: The Gathering set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9421107073624929,
                "back_trans_input": "Task: Find every card in the Magic: The Gathering set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v2\n\n---\n\nYour code should look something like this.",
                "back_trans_input_tokens_mean": -2.3328334913341275
            },
            {
                "idx": 3,
                "candidate": "what is the api to find every card in a database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2335074288504464,
                "back_trans_input": "Task: what is the api to find every card in a database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hints:**\n1) What are endpoints used for?",
                "back_trans_input_tokens_mean": -2.3744978818026454
            },
            {
                "idx": 4,
                "candidate": "To create and submit a TCGdex, use this API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5708519379297892,
                "back_trans_input": "Task: To create and submit a TCGdex, use this API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nThe TCGdex Endpoint can be found here https://docs.",
                "back_trans_input_tokens_mean": -2.313147647040231
            },
            {
                "idx": 5,
                "candidate": "Find all cards with the ability to play from a card's hand.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7312757298350334,
                "back_trans_input": "Task: Find all cards with the ability to play from a card&#x27;s hand.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **2. Task** \n\n> You are asked to find endpoints that are not accessible via the",
                "back_trans_input_tokens_mean": -2.4035196797601106
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Add a card to TCGdex API."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/rarities'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/rarities",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Add data to the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.211101806163788,
                "back_trans_input": "Task: Add data to the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```sql\nINSERT INTO endpoints VALUES\n    (\n        '<endpoint_id>',\n        '<functionality>",
                "back_trans_input_tokens_mean": -2.2215629396615206
            },
            {
                "idx": 2,
                "candidate": "Find all of the mtg decks.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5621816461736506,
                "back_trans_input": "Task: Find all of the mtg decks.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Notes on how endpoints are generated in real life\n\n\n* Endpoints can have multiple functionalities depending on their",
                "back_trans_input_tokens_mean": -2.3963711824057237
            },
            {
                "idx": 3,
                "candidate": "Find all the cards from set X. Use the TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.077721308259403,
                "back_trans_input": "Task: Find all the cards from set X. Use the TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nTask: Find all the sets with card type Y.",
                "back_trans_input_tokens_mean": -2.3259119417815084
            },
            {
                "idx": 4,
                "candidate": "search for tcgdex in a list of cards",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4957295735677083,
                "back_trans_input": "Task: search for tcgdex in a list of cards\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2\n\nYou will be given a list of tasks that are associated with endpoints from different",
                "back_trans_input_tokens_mean": -2.44018707231239
            },
            {
                "idx": 5,
                "candidate": "Add a card to TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6357221484184266,
                "back_trans_input": "Task: Add a card to TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nThe generated output should look like this:\n\nTask: Add a card to TCG",
                "back_trans_input_tokens_mean": -2.209571506375464
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Add a card to TCGdex."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/rarities\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/rarities",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find card price information for a specific card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3655838012695312,
                "back_trans_input": "Task: Find card price information for a specific card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Part Two (1 pt) \n\nThe following endpoints are already available on your server endpoint list",
                "back_trans_input_tokens_mean": -2.3043857824022527
            },
            {
                "idx": 2,
                "candidate": "Show the rarity of a card.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9978119532267252,
                "back_trans_input": "Task: Show the rarity of a card.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"id\": \"showRarity\",\n    \"function\": \"Show",
                "back_trans_input_tokens_mean": -2.386531649895434
            },
            {
                "idx": 3,
                "candidate": "Find all the cards that have been reprinted at least once.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0027574811662947,
                "back_trans_input": "Task: Find all the cards that have been reprinted at least once.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Input Format\n\nThe first line contains two integers n(number of endpoints) and m(number",
                "back_trans_input_tokens_mean": -2.2702958046853006
            },
            {
                "idx": 4,
                "candidate": "List all cards in a list. Use the TCGdex API endpoint.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.072217497560713,
                "back_trans_input": "Task: List all cards in a list. Use the TCGdex API endpoint.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nSolution: \n\n```js\nimport { TCGdexApi } from ",
                "back_trans_input_tokens_mean": -2.273710384703519
            },
            {
                "idx": 5,
                "candidate": "What is the easiest way to find the value of a magic card from your phone",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.672504398557875,
                "back_trans_input": "Task: What is the easiest way to find the value of a magic card from your phone\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## 1. Re-Generate the Endpoint Identifier\n\n```yaml\napi_name: tcg",
                "back_trans_input_tokens_mean": -2.384456667983741
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find all the cards that have been reprinted at least once."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/rarities\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/rarities",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Add or edit cards in TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4176869630813598,
                "back_trans_input": "Task: Add or edit cards in TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n## 1. Add Card (Create) [**100 points**]\n\n",
                "back_trans_input_tokens_mean": -2.2851525942484536
            },
            {
                "idx": 2,
                "candidate": "Add a new page on TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4260927113619717,
                "back_trans_input": "Task: Add a new page on TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Resources \n[TCGdex API](https://github.",
                "back_trans_input_tokens_mean": -2.283030214133086
            },
            {
                "idx": 3,
                "candidate": "Find the most popular Magic: The Gathering cards from the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.020079304190243,
                "back_trans_input": "Task: Find the most popular Magic: The Gathering cards from the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://github.com/jamesgolick/TCGdex](https://github",
                "back_trans_input_tokens_mean": -2.1877844961065995
            },
            {
                "idx": 4,
                "candidate": "Write a function that fetches and stores the latest version of TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4912851170489663,
                "back_trans_input": "Task: Write a function that fetches and stores the latest version of TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://github.com/tcgplayer/TCGdex](https://github.",
                "back_trans_input_tokens_mean": -2.2566601421522057
            },
            {
                "idx": 5,
                "candidate": "What are some examples of the types of things this API can be used for?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3760731220245361,
                "back_trans_input": "Task: What are some examples of the types of things this API can be used for?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " \n\nTask: What does it mean that this is a RESTful API?",
                "back_trans_input_tokens_mean": -2.255187754045453
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find the most popular Magic: The Gathering cards from the TCGdex."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/rarities\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/rarities",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find card sets available for the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8325337171554565,
                "back_trans_input": "Task: Find card sets available for the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Notes\nThe endpoint should match the provided functionality exactly.",
                "back_trans_input_tokens_mean": -2.330475815939247
            },
            {
                "idx": 2,
                "candidate": "How can I find the name of all cards in Magic The Gathering?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0990299145380655,
                "back_trans_input": "Task: How can I find the name of all cards in Magic The Gathering?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You need to use [RESTed](https://github.",
                "back_trans_input_tokens_mean": -2.3009254932403564
            },
            {
                "idx": 3,
                "candidate": "Show all cards with more than one printing.?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.95823974609375,
                "back_trans_input": "Task: Show all cards with more than one printing.?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## -->\n\n### Endpoint ID\n\n<!-- (1) What do you think your endpoint id",
                "back_trans_input_tokens_mean": -2.530857585300909
            },
            {
                "idx": 4,
                "candidate": "Find the current price of all cards with certain characteristics.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9397860440340908,
                "back_trans_input": "Task: Find the current price of all cards with certain characteristics.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Notes on endpoints in general\n\n\n* Endpoints should have no more than two parameters.",
                "back_trans_input_tokens_mean": -2.3594418096979823
            },
            {
                "idx": 5,
                "candidate": "How to download my collection of cards? - TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3547073379158974,
                "back_trans_input": "Task: How to download my collection of cards? - TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task\n\n### 1. What should I do first?",
                "back_trans_input_tokens_mean": -2.3254920740043166
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "How can I find the name of all cards in Magic The Gathering?"
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/rarities\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/rarities",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is the API to lookup TCG cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1602228771556506,
                "back_trans_input": "Task: What is the API to lookup TCG cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<details>\n<summary>Show Solution</summary>\n\n```tsx\n// Your code goes",
                "back_trans_input_tokens_mean": -2.2802680333455405
            },
            {
                "idx": 2,
                "candidate": "How can you import card info using TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.689386954674354,
                "back_trans_input": "Task: How can you import card info using TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```js\nimport fetch from \"cross-fetch\";\n```",
                "back_trans_input_tokens_mean": -2.36078185004157
            },
            {
                "idx": 3,
                "candidate": "How do I get a list of all cards in the TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.582959911402534,
                "back_trans_input": "Task: How do I get a list of all cards in the TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n#Solution\n\nThe solution can be found here https://github.",
                "back_trans_input_tokens_mean": -2.1979112206843863
            },
            {
                "idx": 4,
                "candidate": "Add cards to a list of cards. Name this API TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1271155145433214,
                "back_trans_input": "Task: Add cards to a list of cards. Name this API TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nTask: Add card to a list of cards.",
                "back_trans_input_tokens_mean": -2.3154100749803628
            },
            {
                "idx": 5,
                "candidate": "List all the cards in a set. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7130001502878526,
                "back_trans_input": "Task: List all the cards in a set. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nEndpoint ID: \n\nYour code should print out the following output:\n\n```json\n{\n    ",
                "back_trans_input_tokens_mean": -2.21205100678561
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "How do I get a list of all cards in the TCGdex?"
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/rarities\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/rarities",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Add cards to the TCGdex card database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1619066216728904,
                "back_trans_input": "Task: Add cards to the TCGdex card database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Get details about a specific user on the TCGdex website.",
                "back_trans_input_tokens_mean": -2.2444058164544063
            },
            {
                "idx": 2,
                "candidate": "How can I get a list of cards for an MtG deck?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.221038818359375,
                "back_trans_input": "Task: How can I get a list of cards for an MtG deck?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## [3] What does it mean when we say that an HTTP request has been cached?",
                "back_trans_input_tokens_mean": -2.3283727850232805
            },
            {
                "idx": 3,
                "candidate": "Add cards to the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7900861263275146,
                "back_trans_input": "Task: Add cards to the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n## Hints\n\n * You can use the `/endpoints` route in your browser",
                "back_trans_input_tokens_mean": -2.2371008219542325
            },
            {
                "idx": 4,
                "candidate": "find all of a player's cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2860468983650208,
                "back_trans_input": "Task: find all of a player&#x27;s cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task\nYou have been asked to create an endpoint that returns information about a specific card in your collection",
                "back_trans_input_tokens_mean": -2.333659362792969
            },
            {
                "idx": 5,
                "candidate": "Write a program to read the database file for magic: the gathering.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7043624877929688,
                "back_trans_input": "Task: Write a program to read the database file for magic: the gathering.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Sample Input File:\n```\n\"endpoint\": {\n        \"id\": \"1\",",
                "back_trans_input_tokens_mean": -2.385699987411499
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Add cards to the TCGdex database."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/rarities/%7Brarity%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/rarities/{rarity}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is the API name for looking up information about a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9514508928571429,
                "back_trans_input": "Task: What is the API name for looking up information about a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> Hint: The answer can be found in `src/endpoints`",
                "back_trans_input_tokens_mean": -2.240025872582788
            },
            {
                "idx": 2,
                "candidate": "Find the name of a card in the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6521544201033456,
                "back_trans_input": "Task: Find the name of a card in the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## 1. The Endpoint Identifier\n\nThe first part of your answer should be the",
                "back_trans_input_tokens_mean": -2.183289295918233
            },
            {
                "idx": 3,
                "candidate": "find all the cards in a deck. Use TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7928021028637886,
                "back_trans_input": "Task: find all the cards in a deck. Use TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<details>\n  <summary>Click here for the solution</summary>\n    <ul>",
                "back_trans_input_tokens_mean": -2.302828243800572
            },
            {
                "idx": 4,
                "candidate": "Find information for a TCG card. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8925713230581844,
                "back_trans_input": "Task: Find information for a TCG card. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> You can find the answer in [src/endpoints/tcg_cards/card](/",
                "back_trans_input_tokens_mean": -2.2446847798531517
            },
            {
                "idx": 5,
                "candidate": "Find all the cards in a database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2436585859818892,
                "back_trans_input": "Task: Find all the cards in a database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Re-Generate Endpoint Identifier\n\nThe first step is to find out what the",
                "back_trans_input_tokens_mean": -2.325257175373581
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find the name of a card in the TCGdex."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/rarities/%7Brarity%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/rarities/{rarity}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "what card is tcgdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5371353149414062,
                "back_trans_input": "Task: what card is tcgdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## Hint\n\n  The first letter in each word should match the corresponding letters in the original information",
                "back_trans_input_tokens_mean": -2.4384638332185293
            },
            {
                "idx": 2,
                "candidate": "Find a list of cards with the given name",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4389169866388494,
                "back_trans_input": "Task: Find a list of cards with the given name\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nAnswer:\n\nIdentifier: card_by_name\nDescription: Get all card objects",
                "back_trans_input_tokens_mean": -2.2932724150541786
            },
            {
                "idx": 3,
                "candidate": "What is the latest cards added to the TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.186947749211238,
                "back_trans_input": "Task: What is the latest cards added to the TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"endpoint\": \"cards\",\n    \"functionality\": \"latest_",
                "back_trans_input_tokens_mean": -2.268233685880094
            },
            {
                "idx": 4,
                "candidate": "Find the value of a card.? I need to know the value of a card in USD but",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8818496790799227,
                "back_trans_input": "Task: Find the value of a card.? I need to know the value of a card in USD but\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n*Note that the endpoints are randomly generated.",
                "back_trans_input_tokens_mean": -2.5184828440348306
            },
            {
                "idx": 5,
                "candidate": "Find a list of every card in the TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0492503643035889,
                "back_trans_input": "Task: Find a list of every card in the TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n*Hint 1: You can use the `curl` command line tool or similar tools like Post",
                "back_trans_input_tokens_mean": -2.191233385790576
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find a list of every card in the TCGdex API"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.tcgdex.net/v2/%7Blang%7D/rarities/%7Brarity%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/rarities/{rarity}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find list of cards with specific stats including name.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.487479469992898,
                "back_trans_input": "Task: Find list of cards with specific stats including name.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://github.com/OpenChest/TCGdex](https://github.",
                "back_trans_input_tokens_mean": -2.4106534675315574
            },
            {
                "idx": 2,
                "candidate": "how can I find all the rares in MTGO?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8096407376802885,
                "back_trans_input": "Task: how can I find all the rares in MTGO?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n# Task: How do I get today's prices from Card Kingdom?",
                "back_trans_input_tokens_mean": -2.3865123748779298
            },
            {
                "idx": 3,
                "candidate": "Find cards in the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7401554465293885,
                "back_trans_input": "Task: Find cards in the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task\nYou need to find all the Magic cards that cost less than or equal to one mana and",
                "back_trans_input_tokens_mean": -2.223440744258739
            },
            {
                "idx": 4,
                "candidate": "What is the name of the API to check for specific card effects?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3175059727260046,
                "back_trans_input": "Task: What is the name of the API to check for specific card effects?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nEndpoint (endpoint): https://api.",
                "back_trans_input_tokens_mean": -2.3427967684609547
            },
            {
                "idx": 5,
                "candidate": "How do I get the name and card art of a cards from TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.309444170249136,
                "back_trans_input": "Task: How do I get the name and card art of a cards from TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n##### Notes\n\n\n* The functionality has been provided as a string in the format \"method(endpoint",
                "back_trans_input_tokens_mean": -2.3167336562584184
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find cards in the TCGdex database."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/rarities/%7Brarity%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/rarities/{rarity}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How do you use TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8717304587364196,
                "back_trans_input": "Task: How do you use TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"id\": \"a1b2c3\",\n    \"functionality",
                "back_trans_input_tokens_mean": -2.2223798124878495
            },
            {
                "idx": 2,
                "candidate": "Find all the cards in the TCG with the name of a creature or land type.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6751227002394826,
                "back_trans_input": "Task: Find all the cards in the TCG with the name of a creature or land type.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"id\": \"getCreatureTypes\",\n  \"function\": \"",
                "back_trans_input_tokens_mean": -2.260575245166647
            },
            {
                "idx": 3,
                "candidate": "Use the TCGdex API to return card type information.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3870103909419134,
                "back_trans_input": "Task: Use the TCGdex API to return card type information.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How to run locally?\n\n### Install Python dependencies\n```bash\npip install -r",
                "back_trans_input_tokens_mean": -2.282724969021909
            },
            {
                "idx": 4,
                "candidate": "How do I get a list of cards and the images for those cards using this API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4066170140316612,
                "back_trans_input": "Task: How do I get a list of cards and the images for those cards using this API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Hint1\n\n\n```bash\ncurl \"https://tcg-api-tester.",
                "back_trans_input_tokens_mean": -2.3049416870906434
            },
            {
                "idx": 5,
                "candidate": "Find a certain card. I need it in English and French for magic the gathering, but can use whatever",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9388334100896663,
                "back_trans_input": "Task: Find a certain card. I need it in English and French for magic the gathering, but can use whatever\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nYou may not have access to all endpoints or all APIs, so if some information is missing please fill",
                "back_trans_input_tokens_mean": -2.5712325432721306
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "How do you use TCGdex API?"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/rarities/%7Brarity%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/rarities/{rarity}",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the name and number of a card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9705081939697265,
                "back_trans_input": "Task: Find the name and number of a card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoints are not in English!",
                "back_trans_input_tokens_mean": -2.306692925569053
            },
            {
                "idx": 2,
                "candidate": "What is the API for TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6923812389373779,
                "back_trans_input": "Task: What is the API for TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<details>\n  <summary><b>Solution</b></summary>\n\n  ```\n  Function",
                "back_trans_input_tokens_mean": -2.179433341379519
            },
            {
                "idx": 3,
                "candidate": "What are all the card names in TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9804582397143046,
                "back_trans_input": "Task: What are all the card names in TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"card_name\": [\n    {\n      \"id\": 1,",
                "back_trans_input_tokens_mean": -2.2367640495300294
            },
            {
                "idx": 4,
                "candidate": "Find the value of some cards. The API should have a search function that can be used to find the",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3100967407226562,
                "back_trans_input": "Task: Find the value of some cards. The API should have a search function that can be used to find the\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\nfetch(\"https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.4119329692936744
            },
            {
                "idx": 5,
                "candidate": "Use TCGdex API to find cards based on the text of an image.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2599284847577412,
                "back_trans_input": "Task: Use TCGdex API to find cards based on the text of an image.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n------------------------------- EXAMPLE ----------------------------------\n\nendpoint_id = \"find-cards-",
                "back_trans_input_tokens_mean": -2.322299285556959
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "What is the API for TCGdex?"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/rarities/%7Brarity%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/rarities/{rarity}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How do you get the mtg metadex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.775746565598708,
                "back_trans_input": "Task: How do you get the mtg metadex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Hint(s)\n\nThe endpoint is not in the same format as the other endpoints.",
                "back_trans_input_tokens_mean": -2.4201822893335185
            },
            {
                "idx": 2,
                "candidate": "What is the most recent change to my card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.71993408203125,
                "back_trans_input": "Task: What is the most recent change to my card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n## 3.3.1 - Create your first endpoint\n\nThe endpoint we are",
                "back_trans_input_tokens_mean": -2.378832040009675
            },
            {
                "idx": 3,
                "candidate": "Create an account with TCGdex.com.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.992708292874423,
                "back_trans_input": "Task: Create an account with TCGdex.com.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Submission Detail\n\n**Submission Link:** https://codedamn.",
                "back_trans_input_tokens_mean": -2.249736917128257
            },
            {
                "idx": 4,
                "candidate": "Find out the card's id number for TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4718694314360619,
                "back_trans_input": "Task: Find out the card&#x27;s id number for TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task: Find out how many cards are in my collection that have rarity R or higher on TCG",
                "back_trans_input_tokens_mean": -2.320888726607613
            },
            {
                "idx": 5,
                "candidate": "What is the API for retrieving card stats from TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1276123449206352,
                "back_trans_input": "Task: What is the API for retrieving card stats from TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** You can find the answer on the TCGdex website or in the documentation on GitHub",
                "back_trans_input_tokens_mean": -2.2000439081873213
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Create an account with TCGdex.com."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/rarities/%7Brarity%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/rarities/{rarity}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find a list of cards in the game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1714820861816406,
                "back_trans_input": "Task: Find a list of cards in the game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n#### Task:\nFind a list of cards in the game.",
                "back_trans_input_tokens_mean": -2.2761916757744047
            },
            {
                "idx": 2,
                "candidate": "show me the most recent cards in a collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.72503662109375,
                "back_trans_input": "Task: show me the most recent cards in a collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Task 1\n\nThe first step is to find all endpoints that have the same functionality as the",
                "back_trans_input_tokens_mean": -2.3986680419356734
            },
            {
                "idx": 3,
                "candidate": "What is the API to get all cards in the database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.171234130859375,
                "back_trans_input": "Task: What is the API to get all cards in the database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nEndpoints are used by developers who want to build applications on top of your API, so it should",
                "back_trans_input_tokens_mean": -2.258767942948775
            },
            {
                "idx": 4,
                "candidate": "What API will give me a list of all magic the gathering cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1329181671142579,
                "back_trans_input": "Task: What API will give me a list of all magic the gathering cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: What API can I use to get my collection balance in USD?",
                "back_trans_input_tokens_mean": -2.2860895906175887
            },
            {
                "idx": 5,
                "candidate": "How can I retrieve all of the card descriptions?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.91385498046875,
                "back_trans_input": "Task: How can I retrieve all of the card descriptions?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://github.com/CryptoCollectibleGames/tcgdex-api](https://github",
                "back_trans_input_tokens_mean": -2.384047508239746
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "What API will give me a list of all magic the gathering cards?"
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/rarities/%7Brarity%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/rarities/{rarity}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find the price of a card with the name",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5150212374600498,
                "back_trans_input": "Task: find the price of a card with the name\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```http://127.0.0.",
                "back_trans_input_tokens_mean": -2.3399926657988646
            },
            {
                "idx": 2,
                "candidate": "Find what card a particular creature is with the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2253532707691193,
                "back_trans_input": "Task: Find what card a particular creature is with the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n##### Solution\n\n1) First we get all cards from tcg.",
                "back_trans_input_tokens_mean": -2.3220768903209046
            },
            {
                "idx": 3,
                "candidate": "what is the api endpoint to get a list of all cards that can be played in this game",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.277164806019176,
                "back_trans_input": "Task: what is the api endpoint to get a list of all cards that can be played in this game\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n### Endpoint: `/games/{game_id}/cards?",
                "back_trans_input_tokens_mean": -2.2320914309248967
            },
            {
                "idx": 4,
                "candidate": "Find the name of a card and its color.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.220875783400102,
                "back_trans_input": "Task: Find the name of a card and its color.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n# How should I submit my solution?\n\n## File Name: **endpoint_generator.",
                "back_trans_input_tokens_mean": -2.273057125232838
            },
            {
                "idx": 5,
                "candidate": "Find all the different cards in a particular set",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4149811484596946,
                "back_trans_input": "Task: Find all the different cards in a particular set\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Example Answer\n\n\n```javascript\n// Functionality: \"Find all the different cards in a particular",
                "back_trans_input_tokens_mean": -2.3310675576468496
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find the name of a card and its color."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/regulation-marks",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/regulation-marks",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Query the TCGdex API to find all cards in particular set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.212211787700653,
                "back_trans_input": "Task: Query the TCGdex API to find all cards in particular set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n##### Input Format For Functionality, Endpoint And Description\n\nThe input format should contain",
                "back_trans_input_tokens_mean": -2.308545026104007
            },
            {
                "idx": 2,
                "candidate": "Find a list of all Magic cards and their rarities.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2718588022085338,
                "back_trans_input": "Task: Find a list of all Magic cards and their rarities.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nThe solution has been provided as an example in the file named solution.",
                "back_trans_input_tokens_mean": -2.265147759033753
            },
            {
                "idx": 3,
                "candidate": "if I can call to look up the card name in database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.6293247767857144,
                "back_trans_input": "Task: if I can call to look up the card name in database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```swift\npublic func getCardByName(_ name: String) throws -> Card?",
                "back_trans_input_tokens_mean": -2.5100987236779013
            },
            {
                "idx": 4,
                "candidate": "Create database of card effects. Who can help?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.34691162109375,
                "back_trans_input": "Task: Create database of card effects. Who can help?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nSample answer from student:\n\nCard effects data are stored in the cards_effects table",
                "back_trans_input_tokens_mean": -2.4670704272058277
            },
            {
                "idx": 5,
                "candidate": "how to get the mtg card image?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.526729236949574,
                "back_trans_input": "Task: how to get the mtg card image?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**HINT:** You are looking at the TCGdex API documentation here https://tcgdex",
                "back_trans_input_tokens_mean": -2.382961683184187
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Query the TCGdex API to find all cards in particular set."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/regulation-marks\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/regulation-marks",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all of the cards in a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6945388793945313,
                "back_trans_input": "Task: Find all of the cards in a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n***\n\nTask: Get all the information about a particular card's price history.",
                "back_trans_input_tokens_mean": -2.2998385919588746
            },
            {
                "idx": 2,
                "candidate": "What does 'scanner error' mean?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.1838489879261362,
                "back_trans_input": "Task: What does &#x27;scanner error&#x27; mean?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Answer key\n\nThe answer key can be found in this file: \n\n[answer_key_",
                "back_trans_input_tokens_mean": -2.3219007441872046
            },
            {
                "idx": 3,
                "candidate": "Add a new card to the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6052778317378118,
                "back_trans_input": "Task: Add a new card to the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Expected Output \n\nTask: Add a new card to the TCGdex database.",
                "back_trans_input_tokens_mean": -2.188228416442871
            },
            {
                "idx": 4,
                "candidate": "Write an app that lets me read from the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5633264700571696,
                "back_trans_input": "Task: Write an app that lets me read from the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoints are case sensitive! Be sure to have them in the same case as they appear",
                "back_trans_input_tokens_mean": -2.277335200689535
            },
            {
                "idx": 5,
                "candidate": "Find the list of all cards in a game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0198815085671165,
                "back_trans_input": "Task: Find the list of all cards in a game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nTask: Get details about a single card by its id.",
                "back_trans_input_tokens_mean": -2.2570661262229637
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Add a new card to the TCGdex database."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/regulation-marks'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/regulation-marks",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all of the cards that have an image.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.38321533203125,
                "back_trans_input": "Task: Find all of the cards that have an image.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Create an Endpoint with an Example Response Body\n\nYou are going to create an",
                "back_trans_input_tokens_mean": -2.2732468711005316
            },
            {
                "idx": 2,
                "candidate": "Find a list of all cards in a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8164691925048828,
                "back_trans_input": "Task: Find a list of all cards in a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Hint(s)\n\nThe first letter must always be uppercase.",
                "back_trans_input_tokens_mean": -2.253802016929344
            },
            {
                "idx": 3,
                "candidate": "Find all the cards that have a particular card name.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0332056681315105,
                "back_trans_input": "Task: Find all the cards that have a particular card name.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **1.** Re-generate the Endpoint Identifier\n\nThe first step in creating your new",
                "back_trans_input_tokens_mean": -2.2696350867595148
            },
            {
                "idx": 4,
                "candidate": "Use TCGdex API to find the price of an item.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9336280652454921,
                "back_trans_input": "Task: Use TCGdex API to find the price of an item.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n##### Task\n\nThe following URL returns the current market value in USD of an item on the Pokemon",
                "back_trans_input_tokens_mean": -2.204881284918104
            },
            {
                "idx": 5,
                "candidate": "What is the API to add a card to the TCG database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9536916414896647,
                "back_trans_input": "Task: What is the API to add a card to the TCG database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 🏆 Challenge:\n\nFind endpoints that do not have any documentation in the readme file",
                "back_trans_input_tokens_mean": -2.206618751798357
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find a list of all cards in a set."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/regulation-marks\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/regulation-marks",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Add deck from the TCGdex to an account.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9867115020751953,
                "back_trans_input": "Task: Add deck from the TCGdex to an account.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"id\": \"add_deck\",\n  \"function\": \"Add",
                "back_trans_input_tokens_mean": -2.350046823241494
            },
            {
                "idx": 2,
                "candidate": "Find all the cards in Magic: The Gathering.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7886562997644598,
                "back_trans_input": "Task: Find all the cards in Magic: The Gathering.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input Format\n\nThe first line contains a single integer denoting the number of endpoints that follow.",
                "back_trans_input_tokens_mean": -2.27311298361531
            },
            {
                "idx": 3,
                "candidate": "Find the name of a card, or list every card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6455107102027307,
                "back_trans_input": "Task: Find the name of a card, or list every card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v2\n\n## 1. Find the name of a card\n\nThe request URL should look like this",
                "back_trans_input_tokens_mean": -2.335599333589727
            },
            {
                "idx": 4,
                "candidate": "Find information about a specific card. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6240778118371964,
                "back_trans_input": "Task: Find information about a specific card. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Find an Endpoint on the TCGdex API\n\nNavigate to https",
                "back_trans_input_tokens_mean": -2.2409091607659266
            },
            {
                "idx": 5,
                "candidate": "Use TCGdex API to create a list of all cards in a deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8580290706534135,
                "back_trans_input": "Task: Use TCGdex API to create a list of all cards in a deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[TCGdex API](https://github.",
                "back_trans_input_tokens_mean": -2.2327458651169487
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find information about a specific card. Use the TCGdex API."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/regulation-marks\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/regulation-marks",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "show the list of cards that contain a certain keyword",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6698061625162761,
                "back_trans_input": "Task: show the list of cards that contain a certain keyword\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Endpoint (TCGdex)\n\nYou are provided with one or",
                "back_trans_input_tokens_mean": -2.3513305165149547
            },
            {
                "idx": 2,
                "candidate": "search magic the gathering cards by name and set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6589508056640625,
                "back_trans_input": "Task: search magic the gathering cards by name and set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** Endpoints are not required to have a unique id as long as it matches our naming convention",
                "back_trans_input_tokens_mean": -2.3255647972778037
            },
            {
                "idx": 3,
                "candidate": "find cards with the number 7 in the text.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.33525390625,
                "back_trans_input": "Task: find cards with the number 7 in the text.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hints\n\nThe endpoints are stored inside an array called `endpoints`.",
                "back_trans_input_tokens_mean": -2.3296084863330244
            },
            {
                "idx": 4,
                "candidate": "Find the name of the card in a deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2478693181818181,
                "back_trans_input": "Task: Find the name of the card in a deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```java\npublic class DeckCardFinder extends AbstractRestController {\n  public String findDeckCard",
                "back_trans_input_tokens_mean": -2.272467248969608
            },
            {
                "idx": 5,
                "candidate": "How do I get a list of the cards in the TCGdex database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7562117311689589,
                "back_trans_input": "Task: How do I get a list of the cards in the TCGdex database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## 4. Create a new Endpoint\n\nWrite your own JSON file with all necessary",
                "back_trans_input_tokens_mean": -2.1865123728047244
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "How do I get a list of the cards in the TCGdex database?"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/regulation-marks\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/regulation-marks",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find cards that have been used in a certain format.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3904120127360027,
                "back_trans_input": "Task: Find cards that have been used in a certain format.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n---\n\n# <a name=\"task2\"></a> Task 2 Endpoint\n\nThe",
                "back_trans_input_tokens_mean": -2.329408722186307
            },
            {
                "idx": 2,
                "candidate": "Use TCGdex API to look up card information.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8536810080210367,
                "back_trans_input": "Task: Use TCGdex API to look up card information.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [Section 3](/README-v2.",
                "back_trans_input_tokens_mean": -2.27719191421162
            },
            {
                "idx": 3,
                "candidate": "What API can I use to search for a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9339001973470052,
                "back_trans_input": "Task: What API can I use to search for a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## [Task 3] Find out what endpoints are available in the API\n\n**Instructions:** You",
                "back_trans_input_tokens_mean": -2.2985727393299067
            },
            {
                "idx": 4,
                "candidate": "What is the name of the API I would use to see every card ever made for a specific game?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2067826010964133,
                "back_trans_input": "Task: What is the name of the API I would use to see every card ever made for a specific game?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Submitting Incomplete Solutions\nIt's possible to submit an incomplete solution so you can see",
                "back_trans_input_tokens_mean": -2.2366968583659967
            },
            {
                "idx": 5,
                "candidate": "Find the name of a card, or all cards in a deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0822457671165466,
                "back_trans_input": "Task: Find the name of a card, or all cards in a deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How to run your code locally?\n\n1.",
                "back_trans_input_tokens_mean": -2.235951515180724
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Use TCGdex API to look up card information."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/regulation-marks\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/regulation-marks",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What APIs do the different card companies provide?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.3273193359375,
                "back_trans_input": "Task: What APIs do the different card companies provide?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Endpoint identifier\n\n\n```json\n{\"endpoint_identifier\":\"<your response>\"}\n```\n\n",
                "back_trans_input_tokens_mean": -2.442598467675325
            },
            {
                "idx": 2,
                "candidate": "Show a list of all cards in the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6795006434122721,
                "back_trans_input": "Task: Show a list of all cards in the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Example:\n\nSuppose we have this endpoint, with its corresponding information about it from our mockup",
                "back_trans_input_tokens_mean": -2.1615097650459836
            },
            {
                "idx": 3,
                "candidate": "What is the easiest way to find card values?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4278854370117187,
                "back_trans_input": "Task: What is the easiest way to find card values?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[Click here](https://github.com/TCGDeckTech/tcgdecktech/",
                "back_trans_input_tokens_mean": -2.3476748643098055
            },
            {
                "idx": 4,
                "candidate": "Find the price of a card. Use this API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.116696834564209,
                "back_trans_input": "Task: Find the price of a card. Use this API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Sample Output:\n```json\n{\n    \"id\": \"price\",\n    \"functionality",
                "back_trans_input_tokens_mean": -2.296485585903903
            },
            {
                "idx": 5,
                "candidate": "Find all the cards in a deck. Name the API that does this.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.890434741973877,
                "back_trans_input": "Task: Find all the cards in a deck. Name the API that does this.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solution\n\nThe solution uses an endpoint called findCardsByDeckId() with functionality set",
                "back_trans_input_tokens_mean": -2.329393066136183
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Show a list of all cards in the TCGdex database."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/regulation-marks\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/regulation-marks",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the cost of a card from your library.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.314805117520419,
                "back_trans_input": "Task: Find the cost of a card from your library.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Input\n\nInput contains two lines.",
                "back_trans_input_tokens_mean": -2.336525351912887
            },
            {
                "idx": 2,
                "candidate": "Find out if a card exists in the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8673293511072795,
                "back_trans_input": "Task: Find out if a card exists in the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\n// Your code goes here...",
                "back_trans_input_tokens_mean": -2.201394794223545
            },
            {
                "idx": 3,
                "candidate": "find all the cards in a deck of card by its ID number",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8967498779296874,
                "back_trans_input": "Task: find all the cards in a deck of card by its ID number\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n-------------------------------------\n\nTask: get information about a Pokémon by its ID number\n\nFunctionality: ",
                "back_trans_input_tokens_mean": -2.3879874633239195
            },
            {
                "idx": 4,
                "candidate": "Add a new card to the database. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6682774389491362,
                "back_trans_input": "Task: Add a new card to the database. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Sample Response\n\n ```json\n {\n    \"endpoint\": \"https://tcg-api.",
                "back_trans_input_tokens_mean": -2.223982233750193
            },
            {
                "idx": 5,
                "candidate": "Find the value of my card. The name of the card is TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9454777491720099,
                "back_trans_input": "Task: Find the value of my card. The name of the card is TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"id\": \"getMyCard\",\n  \"functionality\": \"",
                "back_trans_input_tokens_mean": -2.2584365861028686
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Add a new card to the database. Use the TCGdex API."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/regulation-marks/%7Bregulation-mark%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/regulation-marks/{regulation-mark}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all of the cards in MTG.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0854721069335938,
                "back_trans_input": "Task: Find all of the cards in MTG.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## [Previous section](https://github.",
                "back_trans_input_tokens_mean": -2.4402290980021157
            },
            {
                "idx": 2,
                "candidate": "Show the list of card for a specific TCG.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6450750827789307,
                "back_trans_input": "Task: Show the list of card for a specific TCG.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n### Example\n\n```json5\n{\n\t\"id\": \"card\",\n\t\"function\": ",
                "back_trans_input_tokens_mean": -2.3252496631867294
            },
            {
                "idx": 3,
                "candidate": "Create an account on TCGdex.com?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.082646738399159,
                "back_trans_input": "Task: Create an account on TCGdex.com?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: List all of your orders?",
                "back_trans_input_tokens_mean": -2.291119173032428
            },
            {
                "idx": 4,
                "candidate": "Find all the cards from a set of TCG.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2807014385859172,
                "back_trans_input": "Task: Find all the cards from a set of TCG.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\nfunction findCards(set) {\n  return new Promise((resolve, reject)",
                "back_trans_input_tokens_mean": -2.2810326322503047
            },
            {
                "idx": 5,
                "candidate": "Add a new card to your database using the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9762955084443092,
                "back_trans_input": "Task: Add a new card to your database using the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You can find more information about how endpoints are generated in the section titled \"Endpoints",
                "back_trans_input_tokens_mean": -2.2387614862053797
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Add a new card to your database using the TCGdex API."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/regulation-marks/%7Bregulation-mark%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/regulation-marks/{regulation-mark}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Create a search tool that can return data from the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3387646254371195,
                "back_trans_input": "Task: Create a search tool that can return data from the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Please note:** This project has been created by the author with no intention whatsoever to infringe any copy",
                "back_trans_input_tokens_mean": -2.2304431597391763
            },
            {
                "idx": 2,
                "candidate": "Find out if an unknown card has been banned from one of my favorite games.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.496682559742647,
                "back_trans_input": "Task: Find out if an unknown card has been banned from one of my favorite games.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** The endpoint that you are looking for starts with cards/banned_cards/.",
                "back_trans_input_tokens_mean": -2.3252670221161424
            },
            {
                "idx": 3,
                "candidate": "What is the API name for a list of all cards in the Magic: The Gathering database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7189850012461344,
                "back_trans_input": "Task: What is the API name for a list of all cards in the Magic: The Gathering database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Instructions.\n\n1. You must use the `endpoint_generator.",
                "back_trans_input_tokens_mean": -2.2375845297788963
            },
            {
                "idx": 4,
                "candidate": "Find all cards with a specific name.r",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0166371663411458,
                "back_trans_input": "Task: Find all cards with a specific name.r\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hints\n\n * The endpoint has one parameter\n * The parameter can take on multiple values\n *",
                "back_trans_input_tokens_mean": -2.410802145984685
            },
            {
                "idx": 5,
                "candidate": "Find the rarity of a card that can be played in magic the gathering.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2332270005170036,
                "back_trans_input": "Task: Find the rarity of a card that can be played in magic the gathering.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 3. Implementing a new Endpoint using OpenAPI Specification v3\n\nIn the previous",
                "back_trans_input_tokens_mean": -2.292486781567599
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "What is the API name for a list of all cards in the Magic: The Gathering database?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.tcgdex.net/v2/%7Blang%7D/regulation-marks/%7Bregulation-mark%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/regulation-marks/{regulation-mark}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Create and query an e-commerce store for TCGs.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.1484486290386746,
                "back_trans_input": "Task: Create and query an e-commerce store for TCGs.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** You can use your browser's developer tools to look at the request headers on an HTTP",
                "back_trans_input_tokens_mean": -2.348874907060103
            },
            {
                "idx": 2,
                "candidate": "how do I use TCGdex API to get cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.329079921428974,
                "back_trans_input": "Task: how do I use TCGdex API to get cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\nThe solution can be found in [this file](solution/index.",
                "back_trans_input_tokens_mean": -2.321399379420925
            },
            {
                "idx": 3,
                "candidate": "Use TCGdex API to find the value of any card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0131165810993739,
                "back_trans_input": "Task: Use TCGdex API to find the value of any card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** Endpoint names are always pluralized versions of their associated resource names that are used in the",
                "back_trans_input_tokens_mean": -2.280224255153111
            },
            {
                "idx": 4,
                "candidate": "search for any given card name. ?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.456890869140625,
                "back_trans_input": "Task: search for any given card name. ?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n[https://api.tcgplayer.",
                "back_trans_input_tokens_mean": -2.4671525687814873
            },
            {
                "idx": 5,
                "candidate": "Find all cards.nGet a list of all cards that are available in the TCGdex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1064764965664258,
                "back_trans_input": "Task: Find all cards.nGet a list of all cards that are available in the TCGdex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> Note that endpoints and APIs can have the same names.",
                "back_trans_input_tokens_mean": -2.3410410800222623
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Use TCGdex API to find the value of any card."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/regulation-marks/%7Bregulation-mark%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/regulation-marks/{regulation-mark}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Search for cards in TCGdex's database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0808143019676208,
                "back_trans_input": "Task: Search for cards in TCGdex&#x27;s database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Open up a new file called `search_cards.",
                "back_trans_input_tokens_mean": -2.251653232405671
            },
            {
                "idx": 2,
                "candidate": "What is the current TCGdex price for a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0575796791485377,
                "back_trans_input": "Task: What is the current TCGdex price for a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Expected Output\n```json\n{\n\t\"endpointId\": \"1\",\n\t\"function\":",
                "back_trans_input_tokens_mean": -2.2931869953602284
            },
            {
                "idx": 3,
                "candidate": "What is the API for adding a card to TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6735075871149699,
                "back_trans_input": "Task: What is the API for adding a card to TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\nTask: What is the API for getting all cards on TCGdex?",
                "back_trans_input_tokens_mean": -2.1463135480880737
            },
            {
                "idx": 4,
                "candidate": "Search for information on a specific card. I have the name of the card, and I'd like",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2162073308771306,
                "back_trans_input": "Task: Search for information on a specific card. I have the name of the card, and I&#x27;d like\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solution\n\nIn order to solve this challenge we need to know about the endpoints that are available in",
                "back_trans_input_tokens_mean": -2.372199324310803
            },
            {
                "idx": 5,
                "candidate": "search a deck of cards.? I want to search for the name of a card and see what",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.106851577758789,
                "back_trans_input": "Task: search a deck of cards.? I want to search for the name of a card and see what\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v0\n\n\n## How To Use This Template\n\n<https://github.",
                "back_trans_input_tokens_mean": -2.512515891311515
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "What is the API for adding a card to TCGdex?"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/regulation-marks/%7Bregulation-mark%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/regulation-marks/{regulation-mark}",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is the API of TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9148608446121216,
                "back_trans_input": "Task: What is the API of TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task solution:\n```java\nString apiName = \"TCGdex\";\n",
                "back_trans_input_tokens_mean": -2.1910071505440607
            },
            {
                "idx": 2,
                "candidate": "Search for Magic the Gathering card by its name.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4573036215522073,
                "back_trans_input": "Task: Search for Magic the Gathering card by its name.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n\n\n```javascript\n// Your code here...",
                "back_trans_input_tokens_mean": -2.2583343011361583
            },
            {
                "idx": 3,
                "candidate": "What are all cards in the Magic: The Gathering database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1457668359463031,
                "back_trans_input": "Task: What are all cards in the Magic: The Gathering database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n##### Input Format \n\n* Functionality as a string;\n* Description as a string;\n*",
                "back_trans_input_tokens_mean": -2.3281748338179153
            },
            {
                "idx": 4,
                "candidate": "How do you add cards to the TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9248355726401011,
                "back_trans_input": "Task: How do you add cards to the TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n```\nhttps://tcgplayer.com/api/v2/endpoints\n```",
                "back_trans_input_tokens_mean": -2.2196602301164106
            },
            {
                "idx": 5,
                "candidate": "What is the name of a database that can be used to list all the cards in Magic set?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.443998064313616,
                "back_trans_input": "Task: What is the name of a database that can be used to list all the cards in Magic set?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Endpoint Identification\n\nTo identify endpoints we need to understand what makes up an endpoint.",
                "back_trans_input_tokens_mean": -2.3122332621428927
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "What is the API of TCGdex?"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/regulation-marks/%7Bregulation-mark%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/regulation-marks/{regulation-mark}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Use the TCG dex API to get a list of all card names.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0055245932410746,
                "back_trans_input": "Task: Use the TCG dex API to get a list of all card names.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Endpoint Name Generation\nYou are required to generate a descriptive but concise and unique endpoint",
                "back_trans_input_tokens_mean": -2.2497581612747326
            },
            {
                "idx": 2,
                "candidate": "Find all cards from a specific set in the database of this API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3849131266276042,
                "back_trans_input": "Task: Find all cards from a specific set in the database of this API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## ------------------------------ EXAMPLE ENDPOINT ------------------------------ ##\n\n    GET http://localhost:",
                "back_trans_input_tokens_mean": -2.3159278013876508
            },
            {
                "idx": 3,
                "candidate": "find cards in a set.nfind cards in a set",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0831815004348755,
                "back_trans_input": "Task: find cards in a set.nfind cards in a set\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Expected Output\n\nThe output should contain all four values separated by newlines as follows\n```bash",
                "back_trans_input_tokens_mean": -2.434053479541432
            },
            {
                "idx": 4,
                "candidate": "Find the name of a card from a database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8273469607035319,
                "back_trans_input": "Task: Find the name of a card from a database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nExpected response body: \n\n{\n    \"id\": \"5f0e7bfc-",
                "back_trans_input_tokens_mean": -2.2766430002671703
            },
            {
                "idx": 5,
                "candidate": "Show all the card names of Magic. Name: TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4707322493195534,
                "back_trans_input": "Task: Show all the card names of Magic. Name: TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task\n\nFor each task in tasks.",
                "back_trans_input_tokens_mean": -2.3906113426242253
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find the name of a card from a database."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/regulation-marks/%7Bregulation-mark%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/regulation-marks/{regulation-mark}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "show a list of all card images.?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.726280975341797,
                "back_trans_input": "Task: show a list of all card images.?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n# [Previous section](https://github.",
                "back_trans_input_tokens_mean": -2.440298429075277
            },
            {
                "idx": 2,
                "candidate": "Find a list of all the cards in an MTG set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7630304609026227,
                "back_trans_input": "Task: Find a list of all the cards in an MTG set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## -->\n<br>\n\nTo find out more about endpoints see our documentation on them here",
                "back_trans_input_tokens_mean": -2.2556122337375677
            },
            {
                "idx": 3,
                "candidate": "Find any card by name. Use a site like TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5771906524896622,
                "back_trans_input": "Task: Find any card by name. Use a site like TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Expected Output\n\nExpected output should contain all four fields in JSON format.",
                "back_trans_input_tokens_mean": -2.414889164730511
            },
            {
                "idx": 4,
                "candidate": "find a card with certain characteristics.? I've got some keywords and can't find the name",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7404049960049717,
                "back_trans_input": "Task: find a card with certain characteristics.? I&#x27;ve got some keywords and can&#x27;t find the name\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n&nbsp;\n\n<!-- This scenario was generated with https://github.",
                "back_trans_input_tokens_mean": -2.549719185598435
            },
            {
                "idx": 5,
                "candidate": "Use TCGdex API to search for the most popular cards in a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.206523683336046,
                "back_trans_input": "Task: Use TCGdex API to search for the most popular cards in a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"id\": \"mostpopular\",\n    \"function\": \"getMost",
                "back_trans_input_tokens_mean": -2.254158391123233
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find a list of all the cards in an MTG set."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/regulation-marks/%7Bregulation-mark%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/regulation-marks/{regulation-mark}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the prices for Magic: The Gathering cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.047785997390747,
                "back_trans_input": "Task: Find the prices for Magic: The Gathering cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hints\nThe endpoints are located at https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.278608216179742
            },
            {
                "idx": 2,
                "candidate": "Find the price of all Magic: The Gathering cards from this year.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3967331409454347,
                "back_trans_input": "Task: Find the price of all Magic: The Gathering cards from this year.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " (https://api.tcgplayer.",
                "back_trans_input_tokens_mean": -2.322054828916277
            },
            {
                "idx": 3,
                "candidate": "What is the api for looking up cards in TCG?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1396920680999756,
                "back_trans_input": "Task: What is the api for looking up cards in TCG?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n--- \n\nTask: What is the api for getting card details from TCG?",
                "back_trans_input_tokens_mean": -2.291222485628995
            },
            {
                "idx": 4,
                "candidate": "Create a deck.tcg file using API TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2699040384853588,
                "back_trans_input": "Task: Create a deck.tcg file using API TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\n{\n  \"id\": \"1\",\n  \"functionality\": \"...",
                "back_trans_input_tokens_mean": -2.3966700292266574
            },
            {
                "idx": 5,
                "candidate": "Find all cards with a certain effect. Include the name of the effect.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1884288787841797,
                "back_trans_input": "Task: Find all cards with a certain effect. Include the name of the effect.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [Hints](./hints.",
                "back_trans_input_tokens_mean": -2.318853901550833
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find the prices for Magic: The Gathering cards."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/retreats",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/retreats",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How do I add my cards to TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0876666208108265,
                "back_trans_input": "Task: How do I add my cards to TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n**Hint:** You can use your endpoint explorer as well!",
                "back_trans_input_tokens_mean": -2.2438464164733887
            },
            {
                "idx": 2,
                "candidate": "What are the most recent card updates on TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1378764372605543,
                "back_trans_input": "Task: What are the most recent card updates on TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nAnswer:\n\nIdentifier: latest_card_updates\nEndpoint Functionality: Get Card Updates",
                "back_trans_input_tokens_mean": -2.2658813407829217
            },
            {
                "idx": 3,
                "candidate": "Search for specific card information. The only thing I need is the name of the card and maybe some other basic",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6844503229314631,
                "back_trans_input": "Task: Search for specific card information. The only thing I need is the name of the card and maybe some other basic\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Example of the output file:\n\n```json\n{\n    \"endpoint\": \"https://api",
                "back_trans_input_tokens_mean": -2.418947124481201
            },
            {
                "idx": 4,
                "candidate": "What is the list of available card images to use for a TCG?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5429702624678612,
                "back_trans_input": "Task: What is the list of available card images to use for a TCG?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: What are the parameters that can be sent in when making an offer on the marketplace",
                "back_trans_input_tokens_mean": -2.31881426920933
            },
            {
                "idx": 5,
                "candidate": "What is the name of the API for listing all MTGO card sets?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3223447799682617,
                "back_trans_input": "Task: What is the name of the API for listing all MTGO card sets?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2 [2 points] \n\nIn order to access MTGO cards on your website",
                "back_trans_input_tokens_mean": -2.301499189528744
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "How do I add my cards to TCGdex?"
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/retreats\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/retreats",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the list of cards from a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0599411010742188,
                "back_trans_input": "Task: Find the list of cards from a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nhttps://github.com/TCGPlayer/tcgplayerapi_rubygem",
                "back_trans_input_tokens_mean": -2.324124940087862
            },
            {
                "idx": 2,
                "candidate": "What are the most popular cards on TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8332859774430593,
                "back_trans_input": "Task: What are the most popular cards on TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Example Solution(s)\n\n```javascript\n// Your code goes here!\n",
                "back_trans_input_tokens_mean": -2.2057645082473756
            },
            {
                "idx": 3,
                "candidate": "What cards are on TCGdex?n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1298278868198395,
                "back_trans_input": "Task: What cards are on TCGdex?n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## [Test Cases](#test-cases)\n\n| Input     | Output                                                                                  |\n",
                "back_trans_input_tokens_mean": -2.380845034563983
            },
            {
                "idx": 4,
                "candidate": "Find cards in a specific set. Ask for the name of the API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8966617584228516,
                "back_trans_input": "Task: Find cards in a specific set. Ask for the name of the API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Create a new card and add it to your collection.",
                "back_trans_input_tokens_mean": -2.3202510829520437
            },
            {
                "idx": 5,
                "candidate": "Find all the cards in a set. What is the name of this API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6776977987850413,
                "back_trans_input": "Task: Find all the cards in a set. What is the name of this API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v2\n\n### Sample Input\n\n\n```json\n{\n    \"id\": \"1\",\n    \"name",
                "back_trans_input_tokens_mean": -2.2984680271985236
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find all the cards in a set. What is the name of this API?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/retreats'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/retreats",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the number of cards in the Magic The Gathering card pool.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5204443846430098,
                "back_trans_input": "Task: Find the number of cards in the Magic The Gathering card pool.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2) Generate an Endpoint Name From a Task Description Using Natural Language Processing (NLP",
                "back_trans_input_tokens_mean": -2.2542880290263407
            },
            {
                "idx": 2,
                "candidate": "Find the value of a card. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5030524954199791,
                "back_trans_input": "Task: Find the value of a card. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<details>\n  <summary>Click here for the solution</summary>\n    <ul>\n      <",
                "back_trans_input_tokens_mean": -2.225264431101031
            },
            {
                "idx": 3,
                "candidate": "find the price of a card in an online store",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1660019556681316,
                "back_trans_input": "Task: find the price of a card in an online store\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<details>\n  <summary>Click here to see solution</summary>\n    ```ts\n    function get",
                "back_trans_input_tokens_mean": -2.312703909697356
            },
            {
                "idx": 4,
                "candidate": "How do you add a card to TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.758577979527987,
                "back_trans_input": "Task: How do you add a card to TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hints\n* This should take less than 5 minutes!",
                "back_trans_input_tokens_mean": -2.1818480404940517
            },
            {
                "idx": 5,
                "candidate": "if your using TCGdex API, how to get the current status of an item.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7176702797412873,
                "back_trans_input": "Task: if your using TCGdex API, how to get the current status of an item.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Sample Output \n\n```json\n{\n    \"id\": \"get_item\",\n    \"function",
                "back_trans_input_tokens_mean": -2.371115831228403
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find the value of a card. Use the TCGdex API."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/retreats\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/retreats",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all of a TCG's cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2344402399930088,
                "back_trans_input": "Task: Find all of a TCG&#x27;s cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How are we going to do it?",
                "back_trans_input_tokens_mean": -2.34615234856133
            },
            {
                "idx": 2,
                "candidate": "What's the name of the API that lets you look up a card in the TCG?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0103901284081596,
                "back_trans_input": "Task: What&#x27;s the name of the API that lets you look up a card in the TCG?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hints\n\n - The answer can be found on the TCGdex website\n - You need",
                "back_trans_input_tokens_mean": -2.213835156653538
            },
            {
                "idx": 3,
                "candidate": "Find a list of all MTG cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0183845520019532,
                "back_trans_input": "Task: Find a list of all MTG cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n*Hint:*\nThe endpoint is not in the /v1 path.",
                "back_trans_input_tokens_mean": -2.2924752993004343
            },
            {
                "idx": 4,
                "candidate": "Can I get a list of the most recent cards from TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1275656753116183,
                "back_trans_input": "Task: Can I get a list of the most recent cards from TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## How do I submit my answer?",
                "back_trans_input_tokens_mean": -2.242075961569081
            },
            {
                "idx": 5,
                "candidate": "Find a list of all the cards in Magic: The Gathering with their name and number.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0147640347480773,
                "back_trans_input": "Task: Find a list of all the cards in Magic: The Gathering with their name and number.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://github.com/tcgplayer/api](https://github.",
                "back_trans_input_tokens_mean": -2.2477855353519836
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "What's the name of the API that lets you look up a card in the TCG?"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/retreats\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/retreats",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is the easiest way to search for Magic: The Gathering cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.953260580698649,
                "back_trans_input": "Task: What is the easiest way to search for Magic: The Gathering cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Example\n\n```json\n{\n  \"api\": \"TCGdex\",\n  \"endpoint",
                "back_trans_input_tokens_mean": -2.236707789557321
            },
            {
                "idx": 2,
                "candidate": "Find cards. Name the API TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9624107976754507,
                "back_trans_input": "Task: Find cards. Name the API TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nEndpoing: https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.327869824929671
            },
            {
                "idx": 3,
                "candidate": "what is the pw for the tcg dex api?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2661062969880945,
                "back_trans_input": "Task: what is the pw for the tcg dex api?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solution\n1) Go to https://www.",
                "back_trans_input_tokens_mean": -2.3590735348788177
            },
            {
                "idx": 4,
                "candidate": "Use a dex to search for a card name.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6140160193810096,
                "back_trans_input": "Task: Use a dex to search for a card name.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hints \n```\n$ curl localhost:8080/tcgdex/cards?",
                "back_trans_input_tokens_mean": -2.4072723741884583
            },
            {
                "idx": 5,
                "candidate": "Detect and store cards in database. TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.0563488602638245,
                "back_trans_input": "Task: Detect and store cards in database. TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Create an Endpoint\n\nYour next goal is to create your own endpoints that are",
                "back_trans_input_tokens_mean": -2.420212324675139
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "What is the easiest way to search for Magic: The Gathering cards?"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/retreats\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/retreats",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Write the TCGdex to a file.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.731635798107494,
                "back_trans_input": "Task: Write the TCGdex to a file.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Notes on this exercise\n\nWe recommend that students attempt this exercise only after completing all other exercises in",
                "back_trans_input_tokens_mean": -2.269179247043751
            },
            {
                "idx": 2,
                "candidate": "What are the names of all the cards from TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0508523498262679,
                "back_trans_input": "Task: What are the names of all the cards from TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"name\": \"card\",\n  \"description\": \"List of all",
                "back_trans_input_tokens_mean": -2.1829867448125566
            },
            {
                "idx": 3,
                "candidate": "Find all the cards from an issue of a Magic: The Gathering set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1230202282176298,
                "back_trans_input": "Task: Find all the cards from an issue of a Magic: The Gathering set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v2\n\n### [**Endpoints**](https://github.",
                "back_trans_input_tokens_mean": -2.2955138282438297
            },
            {
                "idx": 4,
                "candidate": "show me cards containing the name \"twisting the fates\"",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8339915556066178,
                "back_trans_input": "Task: show me cards containing the name &quot;twisting the fates&quot;\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## ![Structure](https://cdn.",
                "back_trans_input_tokens_mean": -2.5013582953091325
            },
            {
                "idx": 5,
                "candidate": "Find a card by searching for its name, type and ID",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7524375915527344,
                "back_trans_input": "Task: Find a card by searching for its name, type and ID\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n## What should I do?\n\n1.",
                "back_trans_input_tokens_mean": -2.348875600641424
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "What are the names of all the cards from TCGdex?"
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/retreats\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/retreats",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find a list of all the card names in TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0883188247680664,
                "back_trans_input": "Task: find a list of all the card names in TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** You can use any programming language or tool that you want!",
                "back_trans_input_tokens_mean": -2.2047270110675266
            },
            {
                "idx": 2,
                "candidate": "how many decks of tcg dex exist?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8397428806011493,
                "back_trans_input": "Task: how many decks of tcg dex exist?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: How many users have used TCG Dex in total?",
                "back_trans_input_tokens_mean": -2.426301421406113
            },
            {
                "idx": 3,
                "candidate": "What is a good resource for learning how to code with JSON?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.581499735514323,
                "back_trans_input": "Task: What is a good resource for learning how to code with JSON?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Exercise 2\n\nYou are given a string that represents a URL in the form of a path",
                "back_trans_input_tokens_mean": -2.336415093224328
            },
            {
                "idx": 4,
                "candidate": "Find out the name of all cards in a particular set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0113390409029448,
                "back_trans_input": "Task: Find out the name of all cards in a particular set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 5.2.2.2.",
                "back_trans_input_tokens_mean": -2.238115657459606
            },
            {
                "idx": 5,
                "candidate": "Find the name of a card.? Use TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5942070111632347,
                "back_trans_input": "Task: Find the name of a card.? Use TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# [TCGdex](https://tcgdex.",
                "back_trans_input_tokens_mean": -2.4152855744233004
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find the name of a card.? Use TCGdex API"
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/retreats\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/retreats",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "To get all of the cards in a given set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.184896469116211,
                "back_trans_input": "Task: To get all of the cards in a given set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Card Endpoint\n\nYou will be given an endpoint of a card resource.",
                "back_trans_input_tokens_mean": -2.272161945290522
            },
            {
                "idx": 2,
                "candidate": "How can I get the name of a card from TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.70573540776968,
                "back_trans_input": "Task: How can I get the name of a card from TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\ngetCardByName(\"Gaea's Revenge\");\n// returns:\n{",
                "back_trans_input_tokens_mean": -2.215728369434323
            },
            {
                "idx": 3,
                "candidate": "Get the prices for cards. What is the API name?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4491628011067708,
                "back_trans_input": "Task: Get the prices for cards. What is the API name?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nURL: https://tcgplayerapi.",
                "back_trans_input_tokens_mean": -2.3348994320089167
            },
            {
                "idx": 4,
                "candidate": "Use the TCGdex API to retrieve all card information.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.114842910033006,
                "back_trans_input": "Task: Use the TCGdex API to retrieve all card information.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### **Answer**\n\nFor more details on endpoint identification check out our docs page here! https",
                "back_trans_input_tokens_mean": -2.2272645653905094
            },
            {
                "idx": 5,
                "candidate": "i want to get all the cards for a specific cardfighter.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.355489730834961,
                "back_trans_input": "Task: i want to get all the cards for a specific cardfighter.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## [Hints](./hints.",
                "back_trans_input_tokens_mean": -2.394338133098843
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "How can I get the name of a card from TCGdex?"
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/retreats/%7Bretreat%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/retreats/{retreat}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find the name of cards in a database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3420745849609375,
                "back_trans_input": "Task: find the name of cards in a database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v2\n\n---\n\n## 题目大意：\n\n给定一个endpoint的id",
                "back_trans_input_tokens_mean": -2.3577379957537783
            },
            {
                "idx": 2,
                "candidate": "Find all cards in the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6156342029571533,
                "back_trans_input": "Task: Find all cards in the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input\n\nOn the first line there are four numbers separated by spaces `<endpoint> ",
                "back_trans_input_tokens_mean": -2.202457699206991
            },
            {
                "idx": 3,
                "candidate": "how to find out the name of an unknown card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5671164772727273,
                "back_trans_input": "Task: how to find out the name of an unknown card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n![alt text](https://github.com/cryptoguardian-dev/CTF",
                "back_trans_input_tokens_mean": -2.303811064553917
            },
            {
                "idx": 4,
                "candidate": "Find all the cards that have been made in a particular set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1235133579799108,
                "back_trans_input": "Task: Find all the cards that have been made in a particular set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How do I run it?\n\n1.",
                "back_trans_input_tokens_mean": -2.2714857152990393
            },
            {
                "idx": 5,
                "candidate": "Write the names of every Magic cards in a list.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.1901448567708335,
                "back_trans_input": "Task: Write the names of every Magic cards in a list.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** The answer can be found on the official site under the API section, but feel free to",
                "back_trans_input_tokens_mean": -2.379156375150068
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find all cards in the TCGdex database."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/retreats/%7Bretreat%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/retreats/{retreat}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all cards with creature type 0 in your collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8176167805989583,
                "back_trans_input": "Task: Find all cards with creature type 0 in your collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2. Endpoint Identification (15 minutes)\n\nIn this exercise, we are going",
                "back_trans_input_tokens_mean": -2.3490467656742444
            },
            {
                "idx": 2,
                "candidate": "Find the rarity of a specific card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8124009132385254,
                "back_trans_input": "Task: Find the rarity of a specific card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Instructions\n\n1. Use your endpoint's function as shown in the example above.",
                "back_trans_input_tokens_mean": -2.2529528163514048
            },
            {
                "idx": 3,
                "candidate": "How do I create a new card in the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8223370015621185,
                "back_trans_input": "Task: How do I create a new card in the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How Do I Create A New Card?",
                "back_trans_input_tokens_mean": -2.1611033076733612
            },
            {
                "idx": 4,
                "candidate": "To create TCGdex API if I have an existing one.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.013951031366984,
                "back_trans_input": "Task: To create TCGdex API if I have an existing one.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTCGdex is a decentralized exchange that supports cross chain trading between Ethereum and Binance Smart",
                "back_trans_input_tokens_mean": -2.35478199166911
            },
            {
                "idx": 5,
                "candidate": "Find all of the card effects that are legal in a specific format.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4396591186523438,
                "back_trans_input": "Task: Find all of the card effects that are legal in a specific format.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Get information about a set by its ID.",
                "back_trans_input_tokens_mean": -2.3342166862317493
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "How do I create a new card in the TCGdex API?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.tcgdex.net/v2/%7Blang%7D/retreats/%7Bretreat%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/retreats/{retreat}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the value of a card.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.610617377541282,
                "back_trans_input": "Task: Find the value of a card.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://github.com/tcgplayer-api/docs](https://github.",
                "back_trans_input_tokens_mean": -2.401792958097638
            },
            {
                "idx": 2,
                "candidate": "Show the names of all my cards in a deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5024363199869792,
                "back_trans_input": "Task: Show the names of all my cards in a deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<details>\n  <summary>Click here for the solution</summary>\n    <ul>",
                "back_trans_input_tokens_mean": -2.3551679488715775
            },
            {
                "idx": 3,
                "candidate": "Create a custom card. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.129288545021644,
                "back_trans_input": "Task: Create a custom card. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### **Solution:** \n\n```javascript\nfunction customCard(endpoint) {\n    var newIdentifier",
                "back_trans_input_tokens_mean": -2.3060079661282624
            },
            {
                "idx": 4,
                "candidate": "find card costs. Show me the cost of TCGdex's default cards",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8352898359298706,
                "back_trans_input": "Task: find card costs. Show me the cost of TCGdex&#x27;s default cards\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [Back to Challenge](https://github.",
                "back_trans_input_tokens_mean": -2.4957674721540033
            },
            {
                "idx": 5,
                "candidate": "What is a good site to use to learn card combos?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.653749738420759,
                "back_trans_input": "Task: What is a good site to use to learn card combos?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"endpoint\": \"/api/v1/cards\",\n  \"identifier\":",
                "back_trans_input_tokens_mean": -2.4395912517200817
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find the value of a card.n"
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/retreats/%7Bretreat%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/retreats/{retreat}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all of the cards for a specific MTG set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.12202761723445,
                "back_trans_input": "Task: Find all of the cards for a specific MTG set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\n// Your code here!\nvar result = {\n    \"endpoint\": \"\",",
                "back_trans_input_tokens_mean": -2.2866445021195845
            },
            {
                "idx": 2,
                "candidate": "Find a list of all TCGdex cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9313509265581766,
                "back_trans_input": "Task: Find a list of all TCGdex cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Expected output from your code\n\n```json\n{\n  \"endpoint\": \"\",\n  \"identifier\":",
                "back_trans_input_tokens_mean": -2.2734733196573518
            },
            {
                "idx": 3,
                "candidate": "find cards. Find all the magic and/or collectible card games with a specific name.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6948165893554688,
                "back_trans_input": "Task: find cards. Find all the magic and/or collectible card games with a specific name.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Run tests to check your code\n\nRun these commands in terminal from within the project directory\n```",
                "back_trans_input_tokens_mean": -2.3472729055290547
            },
            {
                "idx": 4,
                "candidate": "How to find the price of a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0561504364013672,
                "back_trans_input": "Task: How to find the price of a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoints are generated using the following logic: \n\n* Functionality: the description without ",
                "back_trans_input_tokens_mean": -2.2656288146972656
            },
            {
                "idx": 5,
                "candidate": "Find the value of a card using TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8895879473005023,
                "back_trans_input": "Task: Find the value of a card using TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n* * * \n\n## Solution\n\nThe answer can be found in the file named `",
                "back_trans_input_tokens_mean": -2.2159889567982067
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find the value of a card using TCGdex API"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/retreats/%7Bretreat%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/retreats/{retreat}",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "?xml:name=\"\">",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1103497842947643,
                "back_trans_input": "Task: ?xml:name=&quot;&quot;&gt;\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n</pre>\n\n\n<h2 id=\"example\">Example</h2>\n\nFor the following",
                "back_trans_input_tokens_mean": -2.3647508019799584
            },
            {
                "idx": 2,
                "candidate": "Write a script to call the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9008133961604192,
                "back_trans_input": "Task: Write a script to call the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 3\n\n **[TCGdex](https://github.",
                "back_trans_input_tokens_mean": -2.2313783212141556
            },
            {
                "idx": 3,
                "candidate": "Find the TCGdex entry for a magic card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9468964338302612,
                "back_trans_input": "Task: Find the TCGdex entry for a magic card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Re-create the Endpoint Identifier\n\nThe first thing we need to do is",
                "back_trans_input_tokens_mean": -2.2869267897172407
            },
            {
                "idx": 4,
                "candidate": "What is the url to use for the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9192087809244792,
                "back_trans_input": "Task: What is the url to use for the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 3a\nYou are given a JSON object with information on two endpoints in it.",
                "back_trans_input_tokens_mean": -2.230593374797276
            },
            {
                "idx": 5,
                "candidate": "What API can I use to get a list of all TCGdex releases?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1319939692815144,
                "back_trans_input": "Task: What API can I use to get a list of all TCGdex releases?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n[\n  {\n    \"functionality\": \"\",\n    \"description\": \"\",\n    \"",
                "back_trans_input_tokens_mean": -2.225292309470799
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Write a script to call the TCGdex API."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/retreats/%7Bretreat%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/retreats/{retreat}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is a good API to help me search for cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.339002169095553,
                "back_trans_input": "Task: What is a good API to help me search for cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The answer might not be right because I am not sure about my code.",
                "back_trans_input_tokens_mean": -2.3218999342484907
            },
            {
                "idx": 2,
                "candidate": "Find all cards in a set. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5691777914762497,
                "back_trans_input": "Task: Find all cards in a set. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **Solution**\n\n```javascript\n// Function that takes a string as input\nfunction findC",
                "back_trans_input_tokens_mean": -2.2505484893258694
            },
            {
                "idx": 3,
                "candidate": "How can I add more cards to my collection without going to the card's page?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7663273811340332,
                "back_trans_input": "Task: How can I add more cards to my collection without going to the card&#x27;s page?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2.1.3 [Endpoints](.",
                "back_trans_input_tokens_mean": -2.333609172276088
            },
            {
                "idx": 4,
                "candidate": "How can I get the TCG dex of any card in Magic: the Gathering?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4208970427513123,
                "back_trans_input": "Task: How can I get the TCG dex of any card in Magic: the Gathering?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n## [Previous section](https://github.",
                "back_trans_input_tokens_mean": -2.3955142808997114
            },
            {
                "idx": 5,
                "candidate": "find an old card?.n I want to find the name of a card from years back without",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8163482709364458,
                "back_trans_input": "Task: find an old card?.n I want to find the name of a card from years back without\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n```javascript\n// function that accepts two parameters as input\nfunction generateCard(id, f",
                "back_trans_input_tokens_mean": -2.622315268231253
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find all cards in a set. Use the TCGdex API."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/retreats/%7Bretreat%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/retreats/{retreat}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the number of cards that are part of a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2628790048452525,
                "back_trans_input": "Task: Find the number of cards that are part of a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n\n## Submitting Incomplete Solutions\nIt's possible to submit an incomplete solution so you",
                "back_trans_input_tokens_mean": -2.250215005874634
            },
            {
                "idx": 2,
                "candidate": "Find all the rare or epic cards. What is the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.427656650543213,
                "back_trans_input": "Task: Find all the rare or epic cards. What is the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n*Note: This challenge has been taken from the [TCGdex Developer Documentation](",
                "back_trans_input_tokens_mean": -2.338971598252006
            },
            {
                "idx": 3,
                "candidate": "Find the value of a card. Use CCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.043319813410441,
                "back_trans_input": "Task: Find the value of a card. Use CCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint:\nhttps://api.",
                "back_trans_input_tokens_mean": -2.3468143216201236
            },
            {
                "idx": 4,
                "candidate": "Find the cost of an unknown card.? Use TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8804436922073364,
                "back_trans_input": "Task: Find the cost of an unknown card.? Use TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Magic Card Market API\n\nThis challenge requires knowledge about how Magic cards are named in",
                "back_trans_input_tokens_mean": -2.506443019424166
            },
            {
                "idx": 5,
                "candidate": "Find a set of cards for the Magic: The Gathering card game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9195576310157776,
                "back_trans_input": "Task: Find a set of cards for the Magic: The Gathering card game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Find information about a movie.",
                "back_trans_input_tokens_mean": -2.2585948748247966
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find a set of cards for the Magic: The Gathering card game."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/retreats/%7Bretreat%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/retreats/{retreat}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "what was the last card i searched for?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.514501953125,
                "back_trans_input": "Task: what was the last card i searched for?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solution\n\nEndpoint (function): getCardByName\n\nAPI name: tcg-",
                "back_trans_input_tokens_mean": -2.3644816184712347
            },
            {
                "idx": 2,
                "candidate": "Find the list of card effects that can be used in a specific format.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3849260807037354,
                "back_trans_input": "Task: Find the list of card effects that can be used in a specific format.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nSolution:\n\nFunctionality: Get all cards with their effects from tcgplayer api as json",
                "back_trans_input_tokens_mean": -2.306904535377975
            },
            {
                "idx": 3,
                "candidate": "What's the API called for looking up card information?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5558078289031982,
                "back_trans_input": "Task: What&#x27;s the API called for looking up card information?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nExpected Output: \nWhat&#x27;s the API called for looking up card information?",
                "back_trans_input_tokens_mean": -2.3453292340303946
            },
            {
                "idx": 4,
                "candidate": "Find all cards a specific person has. Name the API TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2776679081075333,
                "back_trans_input": "Task: Find all cards a specific person has. Name the API TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nEndpoint: GetCardsForPerson\nIdentifier: /TCGdex/GetCardsFor",
                "back_trans_input_tokens_mean": -2.3966291159914253
            },
            {
                "idx": 5,
                "candidate": "Find a specific card. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6832443934220535,
                "back_trans_input": "Task: Find a specific card. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nExample Response: \n\n{\n    \"cardName\": \"Dark Ritual\",\n    \"artistName",
                "back_trans_input_tokens_mean": -2.3135712536898527
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find a specific card. Use TCGdex API."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/series",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/series",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Search the TCGdex for a card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9193792559883811,
                "back_trans_input": "Task: Search the TCGdex for a card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** This challenge was created in partnership with [The Card Game Database](https://www.",
                "back_trans_input_tokens_mean": -2.291837813677611
            },
            {
                "idx": 2,
                "candidate": "what is the name and function of tcgdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2789637020656042,
                "back_trans_input": "Task: what is the name and function of tcgdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2.3.3 Endpoint Functionality and Description (Part I)\n\n#### Task",
                "back_trans_input_tokens_mean": -2.3131957688462843
            },
            {
                "idx": 3,
                "candidate": "What is the API that can list all of the cards in Magic: The Gathering?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9818907711240981,
                "back_trans_input": "Task: What is the API that can list all of the cards in Magic: The Gathering?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"name\": \"cards\",\n  \"description\": \"List of MT",
                "back_trans_input_tokens_mean": -2.221805164088374
            },
            {
                "idx": 4,
                "candidate": "Search for a card by it's name.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.059799768707969,
                "back_trans_input": "Task: Search for a card by it&#x27;s name.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n```json\n{\n    \"endpoint_id\": \"e1c8f2a0-",
                "back_trans_input_tokens_mean": -2.2928384725038
            },
            {
                "idx": 5,
                "candidate": "Search for decks of cards and card types in javascript",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.6271798270089284,
                "back_trans_input": "Task: Search for decks of cards and card types in javascript\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hints\n\n * You can look at what endpoints are available on TCGdex here https://",
                "back_trans_input_tokens_mean": -2.4667690661218433
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "What is the API that can list all of the cards in Magic: The Gathering?"
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/series\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/series",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Add all the cards in an API into a list",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.021277745564779,
                "back_trans_input": "Task: Add all the cards in an API into a list\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Expected Output\n\nThe expected output should look like the following example.",
                "back_trans_input_tokens_mean": -2.4404431449042425
            },
            {
                "idx": 2,
                "candidate": "Find the name of card in a specific set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3544644442471592,
                "back_trans_input": "Task: Find the name of card in a specific set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n--- \n\n## Task\n```js\nconst findCardNameInSet = async (set,",
                "back_trans_input_tokens_mean": -2.351093468842683
            },
            {
                "idx": 3,
                "candidate": "find all cards in a deck.? Use the TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8219685764873729,
                "back_trans_input": "Task: find all cards in a deck.? Use the TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## [Previous section](https://github.",
                "back_trans_input_tokens_mean": -2.397795949663435
            },
            {
                "idx": 4,
                "candidate": "Write a query to get all the cards from the database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4377612334031324,
                "back_trans_input": "Task: Write a query to get all the cards from the database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```sql\nSELECT * FROM card;\n```",
                "back_trans_input_tokens_mean": -2.2311885833740233
            },
            {
                "idx": 5,
                "candidate": "How can I look up card prices? Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8828604221343994,
                "back_trans_input": "Task: How can I look up card prices? Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Getting started\nTo get started with this project you need to download it from GitHub using the following command",
                "back_trans_input_tokens_mean": -2.3402191128647116
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "find all cards in a deck.? Use the TCGdex API"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/series'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/series",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Add all card abilities to a deck. Who can provide this?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.0152980259486606,
                "back_trans_input": "Task: Add all card abilities to a deck. Who can provide this?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You do not need to implement any logic in your function.",
                "back_trans_input_tokens_mean": -2.4963677552369266
            },
            {
                "idx": 2,
                "candidate": "I want to search for the hex code for a card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6678024291992188,
                "back_trans_input": "Task: I want to search for the hex code for a card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"id\": \"c4a0e3b1-0f",
                "back_trans_input_tokens_mean": -2.343982592496005
            },
            {
                "idx": 3,
                "candidate": "Show all cards that have been reviewed. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9602889865636826,
                "back_trans_input": "Task: Show all cards that have been reviewed. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n### 1.2.3.",
                "back_trans_input_tokens_mean": -2.325625227208723
            },
            {
                "idx": 4,
                "candidate": "What is the best resource to list down a number of cards in different formats?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.090841854319853,
                "back_trans_input": "Task: What is the best resource to list down a number of cards in different formats?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task 2: What are the steps required to make sure that our users can access their data from",
                "back_trans_input_tokens_mean": -2.44089310629326
            },
            {
                "idx": 5,
                "candidate": "Search all rare cards from the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.420640617609024,
                "back_trans_input": "Task: Search all rare cards from the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [Hints](https://github.",
                "back_trans_input_tokens_mean": -2.2463402661410243
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Show all cards that have been reviewed. Use the TCGdex API."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/series\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/series",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Get the tcgdex for TCG Card name and number.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8385940194129944,
                "back_trans_input": "Task: Get the tcgdex for TCG Card name and number.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoints are case sensitive.",
                "back_trans_input_tokens_mean": -2.4376448210295254
            },
            {
                "idx": 2,
                "candidate": "Find cards for a specific set. Ask for card details and stats, like rarity and cost.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3969993591308594,
                "back_trans_input": "Task: Find cards for a specific set. Ask for card details and stats, like rarity and cost.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nNote that endpoints are case sensitive!",
                "back_trans_input_tokens_mean": -2.442330808721037
            },
            {
                "idx": 3,
                "candidate": "How to create a account in TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1873475771683912,
                "back_trans_input": "Task: How to create a account in TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoints are randomly generated, so your solution must not rely on hardcoding anything about them",
                "back_trans_input_tokens_mean": -2.274267734180797
            },
            {
                "idx": 4,
                "candidate": "Use TCGdex API to return a list of all cards in a specified format.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0315381944179536,
                "back_trans_input": "Task: Use TCGdex API to return a list of all cards in a specified format.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nTCGdex API (https://tcgplayerapi.",
                "back_trans_input_tokens_mean": -2.224847875792405
            },
            {
                "idx": 5,
                "candidate": "What is the name of the API that uses an HTML5 canvas to display card data?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4042994181315105,
                "back_trans_input": "Task: What is the name of the API that uses an HTML5 canvas to display card data?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nTask: What is the name of the API that uses an HTML5 canvas to display deck data?",
                "back_trans_input_tokens_mean": -2.321139335632324
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Use TCGdex API to return a list of all cards in a specified format."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/series\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/series",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the price of a card.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6289117986505682,
                "back_trans_input": "Task: Find the price of a card.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2\n\nTask: Get all cards in the store with their prices.",
                "back_trans_input_tokens_mean": -2.3636091857586266
            },
            {
                "idx": 2,
                "candidate": "how do i add a card to my collection?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1454264322916667,
                "back_trans_input": "Task: how do i add a card to my collection?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2 \n\n**The second part is similar to the first one.",
                "back_trans_input_tokens_mean": -2.3093397595264293
            },
            {
                "idx": 3,
                "candidate": "Find prices for a particular card in the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0196951627731323,
                "back_trans_input": "Task: Find prices for a particular card in the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task\nFind prices for a particular card in the TCGdex database.",
                "back_trans_input_tokens_mean": -2.2293679267168045
            },
            {
                "idx": 4,
                "candidate": "How can I find information on cards? For example, the names and powers of a card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3105167388916015,
                "back_trans_input": "Task: How can I find information on cards? For example, the names and powers of a card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n##### Solution\n\n \n `GET https://api.",
                "back_trans_input_tokens_mean": -2.3512135917304926
            },
            {
                "idx": 5,
                "candidate": "What is the name of all the cards from Magic Cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7198460896809895,
                "back_trans_input": "Task: What is the name of all the cards from Magic Cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 3. [Challenge #1](https://github.",
                "back_trans_input_tokens_mean": -2.3478056712584063
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find the price of a card.n"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/series\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/series",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Search for cards from several different Magic the Gathering sets.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7276206811269124,
                "back_trans_input": "Task: Search for cards from several different Magic the Gathering sets.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Search for Cards by Name\n\nIn order to search for cards using their name,",
                "back_trans_input_tokens_mean": -2.3776588330575086
            },
            {
                "idx": 2,
                "candidate": "Get the identifier for an MTG card, using the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2445862481468601,
                "back_trans_input": "Task: Get the identifier for an MTG card, using the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Get all cards that have been banned in standard from the Gatherer API.",
                "back_trans_input_tokens_mean": -2.2408678635306982
            },
            {
                "idx": 3,
                "candidate": "Find all the cards on TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9505316734313964,
                "back_trans_input": "Task: Find all the cards on TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 1. Re-Generate the Endpoint Identifier\n\n\n```json\n{\n  \"id\": ",
                "back_trans_input_tokens_mean": -2.2414784321078547
            },
            {
                "idx": 4,
                "candidate": "Search tcgdex database by card name.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3283131917317708,
                "back_trans_input": "Task: Search tcgdex database by card name.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n[Link](https://github.",
                "back_trans_input_tokens_mean": -2.4204348448280975
            },
            {
                "idx": 5,
                "candidate": "Is there an API that will allow me to look up what a card's name is in different",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2202820615334944,
                "back_trans_input": "Task: Is there an API that will allow me to look up what a card&#x27;s name is in different\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<br>\n\n## Hints/Solution\n\n  The endpoints are all listed here.",
                "back_trans_input_tokens_mean": -2.4074423135804737
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find all the cards on TCGdex."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/series\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/series",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find a particular card. Name the API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0819244384765625,
                "back_trans_input": "Task: Find a particular card. Name the API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> NOTE: The endpoints are not necessarily in the same order as they appear on the web page.",
                "back_trans_input_tokens_mean": -2.3873274259478134
            },
            {
                "idx": 2,
                "candidate": "How to add images to a custom database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.17918701171875,
                "back_trans_input": "Task: How to add images to a custom database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Endpoints:**\n```\nGET\t/v1/images/{id}\t\t\t\nPOST\t",
                "back_trans_input_tokens_mean": -2.4075397598409207
            },
            {
                "idx": 3,
                "candidate": "find the card that contains a specific text string.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7648870294744319,
                "back_trans_input": "Task: find the card that contains a specific text string.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://tcgplayer.com/api](https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.3374299296626337
            },
            {
                "idx": 4,
                "candidate": "Find the cards I have in my inventory.?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.88154296875,
                "back_trans_input": "Task: Find the cards I have in my inventory.?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n### Task 2\n\n> **Question:** You are a developer who has just been hired at TC",
                "back_trans_input_tokens_mean": -2.3965405972204477
            },
            {
                "idx": 5,
                "candidate": "What is the name of the API that allows you to search for cards and find out more information about them?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0062403245405718,
                "back_trans_input": "Task: What is the name of the API that allows you to search for cards and find out more information about them?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nEndpoints are used in the documentation as well as to identify resources in your application code.",
                "back_trans_input_tokens_mean": -2.1063742637634277
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "What is the name of the API that allows you to search for cards and find out more information about them?"
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/series\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/series",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Show cards. Query for all rares in collection",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.833251953125,
                "back_trans_input": "Task: Show cards. Query for all rares in collection\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n\n## Hints\n\n* The endpoint functionality should not include the word \"cards\".",
                "back_trans_input_tokens_mean": -2.5143618760285555
            },
            {
                "idx": 2,
                "candidate": "How to add a card to the TCGdex database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7694120407104492,
                "back_trans_input": "Task: How to add a card to the TCGdex database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:**\n\nThe answer can be found in the API documentation at https://docs.",
                "back_trans_input_tokens_mean": -2.199334634316934
            },
            {
                "idx": 3,
                "candidate": "Search for the cost of a card.?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3949831008911133,
                "back_trans_input": "Task: Search for the cost of a card.?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"endpoint\": {\n        \"id\": \"c7b3f",
                "back_trans_input_tokens_mean": -2.4320912271175743
            },
            {
                "idx": 4,
                "candidate": "Create a list of card names from a database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.11060365041097,
                "back_trans_input": "Task: Create a list of card names from a database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n#### Endpoint identifier: ListCards\n\nThe task is to create a new endpoint ID that is",
                "back_trans_input_tokens_mean": -2.3781057640358254
            },
            {
                "idx": 5,
                "candidate": "To find some information about a card. Use the API named TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3623898294236925,
                "back_trans_input": "Task: To find some information about a card. Use the API named TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Expected Output\n\n```json\n{\n    \"endpointId\": \"8f2b5e",
                "back_trans_input_tokens_mean": -2.326509450829547
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "How to add a card to the TCGdex database?"
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/series/%7Bserie%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/series/{serie}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find out when the next tournament in my area is.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6781560724431819,
                "back_trans_input": "Task: Find out when the next tournament in my area is.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Input Format For Test Cases\n```bash\n[endpoint_identifier]_[endpoint_functionality]",
                "back_trans_input_tokens_mean": -2.330286323477369
            },
            {
                "idx": 2,
                "candidate": "What is the dex number for \"Ballad of the Dragon\"?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3861986048081343,
                "back_trans_input": "Task: What is the dex number for &quot;Ballad of the Dragon&quot;?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n</div>\n\n<p><br></p>\n\n## 2.",
                "back_trans_input_tokens_mean": -2.3667198898445845
            },
            {
                "idx": 3,
                "candidate": "Find a list of card information.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3052756569602273,
                "back_trans_input": "Task: Find a list of card information.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<details>\n\n### Task Description\n\n \n\n**Find a list of all cards in TCG",
                "back_trans_input_tokens_mean": -2.4502571033981613
            },
            {
                "idx": 4,
                "candidate": "what card is the best at a specific rank?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8122447620738635,
                "back_trans_input": "Task: what card is the best at a specific rank?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n\n## How do I know if my response is correct?",
                "back_trans_input_tokens_mean": -2.4609912236531577
            },
            {
                "idx": 5,
                "candidate": "What is the API to search TCG cards in a database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2645296539579118,
                "back_trans_input": "Task: What is the API to search TCG cards in a database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<br>\n\nTask: What is the endpoint that returns all available TCG sets on TCG",
                "back_trans_input_tokens_mean": -2.269041147317972
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "What is the API to search TCG cards in a database?"
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/series/%7Bserie%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/series/{serie}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is the easiest way to look up cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2635894775390626,
                "back_trans_input": "Task: What is the easiest way to look up cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v2\n\n---\n\n\n\n\n\n\n```json\n{\n  \"id\": \"tcgplayer_api\",",
                "back_trans_input_tokens_mean": -2.3192550164681895
            },
            {
                "idx": 2,
                "candidate": "find all cards for a card game.?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4030418395996094,
                "back_trans_input": "Task: find all cards for a card game.?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"id\": \"1\",\n    \"name\": \"Find Cards\"",
                "back_trans_input_tokens_mean": -2.41310612660534
            },
            {
                "idx": 3,
                "candidate": "How can I find cards in particular sets? Name the API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.48583984375,
                "back_trans_input": "Task: How can I find cards in particular sets? Name the API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nFunctionality: Search Cards by Set\nDescription: This endpoint allows you to search all Magic: The Gathering",
                "back_trans_input_tokens_mean": -2.3994712142257004
            },
            {
                "idx": 4,
                "candidate": "How can I access TCGdex with an API call?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4632512789506178,
                "back_trans_input": "Task: How can I access TCGdex with an API call?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Endpoint Regen Challenge 2\n\n\n```java {title=\"Solution\" src=\"/endpoint_",
                "back_trans_input_tokens_mean": -2.2829194197783598
            },
            {
                "idx": 5,
                "candidate": "How do you query for cards?nUsing TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2258928716182709,
                "back_trans_input": "Task: How do you query for cards?nUsing TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> **Hint:** This endpoint belongs to an API that allows you to access data from the Pokémon Trading",
                "back_trans_input_tokens_mean": -2.459535784425989
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "What is the easiest way to look up cards?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/series/%7Bserie%7D'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/series/{serie}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "i want to search for cards that have an aura.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7065162658691406,
                "back_trans_input": "Task: i want to search for cards that have an aura.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://github.com/noobprogrammer92/TCGdex-API](",
                "back_trans_input_tokens_mean": -2.4009053816489123
            },
            {
                "idx": 2,
                "candidate": "How do I use the TCGdex API / endpoint?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1189902623494465,
                "back_trans_input": "Task: How do I use the TCGdex API / endpoint?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n------------------\n\nThe answer should look like this: \n\n```json\n{\n  \"identifier\": ",
                "back_trans_input_tokens_mean": -2.2397924661636353
            },
            {
                "idx": 3,
                "candidate": "Search for a card by name. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6784061565995216,
                "back_trans_input": "Task: Search for a card by name. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n<details>\n  <summary>Click here for the solution</summary>\n    <ul>",
                "back_trans_input_tokens_mean": -2.2208175405991817
            },
            {
                "idx": 4,
                "candidate": "Find the prices of cards. ?Target API: TCGdex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0219438076019287,
                "back_trans_input": "Task: Find the prices of cards. ?Target API: TCGdex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input Format\n\nThe first line contains three integers n, m, k (1<=n",
                "back_trans_input_tokens_mean": -2.412781268094493
            },
            {
                "idx": 5,
                "candidate": "Get all current cards in a deck. Name of the API is TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0004605054855347,
                "back_trans_input": "Task: Get all current cards in a deck. Name of the API is TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nIdentifier: get_cards\nFunctionality: Get all current cards in a deck\nDescription: Get all",
                "back_trans_input_tokens_mean": -2.284878249861236
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Search for a card by name. Use the TCGdex API."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/series/%7Bserie%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/series/{serie}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How to find all cards with an effect written on the card's back.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8704025000333786,
                "back_trans_input": "Task: How to find all cards with an effect written on the card&#x27;s back.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nThis was a real world example from our team&#x27;s API work that we had.",
                "back_trans_input_tokens_mean": -2.4228474869687333
            },
            {
                "idx": 2,
                "candidate": "Create a CSV file from the TCGdex API data.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1521310567855836,
                "back_trans_input": "Task: Create a CSV file from the TCGdex API data.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n**Hint:** `endpoint_id`, `functionality`, `description`, `api",
                "back_trans_input_tokens_mean": -2.227478379601831
            },
            {
                "idx": 3,
                "candidate": "find all cards that have a certain symbol in the card name",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4001421247209822,
                "back_trans_input": "Task: find all cards that have a certain symbol in the card name\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> Hint: You can find more information about endpoints by clicking on them here: https://github.",
                "back_trans_input_tokens_mean": -2.320869480479847
            },
            {
                "idx": 4,
                "candidate": "Find the prices for all cards in a collection with specific set and rarity levels.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8448878394232855,
                "back_trans_input": "Task: Find the prices for all cards in a collection with specific set and rarity levels.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **2. Endpoint Generation**\n\nFor each question above, write down your answer on",
                "back_trans_input_tokens_mean": -2.35870371366802
            },
            {
                "idx": 5,
                "candidate": "List the prices of all cards. Make sure you use the name of the API endpoint TCGdex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.566752710125663,
                "back_trans_input": "Task: List the prices of all cards. Make sure you use the name of the API endpoint TCGdex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:**\nThe answer can be found in the file named endpoint_details.",
                "back_trans_input_tokens_mean": -2.3459763406705454
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Create a CSV file from the TCGdex API data."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/series/%7Bserie%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/series/{serie}",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find cards by name. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7464026029293354,
                "back_trans_input": "Task: Find cards by name. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoints are not real.",
                "back_trans_input_tokens_mean": -2.25066792213165
            },
            {
                "idx": 2,
                "candidate": "Add a card to the TCGdex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7153888398950751,
                "back_trans_input": "Task: Add a card to the TCGdex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nTask: Get all cards belonging to a specific set.",
                "back_trans_input_tokens_mean": -2.234778188099371
            },
            {
                "idx": 3,
                "candidate": "Use TCGdex API to find an unplayed card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1533114512761433,
                "back_trans_input": "Task: Use TCGdex API to find an unplayed card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Endpoint: Get Unplayed Card\n\n```http\nGET api/v1/cards/un",
                "back_trans_input_tokens_mean": -2.3215065152795464
            },
            {
                "idx": 4,
                "candidate": "Find all the cards in a collection. Name of the API is TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5805557072162628,
                "back_trans_input": "Task: Find all the cards in a collection. Name of the API is TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nEndPoint: https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.2705769885299554
            },
            {
                "idx": 5,
                "candidate": "How to add a card to an existing list?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4061386801979758,
                "back_trans_input": "Task: How to add a card to an existing list?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://github.com/thecodingguy/tcg-endpoints](https://github.",
                "back_trans_input_tokens_mean": -2.33482575195807
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find all the cards in a collection. Name of the API is TCGdex API."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/series/%7Bserie%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/series/{serie}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "List all the magic the gathering cards. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0662453413009643,
                "back_trans_input": "Task: List all the magic the gathering cards. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Expected Output: \n\n```javascript\n// Your code here...",
                "back_trans_input_tokens_mean": -2.3695370032724026
            },
            {
                "idx": 2,
                "candidate": "Find all of the cards in the Magic: The Gathering database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8620364155088153,
                "back_trans_input": "Task: Find all of the cards in the Magic: The Gathering database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint\n\nThe endpoints can be found on the [Endpoints page](https://docs",
                "back_trans_input_tokens_mean": -2.2579457222878396
            },
            {
                "idx": 3,
                "candidate": "What is the name of the API to get a list of all cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6619400978088379,
                "back_trans_input": "Task: What is the name of the API to get a list of all cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n### 2.1.5.3.",
                "back_trans_input_tokens_mean": -2.194721648123412
            },
            {
                "idx": 4,
                "candidate": "What is the URL of the API that allows you to view and edit your current deck?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.492338392469618,
                "back_trans_input": "Task: What is the URL of the API that allows you to view and edit your current deck?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoints are not case sensitive but they should match exactly what was provided in the question.",
                "back_trans_input_tokens_mean": -2.276223955483272
            },
            {
                "idx": 5,
                "candidate": "Find the name of an item. I use Magic: The Gathering and am trying to get a list",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4431343403729526,
                "back_trans_input": "Task: Find the name of an item. I use Magic: The Gathering and am trying to get a list\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"id\": \"find_item\",\n  \"functionality\": \"",
                "back_trans_input_tokens_mean": -2.4413737765813277
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "What is the name of the API to get a list of all cards?"
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/series/%7Bserie%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/series/{serie}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all the cards in a specific set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6366218566894531,
                "back_trans_input": "Task: Find all the cards in a specific set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Sample Request/Response\n\n```json\n{\n  \"cards\": [\n    {\"id\":\"1",
                "back_trans_input_tokens_mean": -2.2822400030688703
            },
            {
                "idx": 2,
                "candidate": "Get the set name of a Magic card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4501640319824218,
                "back_trans_input": "Task: Get the set name of a Magic card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nSolution #1 using regexp_matches() function\n```sql\nSELECT\n  RE",
                "back_trans_input_tokens_mean": -2.375062425559926
            },
            {
                "idx": 3,
                "candidate": "how do you get the full name of cards with tcgdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4468010734109318,
                "back_trans_input": "Task: how do you get the full name of cards with tcgdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** the answer can be found in the TCGdex API documentation!",
                "back_trans_input_tokens_mean": -2.397806235722133
            },
            {
                "idx": 4,
                "candidate": "what is the card set code for a certain card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5584208170572917,
                "back_trans_input": "Task: what is the card set code for a certain card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** The first part of the URL that contains the endpoint name in lowercase letters with no spaces",
                "back_trans_input_tokens_mean": -2.3999389158476383
            },
            {
                "idx": 5,
                "candidate": "How can I get a list of cards with specific keywords?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.150793955876277,
                "back_trans_input": "Task: How can I get a list of cards with specific keywords?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v2\n\n---\n\n## [Directory](../..",
                "back_trans_input_tokens_mean": -2.3091243743896483
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find all the cards in a specific set."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/series/%7Bserie%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/series/{serie}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the value of a card. Name the API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6956627368927002,
                "back_trans_input": "Task: Find the value of a card. Name the API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** Look at `/examples/api_endpoints`.",
                "back_trans_input_tokens_mean": -2.346595858215192
            },
            {
                "idx": 2,
                "candidate": "To find all the TCG cards in a database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3887742559115093,
                "back_trans_input": "Task: To find all the TCG cards in a database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### How do I solve it?\n\nYou can create endpoints by using a RESTful web service called",
                "back_trans_input_tokens_mean": -2.3184960282177007
            },
            {
                "idx": 3,
                "candidate": "Find the price of a specific card using TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8124648094177246,
                "back_trans_input": "Task: Find the price of a specific card using TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task 2 \n\n### Endpoint (1/3)\n\nYou are given some information",
                "back_trans_input_tokens_mean": -2.199645695941789
            },
            {
                "idx": 4,
                "candidate": "Find what the name of a TCG card is from the TCG database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7935447412378647,
                "back_trans_input": "Task: Find what the name of a TCG card is from the TCG database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nExample:\n```json\n{\n    \"endpoint\": \"https://api.",
                "back_trans_input_tokens_mean": -2.276256249662031
            },
            {
                "idx": 5,
                "candidate": "find the rarity of a card.name TCGdexAPI",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2719423139796537,
                "back_trans_input": "Task: find the rarity of a card.name TCGdexAPI\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id",
                "back_trans_input_tokens_mean": -2.4016612478204675
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find the price of a specific card using TCGdex API."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/sets",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find all cards in the TCGdex store.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3758446845141323,
                "back_trans_input": "Task: find all cards in the TCGdex store.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hints\nYou can use [`curl`](https://www.",
                "back_trans_input_tokens_mean": -2.2646171849802
            },
            {
                "idx": 2,
                "candidate": "how to import the data from TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3835728963216145,
                "back_trans_input": "Task: how to import the data from TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Instructions\n\n### Step 1: Importing Data From The Endpoint And Getting Its Identifier, Function",
                "back_trans_input_tokens_mean": -2.294660305758135
            },
            {
                "idx": 3,
                "candidate": "What are some cards that have the most power?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6722900390625,
                "back_trans_input": "Task: What are some cards that have the most power?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task\n\nWrite your answer in the box below!\n",
                "back_trans_input_tokens_mean": -2.373519508926957
            },
            {
                "idx": 4,
                "candidate": "Find all the card names in the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8937378846682035,
                "back_trans_input": "Task: Find all the card names in the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n\"\"\"\n\n# TODO: Implement the function get_cards() that takes no arguments and returns a list of",
                "back_trans_input_tokens_mean": -2.197426280459842
            },
            {
                "idx": 5,
                "candidate": "Find all the cards that have a specific type of power.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0405179537259615,
                "back_trans_input": "Task: Find all the cards that have a specific type of power.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Example 1\n```json\n{\n    \"identifier\": \"get_cards_by_",
                "back_trans_input_tokens_mean": -2.285189229791815
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find all the card names in the TCGdex database."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/sets\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Create a list of available Magic the Gathering cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2724815805753071,
                "back_trans_input": "Task: Create a list of available Magic the Gathering cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Endpoints with multiple parameters\nThe previous example was quite simple because it only had one",
                "back_trans_input_tokens_mean": -2.3099795094242803
            },
            {
                "idx": 2,
                "candidate": "Search for TCG cards. What API would I use?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2456827362378438,
                "back_trans_input": "Task: Search for TCG cards. What API would I use?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nTask: Search for Pokemon. What API would I use?",
                "back_trans_input_tokens_mean": -2.3702920046719638
            },
            {
                "idx": 3,
                "candidate": "Find information for the card \"Jace, the Great\".",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.1756591796875,
                "back_trans_input": "Task: Find information for the card &quot;Jace, the Great&quot;.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Hint on how to solve it\n\nThe solution can be found in the following file: \n\n",
                "back_trans_input_tokens_mean": -2.4173462245775306
            },
            {
                "idx": 4,
                "candidate": "Find all cards from a set. Name of API: TCGdex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9245812682544484,
                "back_trans_input": "Task: Find all cards from a set. Name of API: TCGdex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nIdentifier: find_cards_from_set\nName: Get Cards From Set",
                "back_trans_input_tokens_mean": -2.343652235723175
            },
            {
                "idx": 5,
                "candidate": "Get information on a card. What is the name of this API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0186360677083333,
                "back_trans_input": "Task: Get information on a card. What is the name of this API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v2\n\n### Task 3)\n\nYou are tasked with creating a new endpoint that would allow users",
                "back_trans_input_tokens_mean": -2.3132857254573276
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find all cards from a set. Name of API: TCGdex"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/sets'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find all cards with a certain symbol in it.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4576637961647727,
                "back_trans_input": "Task: find all cards with a certain symbol in it.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Examples\n\n ```json\n  {\n    \"function\": \"findAllCards\",\n    \"description",
                "back_trans_input_tokens_mean": -2.3480645992137767
            },
            {
                "idx": 2,
                "candidate": "Find all the names for a given card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.342789077758789,
                "back_trans_input": "Task: Find all the names for a given card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Generate an Endpoint Identifier from Scratch\n\nFor your first task, you are going",
                "back_trans_input_tokens_mean": -2.3048715680559106
            },
            {
                "idx": 3,
                "candidate": "how to add a card to my collection?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2573211669921875,
                "back_trans_input": "Task: how to add a card to my collection?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nEndpoint ID: \n\nEndpoint Functionality: \n\nEndpoint Description: \n\nEndpoint API:",
                "back_trans_input_tokens_mean": -2.29980671962845
            },
            {
                "idx": 4,
                "candidate": "What is the easiest way to create a new deck with all of the Magic cards in it?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.465728235244751,
                "back_trans_input": "Task: What is the easiest way to create a new deck with all of the Magic cards in it?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Example\n\n```json\n{\n    \"id\": \"/api/v1/cards\",\n    ",
                "back_trans_input_tokens_mean": -2.309827070969802
            },
            {
                "idx": 5,
                "candidate": "what is a full list of cards? using that API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.86631833589994,
                "back_trans_input": "Task: what is a full list of cards? using that API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\nconst fetch = require('node-fetch');\n\nasync function getCards(){",
                "back_trans_input_tokens_mean": -2.4838299182576873
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "how to add a card to my collection?"
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/sets\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What data is available through the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9548150400320689,
                "back_trans_input": "Task: What data is available through the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<details>\n  <summary>Click here to see the solution</summary>\n    <br",
                "back_trans_input_tokens_mean": -2.2455022638494317
            },
            {
                "idx": 2,
                "candidate": "To add cards to the TCgdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.768645445505778,
                "back_trans_input": "Task: To add cards to the TCgdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nYou can find more information about endpoints in this file: https://github.",
                "back_trans_input_tokens_mean": -2.406981733110216
            },
            {
                "idx": 3,
                "candidate": "show me all elves. Show me only the ones that have more than 1 color.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.69024658203125,
                "back_trans_input": "Task: show me all elves. Show me only the ones that have more than 1 color.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** You can find the answer in a file called endpoints.",
                "back_trans_input_tokens_mean": -2.460832694481159
            },
            {
                "idx": 4,
                "candidate": "Find the price of cards. I need to find what is the most expensive card for a specific set,",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4110655351118608,
                "back_trans_input": "Task: Find the price of cards. I need to find what is the most expensive card for a specific set,\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Hints\n\n## Endpoint Identifiers are not case sensitive but should match exactly as provided in the",
                "back_trans_input_tokens_mean": -2.3886375427246094
            },
            {
                "idx": 5,
                "candidate": "What is the API endpoint to query card prices?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4138461026278408,
                "back_trans_input": "Task: What is the API endpoint to query card prices?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n\n# Solution\n\n### Task: What is the API endpoint to query card prices?",
                "back_trans_input_tokens_mean": -2.2744925816853843
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "What data is available through the TCGdex API?"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/sets\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all of the cards in a given card set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1005312601725261,
                "back_trans_input": "Task: Find all of the cards in a given card set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Endpoint Reversal\n\nIn some cases, the information provided may not be sufficient enough to generate",
                "back_trans_input_tokens_mean": -2.263158430746936
            },
            {
                "idx": 2,
                "candidate": "Create a database that shows the cards in all games.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9173011779785156,
                "back_trans_input": "Task: Create a database that shows the cards in all games.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2\n\nTask: Create an endpoint that returns user information from TCGdex when",
                "back_trans_input_tokens_mean": -2.3723996013676354
            },
            {
                "idx": 3,
                "candidate": "What is the API to create a custom MTG list?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3994492750901442,
                "back_trans_input": "Task: What is the API to create a custom MTG list?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The answer should match exactly what was in the original file before it was modified!",
                "back_trans_input_tokens_mean": -2.3441997528076173
            },
            {
                "idx": 4,
                "candidate": "Find the prices of rare cards. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9368451918874469,
                "back_trans_input": "Task: Find the prices of rare cards. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://tcgplayerapi.com/docs](https://tcgplayerapi.",
                "back_trans_input_tokens_mean": -2.3243866988590787
            },
            {
                "idx": 5,
                "candidate": "What is the TCGdex API endpoint for fetching cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9714900732040406,
                "back_trans_input": "Task: What is the TCGdex API endpoint for fetching cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n### 2.\n\nTask: What is the endpoint used by TCGdex API",
                "back_trans_input_tokens_mean": -2.1895472151892528
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "What is the TCGdex API endpoint for fetching cards?"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/sets\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "tcg dex API. how to get list of card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3923465728759765,
                "back_trans_input": "Task: tcg dex API. how to get list of card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** You can use your browser's developer tools (e.",
                "back_trans_input_tokens_mean": -2.4536902687766333
            },
            {
                "idx": 2,
                "candidate": "To get the name of a card in the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7980560436844826,
                "back_trans_input": "Task: To get the name of a card in the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n- [TCGdex](https://github.",
                "back_trans_input_tokens_mean": -2.16049940818179
            },
            {
                "idx": 3,
                "candidate": "Find a list of all cards that were banned in the Magic Origins set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2623535605037914,
                "back_trans_input": "Task: Find a list of all cards that were banned in the Magic Origins set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n## 2. Create the Endpoint\n\nCreate your own endpoints using the information provided below",
                "back_trans_input_tokens_mean": -2.33750473292528
            },
            {
                "idx": 4,
                "candidate": "What is TCGdex API's endpoint for creating a user in the system?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2605122208595276,
                "back_trans_input": "Task: What is TCGdex API&#x27;s endpoint for creating a user in the system?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## **Solution**\n\nTo solve the above question, we need to follow these steps",
                "back_trans_input_tokens_mean": -2.171052411824715
            },
            {
                "idx": 5,
                "candidate": "Find all of the cards in a collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9151376724243164,
                "back_trans_input": "Task: Find all of the cards in a collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Running the test cases\n\nTo run your tests, first make sure that you have set up the",
                "back_trans_input_tokens_mean": -2.3030391586161105
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "To get the name of a card in the TCGdex API."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/sets\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all the cards of type TCGdex has.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7358609934647877,
                "back_trans_input": "Task: Find all the cards of type TCGdex has.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoints in this exercise are from the Pokemon Trading Card Game Online API.",
                "back_trans_input_tokens_mean": -2.3053490725430574
            },
            {
                "idx": 2,
                "candidate": "find card prices.? I want to figure out what the cost of a card with specific name and number",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.591653910550204,
                "back_trans_input": "Task: find card prices.? I want to figure out what the cost of a card with specific name and number\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n```json\n{\n    \"endpoint\": \"https://tcg-api.",
                "back_trans_input_tokens_mean": -2.576117855007366
            },
            {
                "idx": 3,
                "candidate": "To download a list of cards, use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8781060501933098,
                "back_trans_input": "Task: To download a list of cards, use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n## 2. Endpoint Generation\n\nCreate a new file named `endpoint_generation",
                "back_trans_input_tokens_mean": -2.2148843275762236
            },
            {
                "idx": 4,
                "candidate": "Find the name of a card.? I want to find the name of a card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5667799949645996,
                "back_trans_input": "Task: Find the name of a card.? I want to find the name of a card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2.\n\nTask: Find the price in USD of a specific Pokemon Card.",
                "back_trans_input_tokens_mean": -2.3104182036026666
            },
            {
                "idx": 5,
                "candidate": "Find information on a magic card.? I want to know the name of the card, and what set",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0995485132390803,
                "back_trans_input": "Task: Find information on a magic card.? I want to know the name of the card, and what set\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Sample Output\n```javascript\nconst request = require('request');\n\nfunction getCard(",
                "back_trans_input_tokens_mean": -2.4687942569538697
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find the name of a card.? I want to find the name of a card."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/sets\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How can I use the API to add/remove from my collection?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.602026179432869,
                "back_trans_input": "Task: How can I use the API to add/remove from my collection?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## [Hackathon](https://github.",
                "back_trans_input_tokens_mean": -2.342723880495344
            },
            {
                "idx": 2,
                "candidate": "What information can you find out about a specific card using the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0999782901061208,
                "back_trans_input": "Task: What information can you find out about a specific card using the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nEndpoint: /v2/cards/{id}\n\nFunctionality: Get Card",
                "back_trans_input_tokens_mean": -2.2075721559853387
            },
            {
                "idx": 3,
                "candidate": "find the price of a card.? I want to know the price and name of a card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9634341326626864,
                "back_trans_input": "Task: find the price of a card.? I want to know the price and name of a card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://tcgplayerapi.com/docs](https://tcgplayerapi.",
                "back_trans_input_tokens_mean": -2.376037369426499
            },
            {
                "idx": 4,
                "candidate": "Find the cards to a Magic: The Gathering set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.325911255983206,
                "back_trans_input": "Task: Find the cards to a Magic: The Gathering set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " (https://tcgplayer.com/api)\n\n### Hints\n\n * You can use the",
                "back_trans_input_tokens_mean": -2.3043540464628727
            },
            {
                "idx": 5,
                "candidate": "what are the most popular magic cards?. using the tcgdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0754351364938837,
                "back_trans_input": "Task: what are the most popular magic cards?. using the tcgdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://api.tcgplayer.",
                "back_trans_input_tokens_mean": -2.474217312676566
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "What information can you find out about a specific card using the TCGdex API?"
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/sets/%7Bset%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets/{set}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all the cards in a given set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7710517883300781,
                "back_trans_input": "Task: Find all the cards in a given set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task: \n\nFunctionality: Get a list of users who are online right now.",
                "back_trans_input_tokens_mean": -2.307064912029516
            },
            {
                "idx": 2,
                "candidate": "To get information about the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1624498150565408,
                "back_trans_input": "Task: To get information about the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n#### 5.3.11.3.",
                "back_trans_input_tokens_mean": -2.1988921209212835
            },
            {
                "idx": 3,
                "candidate": "Find the value of a specific card.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.75511368115743,
                "back_trans_input": "Task: Find the value of a specific card.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```js\n// Your code here!\n",
                "back_trans_input_tokens_mean": -2.4017334340888765
            },
            {
                "idx": 4,
                "candidate": "Find the best tcg to purchase from ebay.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.185749610265096,
                "back_trans_input": "Task: Find the best tcg to purchase from ebay.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"name\": \"tcg\",\n  \"endpoint\": \"https://",
                "back_trans_input_tokens_mean": -2.421307916994448
            },
            {
                "idx": 5,
                "candidate": "Find all cards in a booster pack with the TCGdex API endpoint.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.189351287153032,
                "back_trans_input": "Task: Find all cards in a booster pack with the TCGdex API endpoint.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nURL: https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.2849532177573755
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find all the cards in a given set."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/sets/%7Bset%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets/{set}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Create a list of all the TCGs.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.198720563541759,
                "back_trans_input": "Task: Create a list of all the TCGs.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Create a new file named endpoints/tcgs-list.",
                "back_trans_input_tokens_mean": -2.2734905737582767
            },
            {
                "idx": 2,
                "candidate": "Find all the card names for a certain collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5053183815696023,
                "back_trans_input": "Task: Find all the card names for a certain collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Example output\n\n```json\n{\n  \"endpoint\": \"get_cards\",\n  \"identifier",
                "back_trans_input_tokens_mean": -2.3185996545685663
            },
            {
                "idx": 3,
                "candidate": "How can I get all the cards from TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9036284593435434,
                "back_trans_input": "Task: How can I get all the cards from TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Example:**\n\nThe following example shows how your answer should look like.",
                "back_trans_input_tokens_mean": -2.2326032170304306
            },
            {
                "idx": 4,
                "candidate": "Find a specific card number, in any set or rarity.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.0814752834183827,
                "back_trans_input": "Task: Find a specific card number, in any set or rarity.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Example Output \n```json\n{\n    \"identifier\": \"v1/cards\",\n    \"",
                "back_trans_input_tokens_mean": -2.4665361816232854
            },
            {
                "idx": 5,
                "candidate": "What API can I use to get information about cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.102693037553267,
                "back_trans_input": "Task: What API can I use to get information about cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**You must provide all four values in order to complete your submission.",
                "back_trans_input_tokens_mean": -2.2890093982766526
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "How can I get all the cards from TCGdex?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/sets/%7Bset%7D'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets/{set}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Use TCGdex API to search the cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5772822986949573,
                "back_trans_input": "Task: Use TCGdex API to search the cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task\n\nYou have been asked by your company to create the endpoints required in the following table using",
                "back_trans_input_tokens_mean": -2.3137220680166823
            },
            {
                "idx": 2,
                "candidate": "what sets are in the database?rr",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.371835708618164,
                "back_trans_input": "Task: what sets are in the database?rr\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** The answer can be found by looking at the endpoints available from https://tcg-api",
                "back_trans_input_tokens_mean": -2.5609102429084056
            },
            {
                "idx": 3,
                "candidate": "Find all of the Magic: The Gathering cards in the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6312981843948364,
                "back_trans_input": "Task: Find all of the Magic: The Gathering cards in the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2:\n\nYou will be given a task for which an endpoint is useful.",
                "back_trans_input_tokens_mean": -2.1544385992962383
            },
            {
                "idx": 4,
                "candidate": "Find the number of times a certain card has been played in this game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1541643142700195,
                "back_trans_input": "Task: Find the number of times a certain card has been played in this game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You should not hardcode any values into your code except those provided above.",
                "back_trans_input_tokens_mean": -2.1957935231976804
            },
            {
                "idx": 5,
                "candidate": "How do you find the card name for a Magic the Gathering card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2574250772595406,
                "back_trans_input": "Task: How do you find the card name for a Magic the Gathering card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<details>\n  <summary>Click here for the solution</summary>\n    <p>\n      \n",
                "back_trans_input_tokens_mean": -2.2901687962668285
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find all of the Magic: The Gathering cards in the TCGdex database."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/sets/%7Bset%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets/{set}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How can I get the details for a specific card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0738026301066081,
                "back_trans_input": "Task: How can I get the details for a specific card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<details>\n  <summary>Click here for the solution</summary>\n    <br/>",
                "back_trans_input_tokens_mean": -2.3408682936922127
            },
            {
                "idx": 2,
                "candidate": "Find the name of all cards in a given set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.834260622660319,
                "back_trans_input": "Task: Find the name of all cards in a given set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## 题目大意：\n\n给定一个 api 和一段",
                "back_trans_input_tokens_mean": -2.258141018928738
            },
            {
                "idx": 3,
                "candidate": "Find all the rare cards. What API do I use to do that?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5114934285481771,
                "back_trans_input": "Task: Find all the rare cards. What API do I use to do that?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** The answer can be found in the file tcgdex_api/tcgdex_",
                "back_trans_input_tokens_mean": -2.333772743697715
            },
            {
                "idx": 4,
                "candidate": "find all cards of a certain set.t",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4138880642977627,
                "back_trans_input": "Task: find all cards of a certain set.t\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n```json\n{\n    \"endpoint\": \"https://api.",
                "back_trans_input_tokens_mean": -2.3923508474759965
            },
            {
                "idx": 5,
                "candidate": "Find a Magic the Gathering card. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6825582534074783,
                "back_trans_input": "Task: Find a Magic the Gathering card. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### How should I do it?\n\n1.",
                "back_trans_input_tokens_mean": -2.260083794593811
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find a Magic the Gathering card. Use TCGdex API."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/sets/%7Bset%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets/{set}",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the value of a card. Name the API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6948078473409017,
                "back_trans_input": "Task: Find the value of a card. Name the API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n### Task: Find the collection information from a URL.",
                "back_trans_input_tokens_mean": -2.346786516522049
            },
            {
                "idx": 2,
                "candidate": "Find a list of all cards ever printed.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3113502502441405,
                "back_trans_input": "Task: Find a list of all cards ever printed.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hints:** \n\n* This can be done with one query request.",
                "back_trans_input_tokens_mean": -2.284043771084224
            },
            {
                "idx": 3,
                "candidate": "Find the price of a card. I want to get information on TCG cards for Magic the Gathering",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3363034400072964,
                "back_trans_input": "Task: Find the price of a card. I want to get information on TCG cards for Magic the Gathering\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://www.tcgplayer.",
                "back_trans_input_tokens_mean": -2.384822279719983
            },
            {
                "idx": 4,
                "candidate": "To see what cards from the TCG are worth money.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.1522496243317923,
                "back_trans_input": "Task: To see what cards from the TCG are worth money.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How is it done?\n\nThe endpoint can be found by navigating to [TCG Dex",
                "back_trans_input_tokens_mean": -2.319935317472978
            },
            {
                "idx": 5,
                "candidate": "Create a list of possible cards in mtg.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7170212085430439,
                "back_trans_input": "Task: Create a list of possible cards in mtg.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n```javascript:\n    // Write your code here\n    let response = await fetch('https://",
                "back_trans_input_tokens_mean": -2.4246964807863587
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find the value of a card. Name the API."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/sets/%7Bset%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets/{set}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find a card to put in my deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.48525390625,
                "back_trans_input": "Task: Find a card to put in my deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"id\": \"6c4a6e2f-2b",
                "back_trans_input_tokens_mean": -2.3095458623404816
            },
            {
                "idx": 2,
                "candidate": "what are the names of all the cards in Magic ?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4770011901855469,
                "back_trans_input": "Task: what are the names of all the cards in Magic ?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** There may be more than one possible answer for any single question\n",
                "back_trans_input_tokens_mean": -2.2871632034128364
            },
            {
                "idx": 3,
                "candidate": "Get a list of the TCGdex ID codes.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8448977378698497,
                "back_trans_input": "Task: Get a list of the TCGdex ID codes.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2 (5 points)\n\nYou are given a JSON object that represents information about a",
                "back_trans_input_tokens_mean": -2.279535039988431
            },
            {
                "idx": 4,
                "candidate": "Find information for a certain card. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9082775712013245,
                "back_trans_input": "Task: Find information for a certain card. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** You can use the following website as reference: https://www.",
                "back_trans_input_tokens_mean": -2.2825299722958454
            },
            {
                "idx": 5,
                "candidate": "Find all the cards for which i need to buy card sleeves",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.1087210518973216,
                "back_trans_input": "Task: Find all the cards for which i need to buy card sleeves\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hints\n\n* The endpoint for this task is in the `/cards` route",
                "back_trans_input_tokens_mean": -2.427343340353532
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find information for a certain card. Use the TCGdex API."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/sets/%7Bset%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets/{set}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How do I query the TCGdex catalog?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3760338046334006,
                "back_trans_input": "Task: How do I query the TCGdex catalog?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** This challenge involves reading code!",
                "back_trans_input_tokens_mean": -2.288580990712577
            },
            {
                "idx": 2,
                "candidate": "Find the names of all tcg cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1722285530783914,
                "back_trans_input": "Task: Find the names of all tcg cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Input Format\n\n```json{5}\n{\"endpoint\":\"https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.2864328188316843
            },
            {
                "idx": 3,
                "candidate": "Find prices for the TCG Dice Cards I have.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.259348471959432,
                "back_trans_input": "Task: Find prices for the TCG Dice Cards I have.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## -->\n```\n\nYour submission should follow this format exactly!",
                "back_trans_input_tokens_mean": -2.50868515574604
            },
            {
                "idx": 4,
                "candidate": "What is the best web-based database for Magic: The Gathering cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1627421155571938,
                "back_trans_input": "Task: What is the best web-based database for Magic: The Gathering cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task\n\nThe goal of this exercise is to make sure that you understand how to use OpenAPI",
                "back_trans_input_tokens_mean": -2.298273913628232
            },
            {
                "idx": 5,
                "candidate": "What is the TCGdex api code to get card information?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4482522090276082,
                "back_trans_input": "Task: What is the TCGdex api code to get card information?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## [Previous section](https://github.",
                "back_trans_input_tokens_mean": -2.316098996571132
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find the names of all tcg cards."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/sets/%7Bset%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets/{set}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Create a list of all the cards that has been released?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5987415313720703,
                "back_trans_input": "Task: Create a list of all the cards that has been released?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**This challenge was created by [The Coding Block](https://www.",
                "back_trans_input_tokens_mean": -2.329756754094904
            },
            {
                "idx": 2,
                "candidate": "Find cards with a particular name in the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.067058367388589,
                "back_trans_input": "Task: Find cards with a particular name in the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n## Solution\n\n```js\n// solution goes here...",
                "back_trans_input_tokens_mean": -2.236773018364434
            },
            {
                "idx": 3,
                "candidate": "how do I use the TCGdex API to search magic cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3051173210144043,
                "back_trans_input": "Task: how do I use the TCGdex API to search magic cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"cards\": [\n    {\n      \"id\": \"1\",\n      ",
                "back_trans_input_tokens_mean": -2.3074837237332773
            },
            {
                "idx": 4,
                "candidate": "Find the value of a card in TCG dex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0617962342042189,
                "back_trans_input": "Task: Find the value of a card in TCG dex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"id\": \"get_card\",\n    \"func\": \"GET",
                "back_trans_input_tokens_mean": -2.263112794368639
            },
            {
                "idx": 5,
                "candidate": "find a card's name. what is the TCGdex API and where can I find it",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2507990761236711,
                "back_trans_input": "Task: find a card&#x27;s name. what is the TCGdex API and where can I find it\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## 1. Find the Card Name\n\n### Description \n\n> The TCG Player API provides access to",
                "back_trans_input_tokens_mean": -2.3805717405725697
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find cards with a particular name in the TCGdex."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/sets/%7Bset%7D/%7BcardLocalId%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets/{set}/{cardLocalId}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find a specific card in the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6537392597932082,
                "back_trans_input": "Task: Find a specific card in the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Expected Output\nOutput should look like this: (all fields are optional)\n\n```json\n",
                "back_trans_input_tokens_mean": -2.1656063426624645
            },
            {
                "idx": 2,
                "candidate": "What would I do to get a set of cards with their names that are also the same name?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9721548897879464,
                "back_trans_input": "Task: What would I do to get a set of cards with their names that are also the same name?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<details>\n  <summary>Click here for the solution</summary>\n    <br/>\n    \n    ```",
                "back_trans_input_tokens_mean": -2.4299687854314254
            },
            {
                "idx": 3,
                "candidate": "Find the rarity of a card. Then use that number to find which set it is found in",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3910702792080967,
                "back_trans_input": "Task: Find the rarity of a card. Then use that number to find which set it is found in\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Input Format (JSON)\n\n```json\n{\n    \"endpointIdentifier\": \"card_",
                "back_trans_input_tokens_mean": -2.3724561185918303
            },
            {
                "idx": 4,
                "candidate": "find cards of a specific rarity.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1222514311472576,
                "back_trans_input": "Task: find cards of a specific rarity.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** You can use the following endpoints in your solution to solve parts of the problem: \n\n`",
                "back_trans_input_tokens_mean": -2.4207476130071677
            },
            {
                "idx": 5,
                "candidate": "What is the endpoint of an API that lets you find information about a card from a given set",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4164147810502485,
                "back_trans_input": "Task: What is the endpoint of an API that lets you find information about a card from a given set\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n```json\n{\n    \"id\": \"find_card\",\n    \"function\": \"Find",
                "back_trans_input_tokens_mean": -2.24427250919179
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find a specific card in the TCGdex API."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/sets/%7Bset%7D/%7BcardLocalId%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets/{set}/{cardLocalId}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How can I find my friend's list?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7191753149032594,
                "back_trans_input": "Task: How can I find my friend&#x27;s list?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hints\nThe hint contains the code that you need to complete your function implementation.",
                "back_trans_input_tokens_mean": -2.4083118782387123
            },
            {
                "idx": 2,
                "candidate": "What is the easiest way to find cards based on name or set?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4855692545572916,
                "back_trans_input": "Task: What is the easiest way to find cards based on name or set?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[Task]\nTask: Retrieve all Pokemon that have been printed in sets released before 2000",
                "back_trans_input_tokens_mean": -2.29908892086574
            },
            {
                "idx": 3,
                "candidate": "if you had cards from different sets in the same deck, how would you determine which ones were rare?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.622529463334517,
                "back_trans_input": "Task: if you had cards from different sets in the same deck, how would you determine which ones were rare?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Expected output\n\n```json\n{\n    \"endpoint\": \"https://tcg-api.",
                "back_trans_input_tokens_mean": -2.3420884909750033
            },
            {
                "idx": 4,
                "candidate": "What API's can you use to get card details?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.569466193517049,
                "back_trans_input": "Task: What API&#x27;s can you use to get card details?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript {2}\nconst response = await fetch('https://tcgdextcg",
                "back_trans_input_tokens_mean": -2.443955970021476
            },
            {
                "idx": 5,
                "candidate": "how do you download the tcgdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0467671553293865,
                "back_trans_input": "Task: how do you download the tcgdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> You have access to all endpoints in the TCGdex API to help you solve this challenge.",
                "back_trans_input_tokens_mean": -2.3851258821576553
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "how do you download the tcgdex?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.tcgdex.net/v2/%7Blang%7D/sets/%7Bset%7D/%7BcardLocalId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets/{set}/{cardLocalId}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Show all the rares in a specific list.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7734902121803977,
                "back_trans_input": "Task: Show all the rares in a specific list.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** You can use the following code snippet as an example on how the endpoints are structured.",
                "back_trans_input_tokens_mean": -2.38653094680221
            },
            {
                "idx": 2,
                "candidate": "how do you add a card to the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6797173976898193,
                "back_trans_input": "Task: how do you add a card to the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n##### Hint 1:\n\n`GET /cards/{card_id}`\n\n```json",
                "back_trans_input_tokens_mean": -2.1794099381991794
            },
            {
                "idx": 3,
                "candidate": "What is the API to get a list of cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7563298543294271,
                "back_trans_input": "Task: What is the API to get a list of cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 3.4 The task with endpoints that have parameters in the URL\n\n\n> **You need",
                "back_trans_input_tokens_mean": -2.23881667250887
            },
            {
                "idx": 4,
                "candidate": "tcgdex API. show me all the cards in an existing set",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3192199601067438,
                "back_trans_input": "Task: tcgdex API. show me all the cards in an existing set\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:**\n* Your code should not contain any dependencies on external libraries or files.",
                "back_trans_input_tokens_mean": -2.5259176662990024
            },
            {
                "idx": 5,
                "candidate": "To create a database with images and textual data, I would use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4801729971712285,
                "back_trans_input": "Task: To create a database with images and textual data, I would use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n```javascript{4}\n// Your code here!\n```",
                "back_trans_input_tokens_mean": -2.3435446044146
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "how do you add a card to the TCGdex API?"
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/sets/%7Bset%7D/%7BcardLocalId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets/{set}/{cardLocalId}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What does this API do?nWhat is the endpoint for it?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9632396697998047,
                "back_trans_input": "Task: What does this API do?nWhat is the endpoint for it?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task 2\n\n\n> You have been asked by your manager to create a new endpoint in order to",
                "back_trans_input_tokens_mean": -2.3062786715371266
            },
            {
                "idx": 2,
                "candidate": "Find me every card a creature with flying in it has ever come into play.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.0810259650735294,
                "back_trans_input": "Task: Find me every card a creature with flying in it has ever come into play.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n(You can find more information about this challenge at https://github.",
                "back_trans_input_tokens_mean": -2.476917032609906
            },
            {
                "idx": 3,
                "candidate": "Find a specific card.nFind the list of cards that have an effect on your turn when",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3007183996113865,
                "back_trans_input": "Task: Find a specific card.nFind the list of cards that have an effect on your turn when\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n---\n\n## 2. Endpoint 3\n\n <div class=\"endpoint\">\n    <h3",
                "back_trans_input_tokens_mean": -2.6569198543189936
            },
            {
                "idx": 4,
                "candidate": "Find a list of all the cards in every deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1328627268473308,
                "back_trans_input": "Task: Find a list of all the cards in every deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nEndpoint: \n\n**Note:** The endpoints are randomly generated from the following set of APIs ",
                "back_trans_input_tokens_mean": -2.2846464454580886
            },
            {
                "idx": 5,
                "candidate": "Find the tcgdex card for the following card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5334276471819197,
                "back_trans_input": "Task: Find the tcgdex card for the following card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 3\n\nThe goal of this exercise is to create your own endpoint.",
                "back_trans_input_tokens_mean": -2.386673848563378
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "What does this API do?nWhat is the endpoint for it?"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/sets/%7Bset%7D/%7BcardLocalId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets/{set}/{cardLocalId}",
        "method": "get",
        "lang": "go",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "how do I use the TCG dex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4114009033549915,
                "back_trans_input": "Task: how do I use the TCG dex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n*/\n//\n//  Created by Steven on 6/28/2018.",
                "back_trans_input_tokens_mean": -2.348740693564727
            },
            {
                "idx": 2,
                "candidate": "what is the list of all the cards available in the TCG dex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.513833373785019,
                "back_trans_input": "Task: what is the list of all the cards available in the TCG dex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** Please use the endpoints in this repo as your reference point for how they should look like.",
                "back_trans_input_tokens_mean": -2.289339369377204
            },
            {
                "idx": 3,
                "candidate": "Find cards in a specific set. Name the API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8886305491129557,
                "back_trans_input": "Task: Find cards in a specific set. Name the API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": ", https://github.com/Kaiyum/tcg-api-docs",
                "back_trans_input_tokens_mean": -2.3613274600527703
            },
            {
                "idx": 4,
                "candidate": "How do I find all the cards in a given set?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9799957275390625,
                "back_trans_input": "Task: How do I find all the cards in a given set?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<details>\n  <summary><b>Click here for the solution</b></summary>",
                "back_trans_input_tokens_mean": -2.2789662794633343
            },
            {
                "idx": 5,
                "candidate": "how would i use the tcgdex API to look up the value of a card",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1081021699038418,
                "back_trans_input": "Task: how would i use the tcgdex API to look up the value of a card\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# 1) Create a file called index.",
                "back_trans_input_tokens_mean": -2.430359052575153
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find cards in a specific set. Name the API."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/sets/%7Bset%7D/%7BcardLocalId%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets/{set}/{cardLocalId}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How can I search for cards from the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8177157129560199,
                "back_trans_input": "Task: How can I search for cards from the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n*Hint* -> Look at the documentation on the right side!",
                "back_trans_input_tokens_mean": -2.2260056819234575
            },
            {
                "idx": 2,
                "candidate": "Find the cost of a card. Who has it?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1821667353312175,
                "back_trans_input": "Task: Find the cost of a card. Who has it?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You can find all endpoints in the file `endpoints.",
                "back_trans_input_tokens_mean": -2.374669503728184
            },
            {
                "idx": 3,
                "candidate": "Find all cards that can be used as a counter in an opponent's turn.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1871451801723905,
                "back_trans_input": "Task: Find all cards that can be used as a counter in an opponent&#x27;s turn.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [Hackerrank 30 days of code challenge](https://www.",
                "back_trans_input_tokens_mean": -2.295967441494182
            },
            {
                "idx": 4,
                "candidate": "How do I search the TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.037820827960968,
                "back_trans_input": "Task: How do I search the TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n### Answer\n\n```yaml\ntask: Search the TCGdex!\nfunctionality: \"",
                "back_trans_input_tokens_mean": -2.290598992948179
            },
            {
                "idx": 5,
                "candidate": "Add a list of all the cards in a given set to TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9781287343878495,
                "back_trans_input": "Task: Add a list of all the cards in a given set to TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n<details>\n<summary><b>Solution</b></summary>\n```jsonc",
                "back_trans_input_tokens_mean": -2.2331673829451852
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "How can I search for cards from the TCGdex API?"
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/sets/%7Bset%7D/%7BcardLocalId%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets/{set}/{cardLocalId}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find cards in a deck and their card names",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.071572043678977,
                "back_trans_input": "Task: find cards in a deck and their card names\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Input\n- The input file contains one line with four values separated by spaces:\n  - id ",
                "back_trans_input_tokens_mean": -2.373486694888534
            },
            {
                "idx": 2,
                "candidate": "Find out the name of all cards in my collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2709628018465908,
                "back_trans_input": "Task: Find out the name of all cards in my collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoints\n\n| Name | Description | Functionality | Identifier |\n|---",
                "back_trans_input_tokens_mean": -2.266997825115099
            },
            {
                "idx": 3,
                "candidate": "What is the API to access tcgdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9971539424015925,
                "back_trans_input": "Task: What is the API to access tcgdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nIdentifier: tcdgex_get_token_price\nFunctionality: Get token price from Tcg",
                "back_trans_input_tokens_mean": -2.3255415558815002
            },
            {
                "idx": 4,
                "candidate": "Find the name of all cards in an MTG deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0402323404947917,
                "back_trans_input": "Task: Find the name of all cards in an MTG deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n```json\n{\n    \"id\": \"8b7c5f4a-c6",
                "back_trans_input_tokens_mean": -2.2431106220592154
            },
            {
                "idx": 5,
                "candidate": "What can I do to use the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0846143869253306,
                "back_trans_input": "Task: What can I do to use the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nInput Format\nThe first line contains three integers, N, M and K denoting the number of",
                "back_trans_input_tokens_mean": -2.229631791243682
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find the name of all cards in an MTG deck."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/sets/%7Bset%7D/%7BcardLocalId%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/sets/{set}/{cardLocalId}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "cards"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What are the most recent cards added to TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.754566871202909,
                "back_trans_input": "Task: What are the most recent cards added to TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 4:\n\nYou have been asked to write out all endpoints that belong to the TC",
                "back_trans_input_tokens_mean": -2.1991070218988367
            },
            {
                "idx": 2,
                "candidate": "Find the newest card from TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0641762234947898,
                "back_trans_input": "Task: Find the newest card from TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**NOTE:** We have provided endpoints with `id`, `function` and `description`.",
                "back_trans_input_tokens_mean": -2.2519548535346985
            },
            {
                "idx": 3,
                "candidate": "Find cards of certain type.nList all the card types in a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6413998074001737,
                "back_trans_input": "Task: Find cards of certain type.nList all the card types in a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```bash\ncurl https://api.tcgplayer.",
                "back_trans_input_tokens_mean": -2.5013626123729504
            },
            {
                "idx": 4,
                "candidate": "What API allows a developer to retrieve data for each card in a Magic: The Gathering deck?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2630684863437305,
                "back_trans_input": "Task: What API allows a developer to retrieve data for each card in a Magic: The Gathering deck?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<details>\n  <summary>Solution</summary>\n\n  Deck API\n\n  ```\n  GET https://api",
                "back_trans_input_tokens_mean": -2.3078142109080257
            },
            {
                "idx": 5,
                "candidate": "What is a good API to use that will help me find the prices of Magic: The Gathering cards",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1875778978521174,
                "back_trans_input": "Task: What is a good API to use that will help me find the prices of Magic: The Gathering cards\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n# Example:\n\n## Task: What is a good API to use that will allow me to",
                "back_trans_input_tokens_mean": -2.31531272096149
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "What are the most recent cards added to TCGdex?"
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/stages",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/stages",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all of the card images for a particular card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2624939282735188,
                "back_trans_input": "Task: Find all of the card images for a particular card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. What are endpoints?\nEndpoints are URLs that represent different functionalities in APIs.",
                "back_trans_input_tokens_mean": -2.2417793973870235
            },
            {
                "idx": 2,
                "candidate": "Show me all cards for the tcg dex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.492111976330097,
                "back_trans_input": "Task: Show me all cards for the tcg dex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<div class=\"solution\">\n\nfunction getCards() {\n  return fetch('",
                "back_trans_input_tokens_mean": -2.401306473206137
            },
            {
                "idx": 3,
                "candidate": "Write code to get the name of all cards in a specific set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0967310587565104,
                "back_trans_input": "Task: Write code to get the name of all cards in a specific set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2 (10 points)\nYou have been given the following JSON string that represents ",
                "back_trans_input_tokens_mean": -2.2621025698525563
            },
            {
                "idx": 4,
                "candidate": "Get all the cards in TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.093164849281311,
                "back_trans_input": "Task: Get all the cards in TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Sample\n\n```json\n{\n  \"id\": \"a4e0b6f2",
                "back_trans_input_tokens_mean": -2.1995383898417153
            },
            {
                "idx": 5,
                "candidate": "Find the current card prices on TCG's",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.0559525923295454,
                "back_trans_input": "Task: Find the current card prices on TCG&#x27;s\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2:\n\nYou are now provided with a list of endpoints that have been generated by",
                "back_trans_input_tokens_mean": -2.4273980974077105
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Get all the cards in TCGdex."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/stages\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/stages",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find what card I need to use against someone.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.3330810546875,
                "back_trans_input": "Task: Find what card I need to use against someone.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```\nGET https://api.tcgplayer.",
                "back_trans_input_tokens_mean": -2.4075642691718206
            },
            {
                "idx": 2,
                "candidate": "Search by set number in TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.937940204143524,
                "back_trans_input": "Task: Search by set number in TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Submission Guidelines\n\n1. **Submit your code as a pull request against this repository**.",
                "back_trans_input_tokens_mean": -2.3391407595740423
            },
            {
                "idx": 3,
                "candidate": "Find the name of a card.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6345751502297141,
                "back_trans_input": "Task: Find the name of a card.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input Format ##\n\nThe input file contains one line with four fields separated by spaces.",
                "back_trans_input_tokens_mean": -2.3740154842160783
            },
            {
                "idx": 4,
                "candidate": "How do I add a new card with the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9449848532676697,
                "back_trans_input": "Task: How do I add a new card with the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nExample 1:\nInput: \nendpointId=addCard&description=You can use",
                "back_trans_input_tokens_mean": -2.2174541844730884
            },
            {
                "idx": 5,
                "candidate": "Find cards in the TCGdex database based on card type.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1825146039326986,
                "back_trans_input": "Task: Find cards in the TCGdex database based on card type.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Notes: \nThe endpoints are not case sensitive.",
                "back_trans_input_tokens_mean": -2.2293451939310347
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find the name of a card.n"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/stages'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/stages",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How do I get the current price for a specific card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.054873539851262,
                "back_trans_input": "Task: How do I get the current price for a specific card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Example:** The correct answer would be something like that (I do not know how much it costs",
                "back_trans_input_tokens_mean": -2.2523308147083627
            },
            {
                "idx": 2,
                "candidate": "Create a deck from TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1454667091369628,
                "back_trans_input": "Task: Create a deck from TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## [Section III](https://github.",
                "back_trans_input_tokens_mean": -2.295266944671346
            },
            {
                "idx": 3,
                "candidate": "find the name and card number for a specific card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3030134836832683,
                "back_trans_input": "Task: find the name and card number for a specific card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nSolution: (the names are not important)\n\nIdentifier: get_card_",
                "back_trans_input_tokens_mean": -2.350087612047108
            },
            {
                "idx": 4,
                "candidate": "Add a card to the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5333927544680509,
                "back_trans_input": "Task: Add a card to the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<br>\n\nExpected output: \n\n```json\n{\n    \"identifier\": \"add_",
                "back_trans_input_tokens_mean": -2.21616792678833
            },
            {
                "idx": 5,
                "candidate": "Create an API to query a list of games from TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5925225466489792,
                "back_trans_input": "Task: Create an API to query a list of games from TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n(Please note that this was written before TCGdex changed their data structure.",
                "back_trans_input_tokens_mean": -2.207270647572205
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Add a card to the TCGdex."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/stages\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/stages",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all of the cards in a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6944160461425781,
                "back_trans_input": "Task: Find all of the cards in a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hint(s)\n\n> You can find endpoints listed at https://github.",
                "back_trans_input_tokens_mean": -2.3001378206449132
            },
            {
                "idx": 2,
                "candidate": "Find all the Magic: The Gathering cards in print.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2766446073849995,
                "back_trans_input": "Task: Find all the Magic: The Gathering cards in print.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Find all the TCGPlayer sellers who are selling Magic: The Gathering cards with prices",
                "back_trans_input_tokens_mean": -2.3071457399140805
            },
            {
                "idx": 3,
                "candidate": "How can I download the latest version of a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3044954935709636,
                "back_trans_input": "Task: How can I download the latest version of a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 1. Create a new directory named after your team or username in `/api`.",
                "back_trans_input_tokens_mean": -2.3185910916109695
            },
            {
                "idx": 4,
                "candidate": "find the price of an item. Name this API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6968883167613635,
                "back_trans_input": "Task: find the price of an item. Name this API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2\n\nYou are given the following information about an API: its name, functionality,",
                "back_trans_input_tokens_mean": -2.4313408533732095
            },
            {
                "idx": 5,
                "candidate": "Find the card I need for a certain set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4032766168767756,
                "back_trans_input": "Task: Find the card I need for a certain set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<details>\n  <summary>Click here for the solution</summary>\n    <ul>",
                "back_trans_input_tokens_mean": -2.37845805839256
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find all of the cards in a set."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/stages\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/stages",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the name of all Magic cards in the TCG.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2378308673699696,
                "back_trans_input": "Task: Find the name of all Magic cards in the TCG.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nYour solution must return an object with these keys that has values equal to those above:\n\n{\n    ",
                "back_trans_input_tokens_mean": -2.29467228976163
            },
            {
                "idx": 2,
                "candidate": "What's the best API to look up a Magic cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6008290563310896,
                "back_trans_input": "Task: What&#x27;s the best API to look up a Magic cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How To Solve This Task\n\nYou can use any tools at your disposal in order to solve",
                "back_trans_input_tokens_mean": -2.411420855605811
            },
            {
                "idx": 3,
                "candidate": "Find the name of all cards in a deck (TCG or board game).",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2960348690257353,
                "back_trans_input": "Task: Find the name of all cards in a deck (TCG or board game).\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nThe answer should look like this:\n```json\n{\n  \"function\": \"",
                "back_trans_input_tokens_mean": -2.3034183999766475
            },
            {
                "idx": 4,
                "candidate": "Find all cards from a card set. API name: TCGdex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9677964168436387,
                "back_trans_input": "Task: Find all cards from a card set. API name: TCGdex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nIdentifiers:\n\n* tcg_setid (integer)\n\nFunctionalities:\n\n",
                "back_trans_input_tokens_mean": -2.3200770015210175
            },
            {
                "idx": 5,
                "candidate": "To find a list of every card in the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9674257934093475,
                "back_trans_input": "Task: To find a list of every card in the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:**\nThe endpoints are case sensitive!",
                "back_trans_input_tokens_mean": -2.180962714473758
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "To find a list of every card in the TCGdex API."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/stages\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/stages",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find a specific card. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5770835450717381,
                "back_trans_input": "Task: Find a specific card. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task: Re-Generate Endpoint ID\n\nThe first step in re-generating the endpoint",
                "back_trans_input_tokens_mean": -2.26081827524546
            },
            {
                "idx": 2,
                "candidate": "Show all the Magic the Gathering cards.?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5418760061264039,
                "back_trans_input": "Task: Show all the Magic the Gathering cards.?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## -->\n```\n\nThe following are examples of valid responses:\n\n```json\n{\n    ",
                "back_trans_input_tokens_mean": -2.4413697224742963
            },
            {
                "idx": 3,
                "candidate": "Find the name of a TCG card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8959028720855713,
                "back_trans_input": "Task: Find the name of a TCG card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task\n\nYou are asked to find out what kind of Pokémon type the following Pokémon belong to:",
                "back_trans_input_tokens_mean": -2.242083932751807
            },
            {
                "idx": 4,
                "candidate": "Use TCGdex API to get card information.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9414804632013495,
                "back_trans_input": "Task: Use TCGdex API to get card information.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** Please make sure that your endpoint works in production environment without any errors!",
                "back_trans_input_tokens_mean": -2.262123580372662
            },
            {
                "idx": 5,
                "candidate": "Find the names and numbers of cards in a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1249891916910808,
                "back_trans_input": "Task: Find the names and numbers of cards in a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solution:\n\n1. Open up Google Chrome or Firefox web browser.",
                "back_trans_input_tokens_mean": -2.2959466286755483
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find a specific card. Use the TCGdex API."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/stages\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/stages",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find cards on TCGdex.com.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9519829511642456,
                "back_trans_input": "Task: Find cards on TCGdex.com.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<details>\n  <summary>Click here for the solution</summary>\n    <br/>\n    \n    <",
                "back_trans_input_tokens_mean": -2.2439406602470964
            },
            {
                "idx": 2,
                "candidate": "Add a card to the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5265804131825765,
                "back_trans_input": "Task: Add a card to the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Task\n\nYou are required to add a new endpoint.",
                "back_trans_input_tokens_mean": -2.1848263587426704
            },
            {
                "idx": 3,
                "candidate": "show all the cards from the TCGdex website.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7072089711825054,
                "back_trans_input": "Task: show all the cards from the TCGdex website.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **Endpoints**\n\nThe endpoints that are available on the card database are as follows:",
                "back_trans_input_tokens_mean": -2.2508780631152066
            },
            {
                "idx": 4,
                "candidate": "find the card that can be used to replace another card in my deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.84482421875,
                "back_trans_input": "Task: find the card that can be used to replace another card in my deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Endpoint\n```json\n{\n    \"id\": \"get-card\",\n    \"description",
                "back_trans_input_tokens_mean": -2.294212634584545
            },
            {
                "idx": 5,
                "candidate": "Find all the rare cards in samurai spirits using TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.562486918349015,
                "back_trans_input": "Task: Find all the rare cards in samurai spirits using TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** Please refer to [this](https://github.",
                "back_trans_input_tokens_mean": -2.454109106147498
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Add a card to the TCGdex API."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/stages\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/stages",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the price of a card from an API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0613602724942295,
                "back_trans_input": "Task: Find the price of a card from an API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n\t\"id\": \"price\",\n\t\"functionality\": \"get_",
                "back_trans_input_tokens_mean": -2.2717741749904774
            },
            {
                "idx": 2,
                "candidate": "Search for all cards by specific type within a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.182612737019857,
                "back_trans_input": "Task: Search for all cards by specific type within a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task\n\nTask: Create an account with a given username/password pair.",
                "back_trans_input_tokens_mean": -2.4518590279675405
            },
            {
                "idx": 3,
                "candidate": "List all deck types from the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.867175817489624,
                "back_trans_input": "Task: List all deck types from the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** `deck_type` in your output should match with what was shown here as well",
                "back_trans_input_tokens_mean": -2.2398568586869674
            },
            {
                "idx": 4,
                "candidate": "List all cards in a single set.?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5728515625,
                "back_trans_input": "Task: List all cards in a single set.?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2\n\n**You have been tasked with creating a new `/cards/{card_",
                "back_trans_input_tokens_mean": -2.414877862300513
            },
            {
                "idx": 5,
                "candidate": "Use the TCGdex API to get all card details, including keywords and abilities.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.367814348803626,
                "back_trans_input": "Task: Use the TCGdex API to get all card details, including keywords and abilities.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You can find more endpoints by using Swagger UI or Postman\n",
                "back_trans_input_tokens_mean": -2.2623319132574675
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find the price of a card from an API."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/stages/%7Bstage%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/stages/{stage}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "To get the number of each type of card in an image.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8291649451622596,
                "back_trans_input": "Task: To get the number of each type of card in an image.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **Answer**\n\nThe function would look like something like this.",
                "back_trans_input_tokens_mean": -2.3462562990618183
            },
            {
                "idx": 2,
                "candidate": "How can I get the latest version of tcgdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.106258710225423,
                "back_trans_input": "Task: How can I get the latest version of tcgdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"endpoint\": \"https://api.",
                "back_trans_input_tokens_mean": -2.366514873504639
            },
            {
                "idx": 3,
                "candidate": "Find the list of all card name's that I have in TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.693627913792928,
                "back_trans_input": "Task: Find the list of all card name&#x27;s that I have in TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n {\n    \"id\": \"1\",\n    \"name\": \"TCGd",
                "back_trans_input_tokens_mean": -2.3222834382738387
            },
            {
                "idx": 4,
                "candidate": "What is the id of the TCG dex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9517532416752407,
                "back_trans_input": "Task: What is the id of the TCG dex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# [TCG dex](https://github.",
                "back_trans_input_tokens_mean": -2.218544295074743
            },
            {
                "idx": 5,
                "candidate": "What is the API to get the list of all cards in a specific set?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.861212786506204,
                "back_trans_input": "Task: What is the API to get the list of all cards in a specific set?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[Solution](https://github.com/nishantprakash/TCGdex-",
                "back_trans_input_tokens_mean": -2.2243841823778654
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "What is the API to get the list of all cards in a specific set?"
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/stages/%7Bstage%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/stages/{stage}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is the API used for? (The TCGdex API)",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1149826273322105,
                "back_trans_input": "Task: What is the API used for? (The TCGdex API)\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Answer:**\n\nA blockchain explorer that allows users to search transactions on the Ethereum network by address or",
                "back_trans_input_tokens_mean": -2.1459815794961496
            },
            {
                "idx": 2,
                "candidate": "Add a card to the TCGdex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7158743359825828,
                "back_trans_input": "Task: Add a card to the TCGdex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2a)\n\nYou are tasked with creating an endpoint that will allow users to add",
                "back_trans_input_tokens_mean": -2.2348988434978736
            },
            {
                "idx": 3,
                "candidate": "Add a card to your TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1700509678233753,
                "back_trans_input": "Task: Add a card to your TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n## **3.2.",
                "back_trans_input_tokens_mean": -2.238553771266231
            },
            {
                "idx": 4,
                "candidate": "Add a card to the database. Name of the API is TCGdex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7451024783982171,
                "back_trans_input": "Task: Add a card to the database. Name of the API is TCGdex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You can find more information about endpoints in the Endpoints section.",
                "back_trans_input_tokens_mean": -2.3177776420325564
            },
            {
                "idx": 5,
                "candidate": "How do you list each card in a deck and its stats?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7207883199055989,
                "back_trans_input": "Task: How do you list each card in a deck and its stats?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## How To Run This Locally\n\n### Install dependencies\n```bash\nnpm install --only",
                "back_trans_input_tokens_mean": -2.3383574099154085
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Add a card to the TCGdex"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/stages/%7Bstage%7D'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/stages/{stage}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find cards in the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7403019547462464,
                "back_trans_input": "Task: Find cards in the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n---\n\nTask: Get all cards from an MTG set.",
                "back_trans_input_tokens_mean": -2.223440744258739
            },
            {
                "idx": 2,
                "candidate": "How can I get card details from TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0289708375930786,
                "back_trans_input": "Task: How can I get card details from TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Instructions\n\n1. Complete the function provided in endpoints/endpoints.",
                "back_trans_input_tokens_mean": -2.279319901899858
            },
            {
                "idx": 3,
                "candidate": "what is the api to check for magic cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2216020063920454,
                "back_trans_input": "Task: what is the api to check for magic cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How do I solve it?\nFirst, we need to find an API that has endpoints related to",
                "back_trans_input_tokens_mean": -2.3715399636162653
            },
            {
                "idx": 4,
                "candidate": "Find the set of all cards in a given Magic collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4660298274113581,
                "back_trans_input": "Task: Find the set of all cards in a given Magic collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [Try it online!](https://repl.",
                "back_trans_input_tokens_mean": -2.3585913571444426
            },
            {
                "idx": 5,
                "candidate": "What is the API for getting card details from TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9927562390054975,
                "back_trans_input": "Task: What is the API for getting card details from TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Endpoints\n\nThe endpoints are organized by their APIs as follows:\n\n| API      | Description",
                "back_trans_input_tokens_mean": -2.201021764959608
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find cards in the TCGdex database."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/stages/%7Bstage%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/stages/{stage}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the rare card of a specific card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4296173095703124,
                "back_trans_input": "Task: Find the rare card of a specific card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Submitting Incomplete Solutions\nIt's possible to submit an incomplete solution so you can see",
                "back_trans_input_tokens_mean": -2.3123633906105967
            },
            {
                "idx": 2,
                "candidate": "Find card prices from TCGdex.com",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1546147411519831,
                "back_trans_input": "Task: Find card prices from TCGdex.com\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** This endpoint is used by our [TCGdex Price History](https://github",
                "back_trans_input_tokens_mean": -2.256661183304257
            },
            {
                "idx": 3,
                "candidate": "Find all of the cards available in the newest set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5063883463541667,
                "back_trans_input": "Task: Find all of the cards available in the newest set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## Solution\n\n```json\n{\n    \"endpoint\": \"/sets/latest\",\n    \"functionality",
                "back_trans_input_tokens_mean": -2.32082136617888
            },
            {
                "idx": 4,
                "candidate": "appoint cards to build deck with the API TCGdex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.853001818060875,
                "back_trans_input": "Task: appoint cards to build deck with the API TCGdex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://www.tcgplayer.",
                "back_trans_input_tokens_mean": -2.519071091305126
            },
            {
                "idx": 5,
                "candidate": "Find the name of a card that has just been entered into a database",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4697233648861157,
                "back_trans_input": "Task: Find the name of a card that has just been entered into a database\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> Note: The endpoints are not real, they have been generated by me as examples!",
                "back_trans_input_tokens_mean": -2.323146622095789
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find card prices from TCGdex.com"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/stages/%7Bstage%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/stages/{stage}",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is the quickest way to look up card name and cost in TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1563512526060407,
                "back_trans_input": "Task: What is the quickest way to look up card name and cost in TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2\n\n\n\n\n\n\n#### [Solution](https://github.",
                "back_trans_input_tokens_mean": -2.2698565906491774
            },
            {
                "idx": 2,
                "candidate": "What is the name of the API that allows you to get information on cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8667919635772705,
                "back_trans_input": "Task: What is the name of the API that allows you to get information on cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nTask: What is the name of the API that allows you to look up your account details?",
                "back_trans_input_tokens_mean": -2.173009728130541
            },
            {
                "idx": 3,
                "candidate": "Create a table with card names. Add the name, color and type of each card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.587503433227539,
                "back_trans_input": "Task: Create a table with card names. Add the name, color and type of each card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": ": https://tcgplayer.com/api/docs",
                "back_trans_input_tokens_mean": -2.3394165265149085
            },
            {
                "idx": 4,
                "candidate": "Find all rare cards.? Use a card index like the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4617809559169568,
                "back_trans_input": "Task: Find all rare cards.? Use a card index like the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"id\": \"https://api.",
                "back_trans_input_tokens_mean": -2.4687660777050517
            },
            {
                "idx": 5,
                "candidate": "Use this API to look for any card in Magic: The Gathering.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6710854291915893,
                "back_trans_input": "Task: Use this API to look for any card in Magic: The Gathering.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n*Note that not all endpoints have endpoints.",
                "back_trans_input_tokens_mean": -2.2914315185376575
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "What is the name of the API that allows you to get information on cards?"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/stages/%7Bstage%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/stages/{stage}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the name of every card in a specific set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8455645243326823,
                "back_trans_input": "Task: Find the name of every card in a specific set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How we test your code\nWe are going to run our own tests on your submission to make sure",
                "back_trans_input_tokens_mean": -2.2665517505155792
            },
            {
                "idx": 2,
                "candidate": "Find the card value of a game card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6157752990722656,
                "back_trans_input": "Task: Find the card value of a game card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint Reverser\n\nThis challenge requires some knowledge about how endpoints are structured.",
                "back_trans_input_tokens_mean": -2.3219241093252307
            },
            {
                "idx": 3,
                "candidate": "Find all cards in the new format MTG Cardsmith 2.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.761016845703125,
                "back_trans_input": "Task: Find all cards in the new format MTG Cardsmith 2.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Submission details\n\n1. Submit your solution as a single file named `task5_solution",
                "back_trans_input_tokens_mean": -2.492616744978087
            },
            {
                "idx": 4,
                "candidate": "How can I query the TCGdex API for a database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.241423734029134,
                "back_trans_input": "Task: How can I query the TCGdex API for a database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** Use the `tcg.",
                "back_trans_input_tokens_mean": -2.310715213418007
            },
            {
                "idx": 5,
                "candidate": "What is the API endpoint for a list of all currently available card images by name?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3423449867650081,
                "back_trans_input": "Task: What is the API endpoint for a list of all currently available card images by name?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** It may not always be possible to generate exact matches between your answers and our answers due to",
                "back_trans_input_tokens_mean": -2.262451858105867
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find the name of every card in a specific set."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/stages/%7Bstage%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/stages/{stage}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Show all the rare cards currently in the database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.78946533203125,
                "back_trans_input": "Task: Show all the rare cards currently in the database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n\n## Input Format\n\n```json\n{\n    \"endpoint_id\": \"string\",\n    ",
                "back_trans_input_tokens_mean": -2.339223755730523
            },
            {
                "idx": 2,
                "candidate": "Find the number of cards in a Magic set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1202064860950818,
                "back_trans_input": "Task: Find the number of cards in a Magic set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2\n\n * You are given some sample data from a JSON file that has been downloaded from",
                "back_trans_input_tokens_mean": -2.291234440273709
            },
            {
                "idx": 3,
                "candidate": "How to find out if a specific card will ever be printed?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7316837310791016,
                "back_trans_input": "Task: How to find out if a specific card will ever be printed?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Re-generate a non-existent endpoint from scratch\n\nYou are supposed to create",
                "back_trans_input_tokens_mean": -2.345932659802136
            },
            {
                "idx": 4,
                "candidate": "What does an object 'TCGdex API' look like?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6023718436559042,
                "back_trans_input": "Task: What does an object &#x27;TCGdex API&#x27; look like?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Examples\n\n ```javascript\n // Example 1\n  \"api\": {\n    \"name\": ",
                "back_trans_input_tokens_mean": -2.225752393738562
            },
            {
                "idx": 5,
                "candidate": "if I was writing an app how would I use the TCGdex API to lookup specific card",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6481504386121577,
                "back_trans_input": "Task: if I was writing an app how would I use the TCGdex API to lookup specific card\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** Please make sure that your answer does not contain any sensitive information like passwords or keys.",
                "back_trans_input_tokens_mean": -2.4080129397117487
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find the number of cards in a Magic set."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/stages/%7Bstage%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/stages/{stage}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find all the cards used in a list.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6729843139648437,
                "back_trans_input": "Task: find all the cards used in a list.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n### Expected Output\n\n```json\n{\n  \"identifier\": \"https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.369719068580699
            },
            {
                "idx": 2,
                "candidate": "Find a specific card in the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6081384328695444,
                "back_trans_input": "Task: Find a specific card in the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** You can use the API Explorer in Postman to find out more about an endpoint.",
                "back_trans_input_tokens_mean": -2.1835328275507147
            },
            {
                "idx": 3,
                "candidate": "Find the name of a particular card.?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0664315700531006,
                "back_trans_input": "Task: Find the name of a particular card.?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **3.1**\n\n```\nhttps://api.",
                "back_trans_input_tokens_mean": -2.389481490513064
            },
            {
                "idx": 4,
                "candidate": "What is the full card name for a certain card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3361104329427083,
                "back_trans_input": "Task: What is the full card name for a certain card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n* `GET https://api.tcgplayer.",
                "back_trans_input_tokens_mean": -2.3452848731924636
            },
            {
                "idx": 5,
                "candidate": "find cards from the tcgdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1837360461552937,
                "back_trans_input": "Task: find cards from the tcgdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [← Back to main README](..",
                "back_trans_input_tokens_mean": -2.3340058596629016
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find a specific card in the TCGdex database."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/suffixes",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/suffixes",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find cards from a set.nShow me all the cards in a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9193778991699219,
                "back_trans_input": "Task: Find cards from a set.nShow me all the cards in a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Create a card.",
                "back_trans_input_tokens_mean": -2.4258093917578982
            },
            {
                "idx": 2,
                "candidate": "Create a database of card lists. I want to know how to query the TCGdex API for",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2981768358837475,
                "back_trans_input": "Task: Create a database of card lists. I want to know how to query the TCGdex API for\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** The answer can be found in the documentation here https://docs.",
                "back_trans_input_tokens_mean": -2.412368870582901
            },
            {
                "idx": 3,
                "candidate": "Find all cards in a set.? I am looking for the API that can do this, name of",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3500343669544568,
                "back_trans_input": "Task: Find all cards in a set.? I am looking for the API that can do this, name of\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Example Response from a Valid Submission\n\n```json\n{\n    \"endpoint\": \"https://tc",
                "back_trans_input_tokens_mean": -2.556110479063907
            },
            {
                "idx": 4,
                "candidate": "List the most recent releases for a given TCG.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7148045202096303,
                "back_trans_input": "Task: List the most recent releases for a given TCG.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"id\": \"list_tcg\",\n  \"functionality\": ",
                "back_trans_input_tokens_mean": -2.3215637557003475
            },
            {
                "idx": 5,
                "candidate": "what are some good websites that have magic the gathering card data",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9676038301908052,
                "back_trans_input": "Task: what are some good websites that have magic the gathering card data\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solution\n\nThe solution can be found in the directory with the same name as your username under the",
                "back_trans_input_tokens_mean": -2.4408851276744494
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find cards from a set.nShow me all the cards in a set."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/suffixes\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/suffixes",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the name of a card.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6344917037270286,
                "back_trans_input": "Task: Find the name of a card.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"name\": \"card\",\n  \"description\": \"Retrieve information",
                "back_trans_input_tokens_mean": -2.3740154842160783
            },
            {
                "idx": 2,
                "candidate": "i like to know the value of an old card, what is the most reliable source?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7537938168174343,
                "back_trans_input": "Task: i like to know the value of an old card, what is the most reliable source?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint\n```json\n{\n  \"id\": \"get_card\",\n  \"function",
                "back_trans_input_tokens_mean": -2.4074308790009598
            },
            {
                "idx": 3,
                "candidate": "Find all cards that have the text \"Turbine\".",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5739084879557292,
                "back_trans_input": "Task: Find all cards that have the text &quot;Turbine&quot;.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<details>\n  <summary><b>Click here for the solution</b></summary>\n    <",
                "back_trans_input_tokens_mean": -2.313510762090268
            },
            {
                "idx": 4,
                "candidate": "What API will return information on a card from TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5473453680674234,
                "back_trans_input": "Task: What API will return information on a card from TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n## Exercise 2c)\n\nIn order to complete this exercise, you need to have",
                "back_trans_input_tokens_mean": -2.3204495906829834
            },
            {
                "idx": 5,
                "candidate": "What is the api to view the TCGdex for a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1790426618912642,
                "back_trans_input": "Task: What is the api to view the TCGdex for a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nAnswer:\n\n```javascript {src=api/TCGdex_viewer}\n",
                "back_trans_input_tokens_mean": -2.3278039915371784
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find the name of a card.n"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/suffixes'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/suffixes",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "show cards of TCGdex.com?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8070343732833862,
                "back_trans_input": "Task: show cards of TCGdex.com?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Generate new Endpoint ID using a random number generator between 0 and 99999",
                "back_trans_input_tokens_mean": -2.402792224177608
            },
            {
                "idx": 2,
                "candidate": "How can I view the TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3576151847839355,
                "back_trans_input": "Task: How can I view the TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: How can I get all the orders from my account that are in progress?",
                "back_trans_input_tokens_mean": -2.329966810014513
            },
            {
                "idx": 3,
                "candidate": "What is the best API to use for putting together database tables from information about magic cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.058908562911184,
                "back_trans_input": "Task: What is the best API to use for putting together database tables from information about magic cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 3.1\n\nThe following are some endpoints that were generated using this tool and their corresponding",
                "back_trans_input_tokens_mean": -2.4346710402390053
            },
            {
                "idx": 4,
                "candidate": "show the list of all cards with text on them.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9393407648259944,
                "back_trans_input": "Task: show the list of all cards with text on them.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## Question: \n\nWhat are the names of the following endpoints?",
                "back_trans_input_tokens_mean": -2.3693164860436675
            },
            {
                "idx": 5,
                "candidate": "acls on an index. How do you call the API using this endpoint?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.117118072509766,
                "back_trans_input": "Task: acls on an index. How do you call the API using this endpoint?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## <a name=\"task2\"></a>Task 2: `/api",
                "back_trans_input_tokens_mean": -2.5061311889113043
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "How can I view the TCGdex?"
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/suffixes\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/suffixes",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Get all the cards in a specific set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9823150634765625,
                "back_trans_input": "Task: Get all the cards in a specific set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** This challenge was created by me but I borrowed some ideas from other challenges on HackerRank",
                "back_trans_input_tokens_mean": -2.2573062861077138
            },
            {
                "idx": 2,
                "candidate": "what is the URL for tcgdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.979127566019694,
                "back_trans_input": "Task: what is the URL for tcgdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n```\nhttps://api.thecatgeek.",
                "back_trans_input_tokens_mean": -2.3049602686801802
            },
            {
                "idx": 3,
                "candidate": "Search for a list of cards on TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1614174659435565,
                "back_trans_input": "Task: Search for a list of cards on TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n##### Input:\n```json\n{\n  \"endpoint\": \"/cards\",\n  \"identifier\":",
                "back_trans_input_tokens_mean": -2.223796645077792
            },
            {
                "idx": 4,
                "candidate": "Find the set number of a CCG card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.422475121238015,
                "back_trans_input": "Task: Find the set number of a CCG card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"id\": \"find_card\",\n  \"functionality\": \"",
                "back_trans_input_tokens_mean": -2.3937566898487233
            },
            {
                "idx": 5,
                "candidate": "how can i get info on the cards in my deck?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3791451087364783,
                "back_trans_input": "Task: how can i get info on the cards in my deck?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Solution\n\nIn order to solve this challenge we need to use our knowledge about endpoints from previous challenges",
                "back_trans_input_tokens_mean": -2.3827811848033558
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Get all the cards in a specific set."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/suffixes\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/suffixes",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What are some good examples of using the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7997042792184013,
                "back_trans_input": "Task: What are some good examples of using the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Endpoint\n\nThe first step in solving this challenge is to identify the endpoint, as that provides",
                "back_trans_input_tokens_mean": -2.255685235772814
            },
            {
                "idx": 2,
                "candidate": "How to fetch all of the cards in a deck using TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0478356811735365,
                "back_trans_input": "Task: How to fetch all of the cards in a deck using TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\n  const axios = require('axios')\n\n  let response = await axios",
                "back_trans_input_tokens_mean": -2.242197683583135
            },
            {
                "idx": 3,
                "candidate": "Find a specific card in the database of cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.189177079634233,
                "back_trans_input": "Task: Find a specific card in the database of cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n##### Task\n\n> A user wants to find all their cards that are named \"Mewtwo",
                "back_trans_input_tokens_mean": -2.277988327874078
            },
            {
                "idx": 4,
                "candidate": "Find the name of every card. Use \"TCGdex API\".",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1746829986572265,
                "back_trans_input": "Task: Find the name of every card. Use &quot;TCGdex API&quot;.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nTask: Find the number of cards that are from a particular set.",
                "back_trans_input_tokens_mean": -2.2844464576850503
            },
            {
                "idx": 5,
                "candidate": "What API do I use to get the card stats for a specific card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9797788507798139,
                "back_trans_input": "Task: What API do I use to get the card stats for a specific card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```bash\ncurl \"https://api.",
                "back_trans_input_tokens_mean": -2.2499516242373305
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "What are some good examples of using the TCGdex API?"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/suffixes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/suffixes",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "what are all of the codes for cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6099645441228694,
                "back_trans_input": "Task: what are all of the codes for cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** you can use this code for reference but please do not copy it! \n\n```javascript\n",
                "back_trans_input_tokens_mean": -2.3549489885847144
            },
            {
                "idx": 2,
                "candidate": "What is a good way to see prices for cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.545620600382487,
                "back_trans_input": "Task: What is a good way to see prices for cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n\n\n# Endpoint Generation\n\nThe following code snippet shows how endpoints can be generated using the `",
                "back_trans_input_tokens_mean": -2.3827343512018886
            },
            {
                "idx": 3,
                "candidate": "find all possible cards in the game tcgdex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3129913466317313,
                "back_trans_input": "Task: find all possible cards in the game tcgdex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nTask: get card by id from tcgdex api\n\nFunctionality: \nDescription:",
                "back_trans_input_tokens_mean": -2.3929372716833046
            },
            {
                "idx": 4,
                "candidate": "What is the full name of the API that has a query endpoint for MTG cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1240247726440429,
                "back_trans_input": "Task: What is the full name of the API that has a query endpoint for MTG cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"endpoint\": \"api/v1/cards\",\n  \"identifier\":",
                "back_trans_input_tokens_mean": -2.2872095108032227
            },
            {
                "idx": 5,
                "candidate": "Find all Magic the Gathering cards. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6826736032962799,
                "back_trans_input": "Task: Find all Magic the Gathering cards. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task\nFind all Magic the Gathering cards.",
                "back_trans_input_tokens_mean": -2.2623682781658343
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find all Magic the Gathering cards. Use the TCGdex API."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/suffixes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/suffixes",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "search for cards on the tcgdex site",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1551590699415941,
                "back_trans_input": "Task: search for cards on the tcgdex site\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You can find the endpoint in your browser when you go to this card page https://tc",
                "back_trans_input_tokens_mean": -2.333099730660982
            },
            {
                "idx": 2,
                "candidate": "What is the API's endpoint for searching by color?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5050919972933257,
                "back_trans_input": "Task: What is the API&#x27;s endpoint for searching by color?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## Example\n\n![image](https://user-images.",
                "back_trans_input_tokens_mean": -2.307838564425443
            },
            {
                "idx": 3,
                "candidate": "To search TCGdex I need to specify an API name.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.063671043940953,
                "back_trans_input": "Task: To search TCGdex I need to specify an API name.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2.5.1. **The Endpoint Id**\n\nThe endpoint id is",
                "back_trans_input_tokens_mean": -2.358673019068582
            },
            {
                "idx": 4,
                "candidate": "Find the value of a certain card.r",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0475025177001953,
                "back_trans_input": "Task: Find the value of a certain card.r\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Solution\n\n```javascript\nconst findCardById = async (id) ",
                "back_trans_input_tokens_mean": -2.4124982134204043
            },
            {
                "idx": 5,
                "candidate": "show all of a players cards on TCGdex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6905699784939106,
                "back_trans_input": "Task: show all of a players cards on TCGdex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## 2. **Create a new file called endpoints/index.",
                "back_trans_input_tokens_mean": -2.358401770985455
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find the value of a certain card.r"
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/suffixes\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/suffixes",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is the API for TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6920058012008667,
                "back_trans_input": "Task: What is the API for TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n```javascript\n{\n    \"endpoint\": \"TCGdex\",\n    \"identifier\":",
                "back_trans_input_tokens_mean": -2.179433341379519
            },
            {
                "idx": 2,
                "candidate": "What is the API to look up information on a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8809268657977765,
                "back_trans_input": "Task: What is the API to look up information on a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n## [Previous section](.",
                "back_trans_input_tokens_mean": -2.2339027057994496
            },
            {
                "idx": 3,
                "candidate": "Show a list of all cards in the \"Magic\" genre.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4327972412109375,
                "back_trans_input": "Task: Show a list of all cards in the &quot;Magic&quot; genre.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n</div>\n<br><br><br><br><br>\n\n<center><button class",
                "back_trans_input_tokens_mean": -2.2777651096212455
            },
            {
                "idx": 4,
                "candidate": "Add a card from MTG to the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9517471551895141,
                "back_trans_input": "Task: Add a card from MTG to the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nSample Response: \n\n```json\n{\n\t\"id\": \"7f9a2c",
                "back_trans_input_tokens_mean": -2.253608754702977
            },
            {
                "idx": 5,
                "candidate": "Describe all cards in the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1526932174509221,
                "back_trans_input": "Task: Describe all cards in the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"endpoint\": \"/cards\",\n  \"functionality\": \"describe all",
                "back_trans_input_tokens_mean": -2.2411110312850386
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "What is the API for TCGdex?"
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/suffixes/%7Bsuffix%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/suffixes/{suffix}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Query data of the TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6154125061902134,
                "back_trans_input": "Task: Query data of the TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"id\": \"6f9a1c0e-6b",
                "back_trans_input_tokens_mean": -2.277821478442611
            },
            {
                "idx": 2,
                "candidate": "Find a card's name.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7911784107034857,
                "back_trans_input": "Task: Find a card&#x27;s name.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nYou are not allowed to use the endpoints in this file as they may change without notice.",
                "back_trans_input_tokens_mean": -2.416467194163471
            },
            {
                "idx": 3,
                "candidate": "how do i use the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.724136213461558,
                "back_trans_input": "Task: how do i use the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n\nExample Solution:\n\n```javascript\nmodule.",
                "back_trans_input_tokens_mean": -2.2620198311062034
            },
            {
                "idx": 4,
                "candidate": "find the list of cards for an mtg set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2666407365065355,
                "back_trans_input": "Task: find the list of cards for an mtg set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Example\n\nFor example, let's say we had the following information about our endpoint:\n",
                "back_trans_input_tokens_mean": -2.386048938156268
            },
            {
                "idx": 5,
                "candidate": "What is the API to lookup a card in Magic: The Gathering?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8935987879248226,
                "back_trans_input": "Task: What is the API to lookup a card in Magic: The Gathering?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hints:\n* The endpoint can be found at https://tcg-api.",
                "back_trans_input_tokens_mean": -2.2606278487614224
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "how do i use the TCGdex API?"
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/suffixes/%7Bsuffix%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/suffixes/{suffix}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How can you find the names of Magic: The Gathering cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3051539659500122,
                "back_trans_input": "Task: How can you find the names of Magic: The Gathering cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2.1.1.2\n\nYou have been tasked with finding information about Magic:",
                "back_trans_input_tokens_mean": -2.248296479921083
            },
            {
                "idx": 2,
                "candidate": "find a card from TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3157629370689392,
                "back_trans_input": "Task: find a card from TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n---\n\n## ://tcg.apiary.",
                "back_trans_input_tokens_mean": -2.241429409134054
            },
            {
                "idx": 3,
                "candidate": "Use TCGdex API to show my own cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7960256040096283,
                "back_trans_input": "Task: Use TCGdex API to show my own cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\n{\n  \"endpoint_id\": \"b4f0e6a3-",
                "back_trans_input_tokens_mean": -2.3461265563964844
            },
            {
                "idx": 4,
                "candidate": "Search for the prices of a specific card in various stores online.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6985299246651786,
                "back_trans_input": "Task: Search for the prices of a specific card in various stores online.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Input\n\nThe input consists of one line containing four space-separated integers n (1",
                "back_trans_input_tokens_mean": -2.335658683433189
            },
            {
                "idx": 5,
                "candidate": "What is the API endpoint to get a list of all cards that have any legal abilities associated with them",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4118407856334338,
                "back_trans_input": "Task: What is the API endpoint to get a list of all cards that have any legal abilities associated with them\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n(https://github.com/TCGplayer/tcgdx-docs)",
                "back_trans_input_tokens_mean": -2.357823161755578
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "How can you find the names of Magic: The Gathering cards?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.tcgdex.net/v2/%7Blang%7D/suffixes/%7Bsuffix%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/suffixes/{suffix}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "how to find out the cost of a card",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.455103787508878,
                "back_trans_input": "Task: how to find out the cost of a card\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\n{\n  \"name\": \"getCardCost\",\n  \"description\": \"Get",
                "back_trans_input_tokens_mean": -2.3531923739709586
            },
            {
                "idx": 2,
                "candidate": "What are the names of all Magic the Gathering cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8840806682904562,
                "back_trans_input": "Task: What are the names of all Magic the Gathering cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<details>\n  <summary>Click here for the solution</summary>\n    <ul>\n      <",
                "back_trans_input_tokens_mean": -2.226434795134658
            },
            {
                "idx": 3,
                "candidate": "What is the best way to find information about a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9706106919508714,
                "back_trans_input": "Task: What is the best way to find information about a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** Use the developer tools in your browser to inspect the HTML on the page that contains the endpoints",
                "back_trans_input_tokens_mean": -2.273744097622958
            },
            {
                "idx": 4,
                "candidate": "Find all cards in a set. How can I use the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8896512608779105,
                "back_trans_input": "Task: Find all cards in a set. How can I use the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The solution should not require any extra dependencies, it must only rely on the standard library.",
                "back_trans_input_tokens_mean": -2.31924006034588
            },
            {
                "idx": 5,
                "candidate": "Show all cards in the TCGdex website.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2871289469979026,
                "back_trans_input": "Task: Show all cards in the TCGdex website.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Generate Endpoint\n\nIn your code editor or IDE, create a new file called",
                "back_trans_input_tokens_mean": -2.2813584388942894
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "What are the names of all Magic the Gathering cards?"
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/suffixes/%7Bsuffix%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/suffixes/{suffix}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "show me all the cards in a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.015191650390625,
                "back_trans_input": "Task: show me all the cards in a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> Hint: The word \"card\" appears twice on the page you are looking at!",
                "back_trans_input_tokens_mean": -2.3391614183087217
            },
            {
                "idx": 2,
                "candidate": "Find all rares. Using TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.171926159125108,
                "back_trans_input": "Task: Find all rares. Using TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"name\": \"api\",\n    \"version\": \"1.",
                "back_trans_input_tokens_mean": -2.4043138836501936
            },
            {
                "idx": 3,
                "candidate": "find cards from a set. Name the API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2405506480823865,
                "back_trans_input": "Task: find cards from a set. Name the API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nFunctionality: Find Cards From Set\nDescription: Returns all Card objects that are part of the specified set",
                "back_trans_input_tokens_mean": -2.4263575871785483
            },
            {
                "idx": 4,
                "candidate": "Query all cards in the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.04493048787117,
                "back_trans_input": "Task: Query all cards in the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nThe following are some tips to help you write your code.",
                "back_trans_input_tokens_mean": -2.240529690313777
            },
            {
                "idx": 5,
                "candidate": "What is the name of the API in order to query what cards are rare in a deck?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6124109268188476,
                "back_trans_input": "Task: What is the name of the API in order to query what cards are rare in a deck?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nExpected Output:\n\nName of the API: tcg\nIdentifier of the endpoint: get_",
                "back_trans_input_tokens_mean": -2.303533929026025
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Query all cards in the TCGdex database."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/suffixes/%7Bsuffix%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/suffixes/{suffix}",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the card names for a list of cards from my game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7905818394252233,
                "back_trans_input": "Task: Find the card names for a list of cards from my game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## **5.**\n\nYou have been asked to create a new endpoint for your application",
                "back_trans_input_tokens_mean": -2.338759929210216
            },
            {
                "idx": 2,
                "candidate": "Find the number of cards in a deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8408561706542969,
                "back_trans_input": "Task: Find the number of cards in a deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**NOTE:** The endpoint should not contain the word `endpoint`.",
                "back_trans_input_tokens_mean": -2.248255399900062
            },
            {
                "idx": 3,
                "candidate": "Find all the cards that have been played to 50 life.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9479471842447917,
                "back_trans_input": "Task: Find all the cards that have been played to 50 life.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"name\": \"cards\",\n    \"endpoint\": \"/v1/",
                "back_trans_input_tokens_mean": -2.411652333027608
            },
            {
                "idx": 4,
                "candidate": "Get the latest version number of TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1821162601312,
                "back_trans_input": "Task: Get the latest version number of TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"endpoint\": \"latestVersion\",\n    \"identifier\": \"1a",
                "back_trans_input_tokens_mean": -2.204332451386885
            },
            {
                "idx": 5,
                "candidate": "How to retrieve all card names that have a keyword or an effect in the TCG Dex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.014160230046227,
                "back_trans_input": "Task: How to retrieve all card names that have a keyword or an effect in the TCG Dex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Answer:** \n\n```json title=\"Output\"\n{\n  \"cards\": [\n    {\n      ",
                "back_trans_input_tokens_mean": -2.4128304179917035
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find the number of cards in a deck."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/suffixes/%7Bsuffix%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/suffixes/{suffix}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the name of a card in a database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7818175951639811,
                "back_trans_input": "Task: Find the name of a card in a database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** The endpoints are located at https://github.",
                "back_trans_input_tokens_mean": -2.265935085437916
            },
            {
                "idx": 2,
                "candidate": "Find all cards in the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6157450784336437,
                "back_trans_input": "Task: Find all cards in the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Get information about an individual card from the TCGdex database.",
                "back_trans_input_tokens_mean": -2.202457699206991
            },
            {
                "idx": 3,
                "candidate": "Find all of the cards currently in a deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2329580133611506,
                "back_trans_input": "Task: Find all of the cards currently in a deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://docs.google.com/document/d/1_0K5y7B",
                "back_trans_input_tokens_mean": -2.290405379401313
            },
            {
                "idx": 4,
                "candidate": "Add a card to the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5262384116649628,
                "back_trans_input": "Task: Add a card to the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Notes on Endpoints, Identifiers, APIs, and Functions\n\nA function is what the code",
                "back_trans_input_tokens_mean": -2.184788660171929
            },
            {
                "idx": 5,
                "candidate": "Search for the rarest cards. I want to know which card are they and how many copies does it",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9777443625710227,
                "back_trans_input": "Task: Search for the rarest cards. I want to know which card are they and how many copies does it\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **Task 2:** (Easy)\n\nTask: Search for all of the cards",
                "back_trans_input_tokens_mean": -2.450299078676881
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Add a card to the TCGdex API."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/suffixes/%7Bsuffix%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/suffixes/{suffix}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What API would I use to fetch the database of card images?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7485022911658654,
                "back_trans_input": "Task: What API would I use to fetch the database of card images?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nTask: What API would I use to get all cards associated with a specific set?",
                "back_trans_input_tokens_mean": -2.360095909049919
            },
            {
                "idx": 2,
                "candidate": "How do I use the \"TCGdex API\" to get a list of cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8488605558872223,
                "back_trans_input": "Task: How do I use the &quot;TCGdex API&quot; to get a list of cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: How do I use the &quot;TCGplayer API&quot;",
                "back_trans_input_tokens_mean": -2.1561842590081888
            },
            {
                "idx": 3,
                "candidate": "Add a deck to the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.91593004266421,
                "back_trans_input": "Task: Add a deck to the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2\n\nThis time your job is to create all three endpoints in one file as well",
                "back_trans_input_tokens_mean": -2.229347290249046
            },
            {
                "idx": 4,
                "candidate": "Find cards in a certain set. What API should I use?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0881211417061942,
                "back_trans_input": "Task: Find cards in a certain set. What API should I use?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task\nFind all the cards that have \"blue\" as one of their colors\n### Function",
                "back_trans_input_tokens_mean": -2.386337933239636
            },
            {
                "idx": 5,
                "candidate": "what database does TCGdex use? is it a proprietary database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5107088759541512,
                "back_trans_input": "Task: what database does TCGdex use? is it a proprietary database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# --hints--\n\n`euler404()` should return the list of endpoints with their",
                "back_trans_input_tokens_mean": -2.3471525411690233
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "How do I use the \"TCGdex API\" to get a list of cards?"
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/suffixes/%7Bsuffix%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/suffixes/{suffix}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Add a new card for the website TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4322791610445296,
                "back_trans_input": "Task: Add a new card for the website TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You must use the official website as your reference point when completing these tasks.",
                "back_trans_input_tokens_mean": -2.2998992602030435
            },
            {
                "idx": 2,
                "candidate": "What API's allow me to pull card information in TCG?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.135192837033953,
                "back_trans_input": "Task: What API&#x27;s allow me to pull card information in TCG?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n\n\n## 2. Card Information\n\nIn order to complete this challenge, you need to find out",
                "back_trans_input_tokens_mean": -2.444923085751741
            },
            {
                "idx": 3,
                "candidate": "Use the TCGdex API to find all cards of a certain rarity.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7622881001896329,
                "back_trans_input": "Task: Use the TCGdex API to find all cards of a certain rarity.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## [Previous section](https://github.",
                "back_trans_input_tokens_mean": -2.195511717545359
            },
            {
                "idx": 4,
                "candidate": "How to look up a card by its rarity",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6530085802078247,
                "back_trans_input": "Task: How to look up a card by its rarity\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** This question was originally published on [LeetCode](https://leetcode.",
                "back_trans_input_tokens_mean": -2.3727782418794723
            },
            {
                "idx": 5,
                "candidate": "How do you use the TCGdex API to view card details and stats?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2104787230491638,
                "back_trans_input": "Task: How do you use the TCGdex API to view card details and stats?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v3\n\n## Task\n\nYou have been tasked with adding new endpoints to an existing API.",
                "back_trans_input_tokens_mean": -2.2659609670224397
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Use the TCGdex API to find all cards of a certain rarity."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/trainer-types",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/trainer-types",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Detect the number of cards in a specific collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5648059844970703,
                "back_trans_input": "Task: Detect the number of cards in a specific collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Get information about all collections on the platform.",
                "back_trans_input_tokens_mean": -2.314313429373282
            },
            {
                "idx": 2,
                "candidate": "What are some of the major card game database APIs?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.602431297302246,
                "back_trans_input": "Task: What are some of the major card game database APIs?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"id\": \"/v2/cards\",\n  \"functionality\": ",
                "back_trans_input_tokens_mean": -2.3847748992639946
            },
            {
                "idx": 3,
                "candidate": "Search for card text. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1333198547363281,
                "back_trans_input": "Task: Search for card text. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n> ℹ️ **NOTE:** If you are using `fetch`, please make sure",
                "back_trans_input_tokens_mean": -2.327081992409446
            },
            {
                "idx": 4,
                "candidate": "Find a specific card in the database. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6817759200930595,
                "back_trans_input": "Task: Find a specific card in the database. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task:\n- Generate and return endpoint's identifier\n- Generate and return endpoint's functionality",
                "back_trans_input_tokens_mean": -2.287623498292096
            },
            {
                "idx": 5,
                "candidate": "How would you use the TCGdex API to get a list of all cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8089398961318167,
                "back_trans_input": "Task: How would you use the TCGdex API to get a list of all cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## 2. Endpoint URL\nYou are provided with an endpoint ID for one of the endpoints in",
                "back_trans_input_tokens_mean": -2.1547799809225676
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "How would you use the TCGdex API to get a list of all cards?"
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/trainer-types\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/trainer-types",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the card text for a specific card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.073382568359375,
                "back_trans_input": "Task: Find the card text for a specific card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Expected Output\n\nOutput should look like below example output file in this directory named as \n\n```\n",
                "back_trans_input_tokens_mean": -2.257671131151859
            },
            {
                "idx": 2,
                "candidate": "How do I use the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5424866242842241,
                "back_trans_input": "Task: How do I use the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoint functionality may not always match with the function of the endpoint.",
                "back_trans_input_tokens_mean": -2.194179681462979
            },
            {
                "idx": 3,
                "candidate": "show me all the cards in my deck.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1125564575195312,
                "back_trans_input": "Task: show me all the cards in my deck.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n--- \n\nYou can view your current progress on [this page](https://docs.",
                "back_trans_input_tokens_mean": -2.412786578690564
            },
            {
                "idx": 4,
                "candidate": "Find all the Magic: The Gathering cards in the database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8654769383943998,
                "back_trans_input": "Task: Find all the Magic: The Gathering cards in the database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Notes on Endpoint Generation\n\nThe goal here is to generate endpoints that are intuitive from their identifiers",
                "back_trans_input_tokens_mean": -2.2440597079016946
            },
            {
                "idx": 5,
                "candidate": "Find all the card names and rarities for a particular card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.216977800641741,
                "back_trans_input": "Task: Find all the card names and rarities for a particular card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n### Example\n\n```javascript\n// 1st line must contain a string with your first and last name",
                "back_trans_input_tokens_mean": -2.300483446036066
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "How do I use the TCGdex API?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/trainer-types'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/trainer-types",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all cards that have been reprinted.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.93603515625,
                "back_trans_input": "Task: Find all cards that have been reprinted.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n> ⚠️ This challenge uses the same data as Challenge 1.",
                "back_trans_input_tokens_mean": -2.3194099742675496
            },
            {
                "idx": 2,
                "candidate": "How I can list all TCGdex card names?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.906745155652364,
                "back_trans_input": "Task: How I can list all TCGdex card names?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nAnswer: List<String> getCardNames()\n\n",
                "back_trans_input_tokens_mean": -2.3913245526227085
            },
            {
                "idx": 3,
                "candidate": "What is the official wiki for Magic: The Gathering?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0960498314637404,
                "back_trans_input": "Task: What is the official wiki for Magic: The Gathering?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://github.com/tristanrandy/MagicAPI](https://github.",
                "back_trans_input_tokens_mean": -2.3061464882771903
            },
            {
                "idx": 4,
                "candidate": "Find the name of an MTG card. You can include any extra info you want to make it easier for",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.589116183194247,
                "back_trans_input": "Task: Find the name of an MTG card. You can include any extra info you want to make it easier for\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n##### Input Format\n\nThe first line contains three integers N (the number of endpoints), M",
                "back_trans_input_tokens_mean": -2.3900388300418856
            },
            {
                "idx": 5,
                "candidate": "Find the value of cards.? I want to search for values of collectible card games (CCGs",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.429239879954945,
                "back_trans_input": "Task: Find the value of cards.? I want to search for values of collectible card games (CCGs\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"cards\": [\n    {\n      \"name\": \"Black Lotus\",",
                "back_trans_input_tokens_mean": -2.5208786615804466
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find all cards that have been reprinted."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/trainer-types\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/trainer-types",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "how can i search cards through the api",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.0872976129705254,
                "back_trans_input": "Task: how can i search cards through the api\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input Format\n\nThe first line contains one integer T denoting the number of tasks.",
                "back_trans_input_tokens_mean": -2.472794179646474
            },
            {
                "idx": 2,
                "candidate": "Show all the cards that are legal in MTG lords of the realms.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4457686574835527,
                "back_trans_input": "Task: Show all the cards that are legal in MTG lords of the realms.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2\n\n\n**Endpoints**:\n<br>\n* GET /api/",
                "back_trans_input_tokens_mean": -2.474141709572446
            },
            {
                "idx": 3,
                "candidate": "What is the api name for looking up card info?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2405726114908855,
                "back_trans_input": "Task: What is the api name for looking up card info?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n<!-- <div class=\"solution\">\n\nThe answer would be lookupCardInfo.",
                "back_trans_input_tokens_mean": -2.363165993209279
            },
            {
                "idx": 4,
                "candidate": "Find the prices of all TCG cards. Name the API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2190447954031138,
                "back_trans_input": "Task: Find the prices of all TCG cards. Name the API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You must use this format as it allows us to automatically test your solution.",
                "back_trans_input_tokens_mean": -2.343438111983978
            },
            {
                "idx": 5,
                "candidate": "What is a list of all the card names in the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7772464818424649,
                "back_trans_input": "Task: What is a list of all the card names in the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Please note that when you submit your answer, make sure it matches exactly with what I have provided.**",
                "back_trans_input_tokens_mean": -2.163334201729816
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "What is a list of all the card names in the TCGdex API?"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/trainer-types\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/trainer-types",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all cards of the given card. Name this API's endpoint.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5750441551208496,
                "back_trans_input": "Task: Find all cards of the given card. Name this API&#x27;s endpoint.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## -->\n```json\n{\n  \"endpoint\": \"/api/v1/cards/{",
                "back_trans_input_tokens_mean": -2.4144429256176125
            },
            {
                "idx": 2,
                "candidate": "Write a script to download all the data from TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9487685412168503,
                "back_trans_input": "Task: Write a script to download all the data from TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n*Note, in order to access the endpoints in question, please use your own account's authentication key",
                "back_trans_input_tokens_mean": -2.1952257304064995
            },
            {
                "idx": 3,
                "candidate": "Find the price of a card. Item = TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1867835872313555,
                "back_trans_input": "Task: Find the price of a card. Item = TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nInput: You are given a file called endpoints_task1.",
                "back_trans_input_tokens_mean": -2.318758846384234
            },
            {
                "idx": 4,
                "candidate": "a list of cards with the most copies.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.085833740234375,
                "back_trans_input": "Task: a list of cards with the most copies.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 8. You are required to write all endpoints in JavaScript.",
                "back_trans_input_tokens_mean": -2.3925427677475404
            },
            {
                "idx": 5,
                "candidate": "How can I get cards from TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0246735486117275,
                "back_trans_input": "Task: How can I get cards from TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n# <a name=\"Task2\"></a> Task 2: Create a new endpoint",
                "back_trans_input_tokens_mean": -2.252521328969833
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Write a script to download all the data from TCGdex API."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/trainer-types\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/trainer-types",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the name of a card from another table.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.282698848030784,
                "back_trans_input": "Task: Find the name of a card from another table.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n### Task 2\n\nTask: Look up cards by their names in our database.",
                "back_trans_input_tokens_mean": -2.330884756865325
            },
            {
                "idx": 2,
                "candidate": "Find the name of any card. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8603315949440002,
                "back_trans_input": "Task: Find the name of any card. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint\n\nhttps://tcgplayer-api.",
                "back_trans_input_tokens_mean": -2.3044288839612688
            },
            {
                "idx": 3,
                "candidate": "How can we search for cards by their art type?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.3320978338068183,
                "back_trans_input": "Task: How can we search for cards by their art type?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Endpoint from a URL\n\nIn some cases, we might have access to the",
                "back_trans_input_tokens_mean": -2.3408537348476024
            },
            {
                "idx": 4,
                "candidate": "Find all of the cards in TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8752971020611849,
                "back_trans_input": "Task: Find all of the cards in TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## `TCGdex/Cards`\n\n```json5\n{\n  \"",
                "back_trans_input_tokens_mean": -2.208689295917476
            },
            {
                "idx": 5,
                "candidate": "Add card info from a file to the API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.75543212890625,
                "back_trans_input": "Task: Add card info from a file to the API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **2. Create a new folder named \"task1_solution\".",
                "back_trans_input_tokens_mean": -2.426275924400047
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find all of the cards in TCGdex."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/trainer-types\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/trainer-types",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find the value of a rare card.?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0895500183105469,
                "back_trans_input": "Task: find the value of a rare card.?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v2\n\n\n## [Section](/docs/judge0/)\n\n",
                "back_trans_input_tokens_mean": -2.4106488857629165
            },
            {
                "idx": 2,
                "candidate": "find all the card i need information with this api",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.4550706423245945,
                "back_trans_input": "Task: find all the card i need information with this api\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2.3 Task\n\nYou are provided the following information about your endpoints.",
                "back_trans_input_tokens_mean": -2.5539845007437245
            },
            {
                "idx": 3,
                "candidate": "Add a new card to the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6550360918045044,
                "back_trans_input": "Task: Add a new card to the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n\n\n\n\n\n\n\nhttps://github.com/TheAlgorithms/Go/blob/master/code_",
                "back_trans_input_tokens_mean": -2.2123418510507005
            },
            {
                "idx": 4,
                "candidate": "Find a list of cards for the collectible card game, TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9464041392008463,
                "back_trans_input": "Task: Find a list of cards for the collectible card game, TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **2. Endpoint** \n\n### **2.",
                "back_trans_input_tokens_mean": -2.2183566549549933
            },
            {
                "idx": 5,
                "candidate": "Find all the cards in a deck with specific stats such as cost, rarity and abilities.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3483429863339378,
                "back_trans_input": "Task: Find all the cards in a deck with specific stats such as cost, rarity and abilities.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Instructions\n1. Open index.js file inside src folder.",
                "back_trans_input_tokens_mean": -2.3515358300044618
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Add a new card to the TCGdex."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/trainer-types\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/trainer-types",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "what is the api for an indexing system?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8651566938920454,
                "back_trans_input": "Task: what is the api for an indexing system?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How the task works.\n\nThe task provides your with the following information about each endpoint in each",
                "back_trans_input_tokens_mean": -2.4447317034284644
            },
            {
                "idx": 2,
                "candidate": "Create a list of cards from a TCG.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.183206448952357,
                "back_trans_input": "Task: Create a list of cards from a TCG.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Please note that some endpoints are not available in TCGdex yet.",
                "back_trans_input_tokens_mean": -2.2839142481486
            },
            {
                "idx": 3,
                "candidate": "Find a set of cards. Use TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9998881220817566,
                "back_trans_input": "Task: Find a set of cards. Use TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Instructions\n\n### Step 1)\n\n##### Find an endpoint that uses the following function from TC",
                "back_trans_input_tokens_mean": -2.337813611464067
            },
            {
                "idx": 4,
                "candidate": "Find all of the cards in a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6944118499755859,
                "back_trans_input": "Task: Find all of the cards in a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** You can find the answer by looking at the endpoints on [this page](https://",
                "back_trans_input_tokens_mean": -2.2998385919588746
            },
            {
                "idx": 5,
                "candidate": "Find a specific card. Use the API: TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8262873664498329,
                "back_trans_input": "Task: Find a specific card. Use the API: TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"endpoint\": \"https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.2908013183458715
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find all of the cards in a set."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/trainer-types/%7Btrainer-type%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/trainer-types/{trainer-type}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find a MTG card that will be used to search for.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.2597084045410156,
                "back_trans_input": "Task: Find a MTG card that will be used to search for.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nExample:\n\nYou are given the following information:\n\n* Endpoint ID: ",
                "back_trans_input_tokens_mean": -2.362288775744739
            },
            {
                "idx": 2,
                "candidate": "Use the TCGdex API to query for card information.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8914506893891555,
                "back_trans_input": "Task: Use the TCGdex API to query for card information.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n--- \n\nhttps://github.com/TruongAnhTu/TCGdex_",
                "back_trans_input_tokens_mean": -2.236768284359494
            },
            {
                "idx": 3,
                "candidate": "What is the API to search for card details?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.26744384765625,
                "back_trans_input": "Task: What is the API to search for card details?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v2\n\n# --hints-- \n\n```bash\nRun '.",
                "back_trans_input_tokens_mean": -2.3070818936383284
            },
            {
                "idx": 4,
                "candidate": "What is the best way to query a card database using an API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2984090169270834,
                "back_trans_input": "Task: What is the best way to query a card database using an API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://tcgplayer.com/api](https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.326228175844465
            },
            {
                "idx": 5,
                "candidate": "Find me information about the card named \"Turbocharge\" from the Magic: The Gathering Trading",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3506463982842185,
                "back_trans_input": "Task: Find me information about the card named &quot;Turbocharge&quot; from the Magic: The Gathering Trading\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoints are in JSON format.",
                "back_trans_input_tokens_mean": -2.392057481359263
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Use the TCGdex API to query for card information."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/trainer-types/%7Btrainer-type%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/trainer-types/{trainer-type}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all cards by name. Name the API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.564935302734375,
                "back_trans_input": "Task: Find all cards by name. Name the API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"name\": \"FindAllCardsByName\",\n  \"functionality",
                "back_trans_input_tokens_mean": -2.440712838261216
            },
            {
                "idx": 2,
                "candidate": "Find a list of all cards. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7862938563028972,
                "back_trans_input": "Task: Find a list of all cards. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [https://github.com/james-bowers/endpoints](https://github",
                "back_trans_input_tokens_mean": -2.2932544329336713
            },
            {
                "idx": 3,
                "candidate": "Find all the cards in a set. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.532993994653225,
                "back_trans_input": "Task: Find all the cards in a set. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solution\n\nhttps://github.com/majidkhalifeh/Hacktober",
                "back_trans_input_tokens_mean": -2.295519725411339
            },
            {
                "idx": 4,
                "candidate": "What is the API to query for a specific card by name?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2047783987862724,
                "back_trans_input": "Task: What is the API to query for a specific card by name?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"endpoint\": \"GET\",\n  \"id\": \"card/name",
                "back_trans_input_tokens_mean": -2.245152402568508
            },
            {
                "idx": 5,
                "candidate": "Find the rarity, set, and name of a card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1310630866459437,
                "back_trans_input": "Task: Find the rarity, set, and name of a card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoint's ID has been changed from its original value for security reasons.",
                "back_trans_input_tokens_mean": -2.2685849514874543
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find all the cards in a set. Use TCGdex API."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.tcgdex.net/v2/%7Blang%7D/trainer-types/%7Btrainer-type%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/trainer-types/{trainer-type}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Show the most recent cards I added to my collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5220087224786931,
                "back_trans_input": "Task: Show the most recent cards I added to my collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hints\n\n * You can use the documentation at https://docs.",
                "back_trans_input_tokens_mean": -2.3238574736708895
            },
            {
                "idx": 2,
                "candidate": "Find a specific card in TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.862484872341156,
                "back_trans_input": "Task: Find a specific card in TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nEndpoints are not always easy to find! Try using Postman or Paw to help make",
                "back_trans_input_tokens_mean": -2.189011241317889
            },
            {
                "idx": 3,
                "candidate": "Add my new card to the tcg database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7657503286997478,
                "back_trans_input": "Task: Add my new card to the tcg database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nExpected Output:\nid= \"mynewcard1234\"\nfunctionality=\"addCard",
                "back_trans_input_tokens_mean": -2.3624838723076715
            },
            {
                "idx": 4,
                "candidate": "Add a card from the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7536327640215555,
                "back_trans_input": "Task: Add a card from the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n```javascript {10}\n// Your code goes here!\n",
                "back_trans_input_tokens_mean": -2.2274101502304777
            },
            {
                "idx": 5,
                "candidate": "What website has a database of all magic the gathering cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5915568425105169,
                "back_trans_input": "Task: What website has a database of all magic the gathering cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n## [Previous exercise](..",
                "back_trans_input_tokens_mean": -2.3731012864546344
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Add a card from the TCGdex API."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/trainer-types/%7Btrainer-type%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/trainer-types/{trainer-type}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How do I lookup the value of my cards in a deck?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7355733235677084,
                "back_trans_input": "Task: How do I lookup the value of my cards in a deck?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n***\nTask: How do I get information about a specific card by its id?",
                "back_trans_input_tokens_mean": -2.3645429525289448
            },
            {
                "idx": 2,
                "candidate": "Use a TCGdex API. What is the endpoint?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0239695151646933,
                "back_trans_input": "Task: Use a TCGdex API. What is the endpoint?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"",
                "back_trans_input_tokens_mean": -2.2144662066622898
            },
            {
                "idx": 3,
                "candidate": "Find all cards for a specific rare. Name the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.063669015379513,
                "back_trans_input": "Task: Find all cards for a specific rare. Name the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Find all decks that use a certain card.",
                "back_trans_input_tokens_mean": -2.376324645259924
            },
            {
                "idx": 4,
                "candidate": "What is the full name of the API that allows you to look up cards by their names?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8973047356856497,
                "back_trans_input": "Task: What is the full name of the API that allows you to look up cards by their names?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nFunctionality: Get Card Info By Name\nDescription: Returns card data based on its name.",
                "back_trans_input_tokens_mean": -2.1576824677296176
            },
            {
                "idx": 5,
                "candidate": "Find a card. Name the API TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9712854112897601,
                "back_trans_input": "Task: Find a card. Name the API TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nEndpoint: /api/cards/{id}",
                "back_trans_input_tokens_mean": -2.3174106597900392
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "What is the full name of the API that allows you to look up cards by their names?"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/trainer-types/%7Btrainer-type%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/trainer-types/{trainer-type}",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all card stubs.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7309126420454546,
                "back_trans_input": "Task: Find all card stubs.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Find all cards with more than one type that are not Legendary.",
                "back_trans_input_tokens_mean": -2.510231127057757
            },
            {
                "idx": 2,
                "candidate": "Search for all the cards in a given set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1113225763494319,
                "back_trans_input": "Task: Search for all the cards in a given set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Example:** \n\n```json\n{\n    \"id\": \"search\",\n    \"functionality\":",
                "back_trans_input_tokens_mean": -2.293873574998644
            },
            {
                "idx": 3,
                "candidate": "Find all the names of cards in TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.010370095570882,
                "back_trans_input": "Task: Find all the names of cards in TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Input Format\nThe input consists of one line containing four strings.",
                "back_trans_input_tokens_mean": -2.2064841357144442
            },
            {
                "idx": 4,
                "candidate": "Find the latest cards.nTell me how much a card is worth from TCGdex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4272920543497258,
                "back_trans_input": "Task: Find the latest cards.nTell me how much a card is worth from TCGdex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## Task 2\n\n> You have been tasked with writing an automated test script that tests your endpoint in",
                "back_trans_input_tokens_mean": -2.4929397941654563
            },
            {
                "idx": 5,
                "candidate": "Use TCGdex API to find prices.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.447488582134247,
                "back_trans_input": "Task: Use TCGdex API to find prices.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 5.2.2.1\n\nUse your knowledge about endpoints to answer these questions.",
                "back_trans_input_tokens_mean": -2.3058388144881636
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find all the names of cards in TCGdex."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/trainer-types/%7Btrainer-type%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/trainer-types/{trainer-type}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Search for all cards in a set. Name the API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9658960195688101,
                "back_trans_input": "Task: Search for all cards in a set. Name the API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nFunctionality: search cards by name or type.",
                "back_trans_input_tokens_mean": -2.3821339347145774
            },
            {
                "idx": 2,
                "candidate": "Find the name of all Magic: The Gathering cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8286978701750437,
                "back_trans_input": "Task: Find the name of all Magic: The Gathering cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n![endpoint](https://github.com/zubair101/Endpoints-API/blob/",
                "back_trans_input_tokens_mean": -2.2477516034327514
            },
            {
                "idx": 3,
                "candidate": "What API can I use to lookup specific card and it's stats?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4646372724981869,
                "back_trans_input": "Task: What API can I use to lookup specific card and it&#x27;s stats?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:**\n* The endpoints are in JSON format and should not contain any HTML tags or other formatting",
                "back_trans_input_tokens_mean": -2.4312382730944404
            },
            {
                "idx": 4,
                "candidate": "Search for the highest rated card. Find cards in specific sets, rarities, and prices.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.77635498046875,
                "back_trans_input": "Task: Search for the highest rated card. Find cards in specific sets, rarities, and prices.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task\n\nSearch for all Magic: The Gathering cards with name starting with \"Mox\".",
                "back_trans_input_tokens_mean": -2.388691231355829
            },
            {
                "idx": 5,
                "candidate": "Show my friends that I have used this API in a deck builder?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.4599450826644897,
                "back_trans_input": "Task: Show my friends that I have used this API in a deck builder?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\nconst getDeckBuilderFriends = async () => {\n  const response",
                "back_trans_input_tokens_mean": -2.4896226951054166
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find the name of all Magic: The Gathering cards."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/trainer-types/%7Btrainer-type%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/trainer-types/{trainer-type}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Get the TCGdex API.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.058977029540322,
                "back_trans_input": "Task: Get the TCGdex API.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2\n\nThe second task is similar to the first task but with some differences.",
                "back_trans_input_tokens_mean": -2.301704270817409
            },
            {
                "idx": 2,
                "candidate": "Create a list of all cards from a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9800276756286621,
                "back_trans_input": "Task: Create a list of all cards from a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Retrieve information about a specific card by its ID.",
                "back_trans_input_tokens_mean": -2.321142998006609
            },
            {
                "idx": 3,
                "candidate": "Find all cards that are listed in a certain deck, and their name.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.815399169921875,
                "back_trans_input": "Task: Find all cards that are listed in a certain deck, and their name.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## --- Part Two ---\n\nFor each card returned by the above request, generate its own",
                "back_trans_input_tokens_mean": -2.32159088565185
            },
            {
                "idx": 4,
                "candidate": "To get all cards in the TCGdex, use the API named TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9348754939578828,
                "back_trans_input": "Task: To get all cards in the TCGdex, use the API named TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Example \n```json\n{\n    \"endpoint_name\": \"cards\",\n    \"functionality",
                "back_trans_input_tokens_mean": -2.2002816661065365
            },
            {
                "idx": 5,
                "candidate": "To retrieve a list of current cards for the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5621368885040283,
                "back_trans_input": "Task: To retrieve a list of current cards for the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Example\n\nThe following is one way that your code could look like if it were written in JavaScript",
                "back_trans_input_tokens_mean": -2.2932084408481566
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "To get all cards in the TCGdex, use the API named TCGdex API."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/trainer-types/%7Btrainer-type%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/trainer-types/{trainer-type}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all of the cards in a deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7939590454101563,
                "back_trans_input": "Task: Find all of the cards in a deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint Identifier (URL)\n\nThe URL will always have a specific format: `",
                "back_trans_input_tokens_mean": -2.2711323176588967
            },
            {
                "idx": 2,
                "candidate": "Find cards by their card number. Name of the API: TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0095269746250577,
                "back_trans_input": "Task: Find cards by their card number. Name of the API: TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nID: \nFunctionality: \n\nDescription: \nEndpoint: \n\n",
                "back_trans_input_tokens_mean": -2.2387316473599137
            },
            {
                "idx": 3,
                "candidate": "find all the cards in a specific set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8471023559570312,
                "back_trans_input": "Task: find all the cards in a specific set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 1:\n\nThe first thing we need to do is figure out what the card ID",
                "back_trans_input_tokens_mean": -2.3066663296423227
            },
            {
                "idx": 4,
                "candidate": "Add a card to tcgdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9074505170186361,
                "back_trans_input": "Task: Add a card to tcgdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Withdraw funds from your account in TcgDex.",
                "back_trans_input_tokens_mean": -2.3374874546842754
            },
            {
                "idx": 5,
                "candidate": "Search for cards and their stats. The API name is TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0317749381065369,
                "back_trans_input": "Task: Search for cards and their stats. The API name is TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nEndpoint: https://api.tcgplayer.",
                "back_trans_input_tokens_mean": -2.271631597435993
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Find all of the cards in a deck."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/types",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/types",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How do I find a card from the TCG database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2640800017576952,
                "back_trans_input": "Task: How do I find a card from the TCG database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Notes on this section\n\n### 1 - Regex\n\nThe regex expression used in this",
                "back_trans_input_tokens_mean": -2.2696475289084694
            },
            {
                "idx": 2,
                "candidate": "Find a list of every TCG game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.659688115119934,
                "back_trans_input": "Task: Find a list of every TCG game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nSolution: \n\n```json\n{\n    \"endpoint\": \"https://tcg.",
                "back_trans_input_tokens_mean": -2.291727404728114
            },
            {
                "idx": 3,
                "candidate": "To get the card images of a TCG.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6225301135670056,
                "back_trans_input": "Task: To get the card images of a TCG.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 2.2.3.4.",
                "back_trans_input_tokens_mean": -2.2676528294881186
            },
            {
                "idx": 4,
                "candidate": "To lookup the price of a card using this API, ask for TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4838115260714577,
                "back_trans_input": "Task: To lookup the price of a card using this API, ask for TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How do I solve it?\n\nFirst, go to https://docs.",
                "back_trans_input_tokens_mean": -2.429723016146956
            },
            {
                "idx": 5,
                "candidate": "Find all cards for a particular card game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.239263153076172,
                "back_trans_input": "Task: Find all cards for a particular card game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint Identifier (1 point)\n\nThe first part of the URL that the HTTP request",
                "back_trans_input_tokens_mean": -2.261512292879764
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find all cards for a particular card game."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/types\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/types",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find a deck I'm not familiar with",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7383568503639915,
                "back_trans_input": "Task: Find a deck I&#x27;m not familiar with\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Hints for Endpoint\n\nThis request returns all cards that are in sets from the TCG",
                "back_trans_input_tokens_mean": -2.4305852955037897
            },
            {
                "idx": 2,
                "candidate": "What is the API to look up a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8043420965021307,
                "back_trans_input": "Task: What is the API to look up a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task description\n\n\n> What is the endpoint that returns all cards in the game, including the amount available",
                "back_trans_input_tokens_mean": -2.254593617386288
            },
            {
                "idx": 3,
                "candidate": "How do I list all the cards in a specific set?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9176160372220553,
                "back_trans_input": "Task: How do I list all the cards in a specific set?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You can not use any libraries or external resources such as Stack Overflow etc.",
                "back_trans_input_tokens_mean": -2.2810363314368507
            },
            {
                "idx": 4,
                "candidate": "How can I search for card images using the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9397874434789022,
                "back_trans_input": "Task: How can I search for card images using the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** This question was inspired by the [TCGdex API](https://github.",
                "back_trans_input_tokens_mean": -2.250180242335902
            },
            {
                "idx": 5,
                "candidate": "What is the code to look up a card on TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8926452621817589,
                "back_trans_input": "Task: What is the code to look up a card on TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## Card Endpoint (TCGdex)\n\nThe following endpoint returns information about",
                "back_trans_input_tokens_mean": -2.2503467302406785
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "What is the API to look up a card?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/types'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/types",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Can I use this API to find card id numbers?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.55848635160006,
                "back_trans_input": "Task: Can I use this API to find card id numbers?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2 \n\n**Description:**\n\nYou are given two endpoints from a specific API.",
                "back_trans_input_tokens_mean": -2.4142469703604323
            },
            {
                "idx": 2,
                "candidate": "Find the price of a specific card.?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8455718994140625,
                "back_trans_input": "Task: Find the price of a specific card.?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Endpoint: https://api.tcgplayer.",
                "back_trans_input_tokens_mean": -2.3648155140426925
            },
            {
                "idx": 3,
                "candidate": "Find the most expensive card in a set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9236515045166016,
                "back_trans_input": "Task: Find the most expensive card in a set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n## Task\n\nIn order to find the most expensive card, you must first get all cards",
                "back_trans_input_tokens_mean": -2.298456602007429
            },
            {
                "idx": 4,
                "candidate": "Search for a list of cards. What is the best API to use?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0824480056762695,
                "back_trans_input": "Task: Search for a list of cards. What is the best API to use?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Expected Output\n\nFunctionality: \nDescription: \nEndpoint: \n\n",
                "back_trans_input_tokens_mean": -2.3281825580428133
            },
            {
                "idx": 5,
                "candidate": "Find all the cards with a certain name.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8916107177734375,
                "back_trans_input": "Task: Find all the cards with a certain name.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nExample response in JSON format:\n\n    {\n        \"id\": \"find\",\n        \"functionality",
                "back_trans_input_tokens_mean": -2.296612356310693
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find all the cards with a certain name."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/types\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/types",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Add all the cards from a specific set to a dex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2463170369466146,
                "back_trans_input": "Task: Add all the cards from a specific set to a dex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n### 2: Modify the endpoint functionality without changing it's name or id\n\n",
                "back_trans_input_tokens_mean": -2.367017867348411
            },
            {
                "idx": 2,
                "candidate": "Show me all the magic the gathering cards. Name the API that would do this.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3528541116153492,
                "back_trans_input": "Task: Show me all the magic the gathering cards. Name the API that would do this.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " \n\nExpected Output:\nFunctionality: Find Magic The Gathering Cards by their names or sets they are in",
                "back_trans_input_tokens_mean": -2.5002501446267833
            },
            {
                "idx": 3,
                "candidate": "What API can I use to get the list of rare cards from tcgdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0927309036254882,
                "back_trans_input": "Task: What API can I use to get the list of rare cards from tcgdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"id\": \"get_rare_cards\",\n  \"functionality\":",
                "back_trans_input_tokens_mean": -2.2621744570524798
            },
            {
                "idx": 4,
                "candidate": "What is the name of the API that allows you to look up a card's details?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6886151850223541,
                "back_trans_input": "Task: What is the name of the API that allows you to look up a card&#x27;s details?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nTask: What is the name of the API that allows you to get all cards in a set?",
                "back_trans_input_tokens_mean": -2.1718157370885214
            },
            {
                "idx": 5,
                "candidate": "Find a card with keywords.nFind all cards in the game that have keywords specified.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6131062621162051,
                "back_trans_input": "Task: Find a card with keywords.nFind all cards in the game that have keywords specified.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint Example\n```json\n{\n  \"id\": \"b7e7a0",
                "back_trans_input_tokens_mean": -2.465429930851377
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "What is the name of the API that allows you to look up a card's details?"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/types\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/types",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "what is the api end point for TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1955866446861854,
                "back_trans_input": "Task: what is the api end point for TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```jsonc\n{\n  \"api\": \"TCGdex\",\n  \"endpoint\": ",
                "back_trans_input_tokens_mean": -2.2492418700998478
            },
            {
                "idx": 2,
                "candidate": "Find the name of all cards with a certain type.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1289253234863281,
                "back_trans_input": "Task: Find the name of all cards with a certain type.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Get information about a specific card by its id.",
                "back_trans_input_tokens_mean": -2.3054492736081467
            },
            {
                "idx": 3,
                "candidate": "Search for all cards of a given type.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.43353271484375,
                "back_trans_input": "Task: Search for all cards of a given type.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<details>\n  <summary>Click here for the solution</summary>\n    <ul>",
                "back_trans_input_tokens_mean": -2.2813194733913815
            },
            {
                "idx": 4,
                "candidate": "Create a search page with custom filters using the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3929069191217422,
                "back_trans_input": "Task: Create a search page with custom filters using the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task\nCreate a search page with custom filters using the TCGdex API.",
                "back_trans_input_tokens_mean": -2.2747930066775433
            },
            {
                "idx": 5,
                "candidate": "what api do you need to use to get the list of card for magic?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.684193779440487,
                "back_trans_input": "Task: what api do you need to use to get the list of card for magic?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n##### Solution\n\nEndpoint: https://api.",
                "back_trans_input_tokens_mean": -2.418856470208419
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find the name of all cards with a certain type."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/types\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/types",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What API should I call for the latest card price list?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.6751185825892856,
                "back_trans_input": "Task: What API should I call for the latest card price list?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** The answer can be found in the documentation here: https://docs.",
                "back_trans_input_tokens_mean": -2.377246059070934
            },
            {
                "idx": 2,
                "candidate": "how do I add a custom data set to the TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4376800879836082,
                "back_trans_input": "Task: how do I add a custom data set to the TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input Format\n\nThe input file contains one line with four space-separated values:\n\n *",
                "back_trans_input_tokens_mean": -2.3071733576006594
            },
            {
                "idx": 3,
                "candidate": "Find which card has the highest X-men value.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7006327311197917,
                "back_trans_input": "Task: Find which card has the highest X-men value.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 2\n\nYou are provided with the following information about an endpoint in the TCGd",
                "back_trans_input_tokens_mean": -2.39730954826425
            },
            {
                "idx": 4,
                "candidate": "How can I find a list of all the unique cards in the Magic community?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.462228214039522,
                "back_trans_input": "Task: How can I find a list of all the unique cards in the Magic community?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** This challenge has multiple solutions!",
                "back_trans_input_tokens_mean": -2.357108944340756
            },
            {
                "idx": 5,
                "candidate": "How do I use the TCGdex API to get a list of all cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5864314593766865,
                "back_trans_input": "Task: How do I use the TCGdex API to get a list of all cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## Solution\n\n```bash\ncurl https://tcg.",
                "back_trans_input_tokens_mean": -2.1723952848335792
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "How do I use the TCGdex API to get a list of all cards?"
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/types\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/types",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Add cards from the TCGDB to your collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9051351872357456,
                "back_trans_input": "Task: Add cards from the TCGDB to your collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n* [TCGdex](https://github.",
                "back_trans_input_tokens_mean": -2.31965059752858
            },
            {
                "idx": 2,
                "candidate": "Find the cards I own. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0622787842383752,
                "back_trans_input": "Task: Find the cards I own. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nhttps://github.com/matthewkastor/endpoints_for_",
                "back_trans_input_tokens_mean": -2.2939167538204708
            },
            {
                "idx": 3,
                "candidate": "What can I do with the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6577617426713308,
                "back_trans_input": "Task: What can I do with the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **Answer:**\n\n```bash\n",
                "back_trans_input_tokens_mean": -2.165228167447177
            },
            {
                "idx": 4,
                "candidate": "Get the name of all cards. Use TCGdex API for this task.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.042245542301851,
                "back_trans_input": "Task: Get the name of all cards. Use TCGdex API for this task.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** To get the answer, try using the same endpoint in Postman or any other REST client",
                "back_trans_input_tokens_mean": -2.2717911927596384
            },
            {
                "idx": 5,
                "candidate": "Find the name of a card.? I'm looking for the names of some cards",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1419772624969482,
                "back_trans_input": "Task: Find the name of a card.? I&#x27;m looking for the names of some cards\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The solution in the example above is not correct because it does not match the expected output format",
                "back_trans_input_tokens_mean": -2.3999376135357355
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "What can I do with the TCGdex API?"
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/types\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/types",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How can I find cards for a list of cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5005251566569011,
                "back_trans_input": "Task: How can I find cards for a list of cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Generate a new random function with a specific signature using a random number generator seed.",
                "back_trans_input_tokens_mean": -2.358739485434436
            },
            {
                "idx": 2,
                "candidate": "Find information for a set of cards. Name the API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4399820474477916,
                "back_trans_input": "Task: Find information for a set of cards. Name the API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"apiVersion\": \"1.",
                "back_trans_input_tokens_mean": -2.418541759525964
            },
            {
                "idx": 3,
                "candidate": "Find the cost of a specific card. Use TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6413078978657722,
                "back_trans_input": "Task: Find the cost of a specific card. Use TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Example:\n```json\n{\n\t\"id\": \"get_card_cost\",\n\t",
                "back_trans_input_tokens_mean": -2.303281665903277
            },
            {
                "idx": 4,
                "candidate": "Find cards in the TCGdex.com database",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8709059357643127,
                "back_trans_input": "Task: Find cards in the TCGdex.com database\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<br>\n\n## 2. Generate the Endpoint Identifier (API Version)\n\n**Hint",
                "back_trans_input_tokens_mean": -2.239038712387785
            },
            {
                "idx": 5,
                "candidate": "find the names of cards. nbsp;",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6931797907902644,
                "back_trans_input": "Task: find the names of cards. nbsp;\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n```javascript{4}\nconst tcgDexApi = require('tcg-dex",
                "back_trans_input_tokens_mean": -2.465144540661963
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Find the cost of a specific card. Use TCGdex API."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/types/%7Btype%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/types/{type}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How can I get the information for a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.088876724243164,
                "back_trans_input": "Task: How can I get the information for a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### 0.3.2.3.",
                "back_trans_input_tokens_mean": -2.3487111904003
            },
            {
                "idx": 2,
                "candidate": "Find the rares and commons for a card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0201191902160645,
                "back_trans_input": "Task: Find the rares and commons for a card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Rares And Commons\n\nThe first step in finding out how many cards are rare",
                "back_trans_input_tokens_mean": -2.317782332044129
            },
            {
                "idx": 3,
                "candidate": "find all cards.cards with a specific card name?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7346144456129808,
                "back_trans_input": "Task: find all cards.cards with a specific card name?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint: GET /api/v1/card_names/{cardName}\n```",
                "back_trans_input_tokens_mean": -2.488580161278401
            },
            {
                "idx": 4,
                "candidate": "Find all sets a card belongs to. Name the API TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0385866430070665,
                "back_trans_input": "Task: Find all sets a card belongs to. Name the API TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task\nFind all cards that have been played in the last week.",
                "back_trans_input_tokens_mean": -2.382583236694336
            },
            {
                "idx": 5,
                "candidate": "I want to find all the TCGs that have cards based on a certain keyword.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4855294227600098,
                "back_trans_input": "Task: I want to find all the TCGs that have cards based on a certain keyword.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nhttps://www.terraforming.",
                "back_trans_input_tokens_mean": -2.241340405008067
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find the rares and commons for a card."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/types/%7Btype%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/types/{type}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "how can I get all the cards in tcgdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0205766677856445,
                "back_trans_input": "Task: how can I get all the cards in tcgdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n---\n\nTask: How do I add new assets or remove existing ones on TCGd",
                "back_trans_input_tokens_mean": -2.348925330422141
            },
            {
                "idx": 2,
                "candidate": "How can I read information from TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.448652375828136,
                "back_trans_input": "Task: How can I read information from TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## How do I use it?\n\n```php\n$endpoints = EndpointRegistry::get",
                "back_trans_input_tokens_mean": -2.2848494818451206
            },
            {
                "idx": 3,
                "candidate": "Search for all cards by name. Name of the API is TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8438928524653116,
                "back_trans_input": "Task: Search for all cards by name. Name of the API is TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nEndpoint ID: 1e1a1f9c-b7c2-4bd3",
                "back_trans_input_tokens_mean": -2.279409589438603
            },
            {
                "idx": 4,
                "candidate": "Find cards for the Magic: The Gathering game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0539882183074951,
                "back_trans_input": "Task: Find cards for the Magic: The Gathering game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Notes on Endpoint Generation\n\nThe following are notes about how endpoints can be generated in different ways",
                "back_trans_input_tokens_mean": -2.3007396768640587
            },
            {
                "idx": 5,
                "candidate": "What API can I use to find the prices of cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0552965799967449,
                "back_trans_input": "Task: What API can I use to find the prices of cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<details>\n  <summary>Click here for the solution</summary>\n    <br/>\n\n    ```",
                "back_trans_input_tokens_mean": -2.3016327251087536
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Search for all cards by name. Name of the API is TCGdex API."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/types/%7Btype%7D'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/types/{type}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find a card.nGet the name of this card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1747485569545202,
                "back_trans_input": "Task: Find a card.nGet the name of this card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<details>\n  <summary>Click here for the solution</summary>\n    <p>\n\n",
                "back_trans_input_tokens_mean": -2.4015622572465376
            },
            {
                "idx": 2,
                "candidate": "What api will get me the information on how to play a game?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7193524837493896,
                "back_trans_input": "Task: What api will get me the information on how to play a game?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You can find all the endpoints in [this file](https://github.",
                "back_trans_input_tokens_mean": -2.3462051323481967
            },
            {
                "idx": 3,
                "candidate": "How do you find the mnemonic for an unknown card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4108283179146903,
                "back_trans_input": "Task: How do you find the mnemonic for an unknown card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:**\n* The endpoint IDs are unique within an API\n* There might not be any endpoints",
                "back_trans_input_tokens_mean": -2.29907412142367
            },
            {
                "idx": 4,
                "candidate": "To access the TCGdex API, what is the endpoint name",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3260900974273682,
                "back_trans_input": "Task: To access the TCGdex API, what is the endpoint name\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** You can use the following endpoints as examples when you are completing your tasks: https://api",
                "back_trans_input_tokens_mean": -2.242997467517853
            },
            {
                "idx": 5,
                "candidate": "What are the names of all the cards? The \"TCGdex API\"",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1083346274163988,
                "back_trans_input": "Task: What are the names of all the cards? The &quot;TCGdex API&quot;\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Endpoint Identifier: tcg-cards/\n\nThe first part of the endpoint identifier contains a",
                "back_trans_input_tokens_mean": -2.234784460067749
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "What are the names of all the cards? The \"TCGdex API\""
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/types/%7Btype%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/types/{type}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How do I get access to the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7817451678789579,
                "back_trans_input": "Task: How do I get access to the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Example Output\n\n    TCGdex_GetAllMarketHistoryBySymbol_GET\n    Get all market",
                "back_trans_input_tokens_mean": -2.1879944414705843
            },
            {
                "idx": 2,
                "candidate": "Find the card I need to complete my deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.358935546875,
                "back_trans_input": "Task: Find the card I need to complete my deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [Hints](https://github.",
                "back_trans_input_tokens_mean": -2.2702709833780923
            },
            {
                "idx": 3,
                "candidate": "Find the set of cards for Magic: The Gathering.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.15571595231692,
                "back_trans_input": "Task: Find the set of cards for Magic: The Gathering.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2. Generate a new Endpoint ID with the following format: api/v1/<",
                "back_trans_input_tokens_mean": -2.324221514780587
            },
            {
                "idx": 4,
                "candidate": "Find all the cards of the current set.r",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6035435994466145,
                "back_trans_input": "Task: Find all the cards of the current set.r\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"id\": \"find_cards\",\n    \"functionality\": \"",
                "back_trans_input_tokens_mean": -2.3801151204992226
            },
            {
                "idx": 5,
                "candidate": "What is the API for a card? Use the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3562670946121216,
                "back_trans_input": "Task: What is the API for a card? Use the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nFor more information about endpoints, check out our documentation on them!",
                "back_trans_input_tokens_mean": -2.326285396002035
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "How do I get access to the TCGdex API?"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/types/%7Btype%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/types/{type}",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is the TCGdex API endpoint?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.71971595287323,
                "back_trans_input": "Task: What is the TCGdex API endpoint?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task\nWhat is the TCGdex API endpoint?",
                "back_trans_input_tokens_mean": -2.138161171365667
            },
            {
                "idx": 2,
                "candidate": "Find a list of cards that were printed for a specific magic the gathering set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.36018795437283,
                "back_trans_input": "Task: Find a list of cards that were printed for a specific magic the gathering set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## [Try it online!](https://replit.",
                "back_trans_input_tokens_mean": -2.3276891290095816
            },
            {
                "idx": 3,
                "candidate": "Add an item to the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8969083547592163,
                "back_trans_input": "Task: Add an item to the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<details>\n  <summary><b>Click here for the solution</b></summary>",
                "back_trans_input_tokens_mean": -2.2187867606127702
            },
            {
                "idx": 4,
                "candidate": "Find all cards in a set.?n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9645013809204102,
                "back_trans_input": "Task: Find all cards in a set.?n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n## 题目大意：\n\n> 给定一个endpoint的id、",
                "back_trans_input_tokens_mean": -2.503805493408779
            },
            {
                "idx": 5,
                "candidate": "What is the TCGdex API? Who can use it?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8701999272618975,
                "back_trans_input": "Task: What is the TCGdex API? Who can use it?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** You can find the answer in `src/endpoints`.",
                "back_trans_input_tokens_mean": -2.1686552337237766
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "What is the TCGdex API endpoint?"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/types/%7Btype%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/types/{type}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find if an item is in the TCGdex database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9089100531169346,
                "back_trans_input": "Task: Find if an item is in the TCGdex database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoints are stored under `/api-endpoints`.",
                "back_trans_input_tokens_mean": -2.2076676128146886
            },
            {
                "idx": 2,
                "candidate": "show me all card ids for an artist",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7881978352864583,
                "back_trans_input": "Task: show me all card ids for an artist\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoints are case sensitive so make sure that your capitalization matches.",
                "back_trans_input_tokens_mean": -2.4584691929367355
            },
            {
                "idx": 3,
                "candidate": "What is the name of the API that would tell you what card your opponent has in their hand?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1525733947753907,
                "back_trans_input": "Task: What is the name of the API that would tell you what card your opponent has in their hand?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solutions\n\n### Task: What is the name of the API that would tell you what card your opponent",
                "back_trans_input_tokens_mean": -2.2235028703333968
            },
            {
                "idx": 4,
                "candidate": "Find all Magic cards, which have been reprinted.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8241678873697917,
                "back_trans_input": "Task: Find all Magic cards, which have been reprinted.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Input Format\n\nThe first line contains two integers N and M, where N is the number of",
                "back_trans_input_tokens_mean": -2.3709857660696048
            },
            {
                "idx": 5,
                "candidate": "What is the endpoint for getting a list of all cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8715027400425502,
                "back_trans_input": "Task: What is the endpoint for getting a list of all cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nSolution:\n```javascript\n// TCGdex -> GetCardList.",
                "back_trans_input_tokens_mean": -2.175379891829057
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "What is the endpoint for getting a list of all cards?"
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/types/%7Btype%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/types/{type}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "what is the url for getting all of my collection stats?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4933560235159737,
                "back_trans_input": "Task: what is the url for getting all of my collection stats?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\n{\n  \"endpoint\": \"https://api.",
                "back_trans_input_tokens_mean": -2.407940153642134
            },
            {
                "idx": 2,
                "candidate": "What is the name of the API for getting card images?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1351852416992188,
                "back_trans_input": "Task: What is the name of the API for getting card images?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task 2\n\nUsing the above information, what is the endpoint ID that should be used in",
                "back_trans_input_tokens_mean": -2.255915034901012
            },
            {
                "idx": 3,
                "candidate": "How do I get a card's image using the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8693211939599779,
                "back_trans_input": "Task: How do I get a card&#x27;s image using the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Endpoint identifier example [0]\n\nhttps://tcgplayer.",
                "back_trans_input_tokens_mean": -2.2337376061132397
            },
            {
                "idx": 4,
                "candidate": "Find information about a card. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6328658103942871,
                "back_trans_input": "Task: Find information about a card. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Generate the Endpoint Identifier.",
                "back_trans_input_tokens_mean": -2.2463882735797336
            },
            {
                "idx": 5,
                "candidate": "how to list all cards from a deck using the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.122302020297331,
                "back_trans_input": "Task: how to list all cards from a deck using the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 1. Re-generate the endpoint's identifier\n\nThe endpoint's identifier should follow",
                "back_trans_input_tokens_mean": -2.2487550032766244
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "Find information about a card. Use the TCGdex API."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/types/%7Btype%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/types/{type}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "show all the cards from a deck.?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.406622314453125,
                "back_trans_input": "Task: show all the cards from a deck.?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## **2.**\n\nTask: show me my collection, including my owned NFTs, my favorites",
                "back_trans_input_tokens_mean": -2.4338385024160707
            },
            {
                "idx": 2,
                "candidate": "Find a list of cards in the game.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1715805053710937,
                "back_trans_input": "Task: Find a list of cards in the game.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 3. Write your answer on the line below",
                "back_trans_input_tokens_mean": -2.2761916757744047
            },
            {
                "idx": 3,
                "candidate": "find the id number of a certain card",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6131908098856609,
                "back_trans_input": "Task: find the id number of a certain card\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<details>\n  <summary><b>Click here for the solution</b></summary>",
                "back_trans_input_tokens_mean": -2.355898479245744
            },
            {
                "idx": 4,
                "candidate": "What API allows me to get the price of a card without entering my own?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6977211166830624,
                "back_trans_input": "Task: What API allows me to get the price of a card without entering my own?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** You can find the solution in the file named `solution_endpoint`.",
                "back_trans_input_tokens_mean": -2.3504228089985095
            },
            {
                "idx": 5,
                "candidate": "What are the names of all Magic cards with a given name, and what set is it in?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4338248116629464,
                "back_trans_input": "Task: What are the names of all Magic cards with a given name, and what set is it in?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n```javascript\n// 1) What are the names of all Magic cards with a given name",
                "back_trans_input_tokens_mean": -2.2902542696160784
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find a list of cards in the game."
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/variants",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/variants",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What is the API for finding magic card prices?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.441424560546875,
                "back_trans_input": "Task: What is the API for finding magic card prices?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** Endpoint names are lowercase and use only alphanumeric characters with no spaces or",
                "back_trans_input_tokens_mean": -2.2904414667023554
            },
            {
                "idx": 2,
                "candidate": "What is the API that allows me to search for a card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9440242222377232,
                "back_trans_input": "Task: What is the API that allows me to search for a card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Example\n\n```json\n{\n  \"endpoint\": \"https://example.",
                "back_trans_input_tokens_mean": -2.2283073180430644
            },
            {
                "idx": 3,
                "candidate": "find all tcgdex cards in a database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2085827418736048,
                "back_trans_input": "Task: find all tcgdex cards in a database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Instructions\n\n * You must use a POST request\n * You must pass your values as JSON data ",
                "back_trans_input_tokens_mean": -2.4577380175943726
            },
            {
                "idx": 4,
                "candidate": "What is the API for a list of card names, abilities and values?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3956422805786133,
                "back_trans_input": "Task: What is the API for a list of card names, abilities and values?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nAnswer:  (1) Get all cards in the collection with their attributes  \n(2) List",
                "back_trans_input_tokens_mean": -2.343711606169169
            },
            {
                "idx": 5,
                "candidate": "how do I query for all the cards available to me?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.8223470052083333,
                "back_trans_input": "Task: how do I query for all the cards available to me?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# How should we define the endpoint\n\nThe endpoint is defined by its functionality and its description.",
                "back_trans_input_tokens_mean": -2.3469968167218296
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "What is the API that allows me to search for a card?"
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/variants\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/variants",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "how do you use the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6796453866091642,
                "back_trans_input": "Task: how do you use the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n<sub>* Created by [DataCamp](https://www.",
                "back_trans_input_tokens_mean": -2.215110157607892
            },
            {
                "idx": 2,
                "candidate": "How can I get the number of cards in an item?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4737777709960938,
                "back_trans_input": "Task: How can I get the number of cards in an item?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n## Endpoint Identifier (1 point)\n\nThe first step would be to identify the",
                "back_trans_input_tokens_mean": -2.3450441880659625
            },
            {
                "idx": 3,
                "candidate": "find a list of all my cards in the database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3471733729044597,
                "back_trans_input": "Task: find a list of all my cards in the database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n### Hint\n\nThe endpoint will always have a *type*, it could be a",
                "back_trans_input_tokens_mean": -2.3465427433678863
            },
            {
                "idx": 4,
                "candidate": "Find all of the cards in your collection by TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.239280883471171,
                "back_trans_input": "Task: Find all of the cards in your collection by TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n### 1.1 Task (given)\n\nFind all of the cards in your collection by",
                "back_trans_input_tokens_mean": -2.2394237011934806
            },
            {
                "idx": 5,
                "candidate": "What is the name of an API that allows for creating my own card database?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4887523651123047,
                "back_trans_input": "Task: What is the name of an API that allows for creating my own card database?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_input_tokens_mean": -2.3394410317404226
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "how do you use the TCGdex API?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://api.tcgdex.net/v2/%7Blang%7D/variants'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/variants",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the value of a card. What API can I use?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7512614386422294,
                "back_trans_input": "Task: Find the value of a card. What API can I use?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Endpoint: `/api/tcg/v1/cards/{card_id}`",
                "back_trans_input_tokens_mean": -2.348042221756669
            },
            {
                "idx": 2,
                "candidate": "Add a list of cards from the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8717938576425824,
                "back_trans_input": "Task: Add a list of cards from the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://tcgplayerapi.com/docs](https://tcgplayerapi.",
                "back_trans_input_tokens_mean": -2.213856026933
            },
            {
                "idx": 3,
                "candidate": "what is an example of a TCGdex API endpoint?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0242460171381633,
                "back_trans_input": "Task: what is an example of a TCGdex API endpoint?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### **2.2.1.",
                "back_trans_input_tokens_mean": -2.1835593318080044
            },
            {
                "idx": 4,
                "candidate": "How do I get the name of a certain card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4654800097147624,
                "back_trans_input": "Task: How do I get the name of a certain card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nExample solution:\n\n\n```json\n{\n\t\"id\": \"get_card\",",
                "back_trans_input_tokens_mean": -2.3470982892797627
            },
            {
                "idx": 5,
                "candidate": "How do I find card images from the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.023954016821725,
                "back_trans_input": "Task: How do I find card images from the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# Task 2a\n\nThis time, we are going to generate an endpoint based on its identifier",
                "back_trans_input_tokens_mean": -2.2145931124687195
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Add a list of cards from the TCGdex API."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/variants\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/variants",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all cards with a specific artifact.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3510593501004307,
                "back_trans_input": "Task: Find all cards with a specific artifact.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input Format\n\nYou must submit your answer in JSON format.",
                "back_trans_input_tokens_mean": -2.3485824656936356
            },
            {
                "idx": 2,
                "candidate": "How can I check what cards from my collection are in a list?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7296244303385417,
                "back_trans_input": "Task: How can I check what cards from my collection are in a list?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task 2\n\nYou have been asked by your company to create an endpoint that allows users to",
                "back_trans_input_tokens_mean": -2.3587933608463834
            },
            {
                "idx": 3,
                "candidate": "Create a list of card types. Ask for the name of the API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3354883193969727,
                "back_trans_input": "Task: Create a list of card types. Ask for the name of the API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** Do not change the order in which these values appear on the page!",
                "back_trans_input_tokens_mean": -2.3980006149836948
            },
            {
                "idx": 4,
                "candidate": "Is there an API to get a list of all cards for Magic: The Gathering?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.015255630016327,
                "back_trans_input": "Task: Is there an API to get a list of all cards for Magic: The Gathering?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Part 2/3 (30 min)\n\nIn your code editor, create a file",
                "back_trans_input_tokens_mean": -2.254791491964589
            },
            {
                "idx": 5,
                "candidate": "Find the value of a specific card.nThe name of the API is TCGdex",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8158621083606373,
                "back_trans_input": "Task: Find the value of a specific card.nThe name of the API is TCGdex\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nEndpoint: https://tcg-api.",
                "back_trans_input_tokens_mean": -2.3494335362034984
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find the value of a specific card.nThe name of the API is TCGdex"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/variants\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/variants",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What are the different ways to use this API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.19990234375,
                "back_trans_input": "Task: What are the different ways to use this API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\nSolution:\n```python\nimport json\nfrom pprint import pprint\n\ndef main():",
                "back_trans_input_tokens_mean": -2.274327348779749
            },
            {
                "idx": 2,
                "candidate": "Identify the name of all cards in your deck.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2575905539772727,
                "back_trans_input": "Task: Identify the name of all cards in your deck.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Endpoint\n\n### Functionality\n\nIdentify the name of all cards in your deck.",
                "back_trans_input_tokens_mean": -2.2888394461737738
            },
            {
                "idx": 3,
                "candidate": "What APIs would someone use to query for all of the cards that are in a certain set?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5519428253173828,
                "back_trans_input": "Task: What APIs would someone use to query for all of the cards that are in a certain set?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 2.3 (Advanced)\n\nA user has requested a new function from your company",
                "back_trans_input_tokens_mean": -2.3012579567412024
            },
            {
                "idx": 4,
                "candidate": "Create a deck from the database of this API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.7563296231356533,
                "back_trans_input": "Task: Create a deck from the database of this API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You can find the endpoints in [`endpoints/api_v1.",
                "back_trans_input_tokens_mean": -2.434754583570692
            },
            {
                "idx": 5,
                "candidate": "List Magic: the Gathering card prices with the TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.674231469631195,
                "back_trans_input": "Task: List Magic: the Gathering card prices with the TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### How did we solve it?\n\n```javascript\nimport fetch from \"node-fetch\";\n",
                "back_trans_input_tokens_mean": -2.297558512006487
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "What are the different ways to use this API?"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/variants\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/variants",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "find a card type. TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3793154855569203,
                "back_trans_input": "Task: find a card type. TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Expected Output:** \n\n```json\n{\n    \"id\": \"find_card\",\n    \"",
                "back_trans_input_tokens_mean": -2.363727847735087
            },
            {
                "idx": 2,
                "candidate": "Find the name of a card from an image.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8125949772921476,
                "back_trans_input": "Task: Find the name of a card from an image.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You can find more endpoints here https://github.",
                "back_trans_input_tokens_mean": -2.2844240268071494
            },
            {
                "idx": 3,
                "candidate": "What is the full name of the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7923982968697181,
                "back_trans_input": "Task: What is the full name of the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nTask: What is the full name of the Github API?",
                "back_trans_input_tokens_mean": -2.1325905860007346
            },
            {
                "idx": 4,
                "candidate": "Identify all sets in the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.476583739121755,
                "back_trans_input": "Task: Identify all sets in the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Endpoint Identifier\n\nThe first part of your answer should be the endpoint identifier.",
                "back_trans_input_tokens_mean": -2.269582267201275
            },
            {
                "idx": 5,
                "candidate": "Find a card I need.?I want to find out what set the card is in.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4571460723876952,
                "back_trans_input": "Task: Find a card I need.?I want to find out what set the card is in.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Instructions\n\n * **Step 1:** Click on the \"Edit\" button at the top",
                "back_trans_input_tokens_mean": -2.4086123581590324
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "What is the full name of the TCGdex API?"
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/variants\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/variants",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Get a list of the latest card prices.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.425042724609375,
                "back_trans_input": "Task: Get a list of the latest card prices.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " v1\n\n## Input Format\n\nThe first line contains three integers N, M, and Q respectively ",
                "back_trans_input_tokens_mean": -2.286870463986263
            },
            {
                "idx": 2,
                "candidate": "What is the list of cards TCGdex uses?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5058025519053142,
                "back_trans_input": "Task: What is the list of cards TCGdex uses?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n## Endpoint: /v1/cards/{id}/sets/{setId}\n\n\n",
                "back_trans_input_tokens_mean": -2.25110775123943
            },
            {
                "idx": 3,
                "candidate": "Search for a card. Use the TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6893272655350822,
                "back_trans_input": "Task: Search for a card. Use the TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** All APIs are located in the `api/` directory.",
                "back_trans_input_tokens_mean": -2.243747751992028
            },
            {
                "idx": 4,
                "candidate": "What is the API name for looking up card details?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1508872292258523,
                "back_trans_input": "Task: What is the API name for looking up card details?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": ", https://github.com/tcgdevs/TCGdex",
                "back_trans_input_tokens_mean": -2.3120286814663387
            },
            {
                "idx": 5,
                "candidate": "What is the API name that allows me to lookup a card in TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9765692293643952,
                "back_trans_input": "Task: What is the API name that allows me to lookup a card in TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## Task 2\n\n**What is the API name that allows me to search cards by text search on",
                "back_trans_input_tokens_mean": -2.2300905914142213
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "Search for a card. Use the TCGdex API."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/variants\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/variants",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What can I do with the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6577617426713308,
                "back_trans_input": "Task: What can I do with the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoint you are looking for is named after its function.",
                "back_trans_input_tokens_mean": -2.165228167447177
            },
            {
                "idx": 2,
                "candidate": "find the name of all cards in my collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.256671142578125,
                "back_trans_input": "Task: find the name of all cards in my collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Solution\n\n```javascript\nfunction getCards(callback) {\n  let query = ",
                "back_trans_input_tokens_mean": -2.283817255938495
            },
            {
                "idx": 3,
                "candidate": "Find the name of a card.n",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6348827535455878,
                "back_trans_input": "Task: Find the name of a card.n\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solution \n```\nimport requests\nfrom json import loads, dumps\n\nendpoint_id =",
                "back_trans_input_tokens_mean": -2.3740154842160783
            },
            {
                "idx": 4,
                "candidate": "What are all the cards in Magic: The Gathering?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8288505872090658,
                "back_trans_input": "Task: What are all the cards in Magic: The Gathering?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### How do I solve it?\n\nThe solution can be found on GitHub with the following link:",
                "back_trans_input_tokens_mean": -2.2508231696732546
            },
            {
                "idx": 5,
                "candidate": "To retrieve all the information on a given card, like its cost, and whether it makes an effect or",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.200275247747248,
                "back_trans_input": "Task: To retrieve all the information on a given card, like its cost, and whether it makes an effect or\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Expected Output Format\n\n1. Endpoint ID:\n2.",
                "back_trans_input_tokens_mean": -2.5057372085186613
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "What can I do with the TCGdex API?"
        }
    },
    {
        "api_call": "curl --request GET \\\n  --url https://api.tcgdex.net/v2/%7Blang%7D/variants/%7Bvariant%7D",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/variants/{variant}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Add a card to the TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.5335092544555664,
                "back_trans_input": "Task: Add a card to the TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n  \"function\": \"add\",\n  \"description\": \"Add a new",
                "back_trans_input_tokens_mean": -2.2162644841052868
            },
            {
                "idx": 2,
                "candidate": "Find the card cost of a card from my collection.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3625129063924153,
                "back_trans_input": "Task: Find the card cost of a card from my collection.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n![](https://i.imgur.",
                "back_trans_input_tokens_mean": -2.3231171642968413
            },
            {
                "idx": 3,
                "candidate": "find cards in magic format from mtg.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.583374717018821,
                "back_trans_input": "Task: find cards in magic format from mtg.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [Hints](https://github.",
                "back_trans_input_tokens_mean": -2.500093716327275
            },
            {
                "idx": 4,
                "candidate": "Find a card's statistics, stats are needed for Magic the Gathering and other trading card games",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.462019150907343,
                "back_trans_input": "Task: Find a card&#x27;s statistics, stats are needed for Magic the Gathering and other trading card games\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task2\n\nYou will be given a task for which an endpoint is useful.",
                "back_trans_input_tokens_mean": -2.4026530305544536
            },
            {
                "idx": 5,
                "candidate": "Find out if the card \"Sword of Fire and Ice\" has any alternate names in English or French",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6257998726584695,
                "back_trans_input": "Task: Find out if the card &quot;Sword of Fire and Ice&quot; has any alternate names in English or French\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## --- Part Two ---\n\nThe second part asks you to make a GET request using the",
                "back_trans_input_tokens_mean": -2.293895834876645
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "Add a card to the TCGdex."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://api.tcgdex.net/v2/%7Blang%7D/variants/%7Bvariant%7D\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/variants/{variant}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the best value for a card. Use this API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3399662604698768,
                "back_trans_input": "Task: Find the best value for a card. Use this API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## -->\n```\n\nThis should output something like: \n\n```javascript\n{\n  \"id",
                "back_trans_input_tokens_mean": -2.3998911512007406
            },
            {
                "idx": 2,
                "candidate": "What card does the dex number of a specific card?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.6346036470853365,
                "back_trans_input": "Task: What card does the dex number of a specific card?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Hint:** The function that performs your task can be found in this file: [src/TC",
                "back_trans_input_tokens_mean": -2.4829736477738127
            },
            {
                "idx": 3,
                "candidate": "Search for specific card in the database?. Asking for TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3538834585083857,
                "back_trans_input": "Task: Search for specific card in the database?. Asking for TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n{\n    \"id\": \"c7b2f5e8-2a",
                "back_trans_input_tokens_mean": -2.5044486185090733
            },
            {
                "idx": 4,
                "candidate": "Find prices of magic: the gathering cards. Use TCGdex API for this task",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3564528540561074,
                "back_trans_input": "Task: Find prices of magic: the gathering cards. Use TCGdex API for this task\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n[https://tcgplayerapi.com/docs](https://tcgplayerapi.",
                "back_trans_input_tokens_mean": -2.3073565117244064
            },
            {
                "idx": 5,
                "candidate": "Find all of the cards in a deck using TCGdex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9307671263813972,
                "back_trans_input": "Task: Find all of the cards in a deck using TCGdex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\nThis challenge was created by [The Coding Bootcamp](https://www.",
                "back_trans_input_tokens_mean": -2.2358275204896927
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find all of the cards in a deck using TCGdex API"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://api.tcgdex.net/v2/%7Blang%7D/variants/%7Bvariant%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/variants/{variant}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find all of the cards that are in a specific set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8177173321063702,
                "back_trans_input": "Task: Find all of the cards that are in a specific set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# 🏆 Solution\n\n ```js\nexport async function getCardsBySet(setName)",
                "back_trans_input_tokens_mean": -2.2344011133367365
            },
            {
                "idx": 2,
                "candidate": "Use the TCGdex API to create a list of cards.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.740036424001058,
                "back_trans_input": "Task: Use the TCGdex API to create a list of cards.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Input Format\n\nThe first line contains integers n and t (n ≤ 1000;",
                "back_trans_input_tokens_mean": -2.2003295762198314
            },
            {
                "idx": 3,
                "candidate": "Find the card with a certain name. The API is called TCGdex API.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8625279915960211,
                "back_trans_input": "Task: Find the card with a certain name. The API is called TCGdex API.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n<h2>Input</h2>\nA list of tuples containing endpoint information in the following",
                "back_trans_input_tokens_mean": -2.2139500543988984
            },
            {
                "idx": 4,
                "candidate": "find all the cards of a specific set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0276416778564452,
                "back_trans_input": "Task: find all the cards of a specific set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n```javascript{2}\nlet id = \"get_cards\";\nlet func",
                "back_trans_input_tokens_mean": -2.255014187821718
            },
            {
                "idx": 5,
                "candidate": "How do I get the list of cards for a particular set?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8961181640625,
                "back_trans_input": "Task: How do I get the list of cards for a particular set?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n### [Previous Exercise](./2_1) | [Next Exercise](.",
                "back_trans_input_tokens_mean": -2.2378608428680145
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Use the TCGdex API to create a list of cards."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"api.tcgdex.net\")\n\nconn.request(\"GET\", \"/v2/%7Blang%7D/variants/%7Bvariant%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/variants/{variant}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find the number of times a card was played.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1098612005060369,
                "back_trans_input": "Task: Find the number of times a card was played.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n##### Task 2\n\nYou need to find all cards with an attribute named name that equals ",
                "back_trans_input_tokens_mean": -2.2304841853954174
            },
            {
                "idx": 2,
                "candidate": "Find the price of a specific card in USD.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8968146931041371,
                "back_trans_input": "Task: Find the price of a specific card in USD.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Instructions\n\n1. Copy the code from endpoints/price_in_usd_endpoint.",
                "back_trans_input_tokens_mean": -2.2571609991568105
            },
            {
                "idx": 3,
                "candidate": "What can I do with the TCGdex API?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.6569498678048452,
                "back_trans_input": "Task: What can I do with the TCGdex API?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Solution\n\nThe solution file contains all endpoints of the above APIs.",
                "back_trans_input_tokens_mean": -2.165228167447177
            },
            {
                "idx": 4,
                "candidate": "how to get the list of all card names from tcgdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1031148573931526,
                "back_trans_input": "Task: how to get the list of all card names from tcgdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** The endpoints are located in the file named `endpoints_to_reconstruct.",
                "back_trans_input_tokens_mean": -2.3220692021506175
            },
            {
                "idx": 5,
                "candidate": "How do I use the TCGdex API for my website?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9413086516516549,
                "back_trans_input": "Task: How do I use the TCGdex API for my website?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Submitting Incomplete Solutions\nIt's possible to submit an incomplete solution so you can see",
                "back_trans_input_tokens_mean": -2.230330433164324
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "What can I do with the TCGdex API?"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.tcgdex.net/v2/%7Blang%7D/variants/%7Bvariant%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/variants/{variant}",
        "method": "get",
        "lang": "go",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "What API can I go to to look up card details?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5259666442871094,
                "back_trans_input": "Task: What API can I go to to look up card details?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Step 2: Implement endpoint\n\nImplement your endpoint using the information provided in step 1.",
                "back_trans_input_tokens_mean": -2.3553923520174895
            },
            {
                "idx": 2,
                "candidate": "Find information on the card \"Wilt-Draw\".",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.9654447115384615,
                "back_trans_input": "Task: Find information on the card &quot;Wilt-Draw&quot;.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n## [Previous section](https://github.",
                "back_trans_input_tokens_mean": -2.4713467715079322
            },
            {
                "idx": 3,
                "candidate": "To find every single card of a specific set in the TCGdex API,",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3182406990151656,
                "back_trans_input": "Task: To find every single card of a specific set in the TCGdex API,\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### [TCGdex Card List](https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.247103674515434
            },
            {
                "idx": 4,
                "candidate": "Add cards to my deck. What api do I need to use?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.4481836954752605,
                "back_trans_input": "Task: Add cards to my deck. What api do I need to use?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n\n## 1. Identify the endpoint in your codebase\n\n### 1.",
                "back_trans_input_tokens_mean": -2.392512083053589
            },
            {
                "idx": 5,
                "candidate": "search for a card by name.? I'm looking for the TCG dex API",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.0000503687631517,
                "back_trans_input": "Task: search for a card by name.? I&#x27;m looking for the TCG dex API\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": " \n\nAnswer: \nhttps://pokeapi.",
                "back_trans_input_tokens_mean": -2.446285409442449
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "search for a card by name.? I'm looking for the TCG dex API"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://api.tcgdex.net/v2/%7Blang%7D/variants/%7Bvariant%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/variants/{variant}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find a list of cards in the TCG database.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9512047270933787,
                "back_trans_input": "Task: Find a list of cards in the TCG database.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nTask: Get all decks by user id.",
                "back_trans_input_tokens_mean": -2.2400934411845075
            },
            {
                "idx": 2,
                "candidate": "What is the TCGdex API endpoint for determining an official set?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.248239748618182,
                "back_trans_input": "Task: What is the TCGdex API endpoint for determining an official set?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nThe correct answer can be found in the file named `solution`.",
                "back_trans_input_tokens_mean": -2.27636513667824
            },
            {
                "idx": 3,
                "candidate": "what card have been viewed the most times this season?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.717092514038086,
                "back_trans_input": "Task: what card have been viewed the most times this season?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "v2\n\n## Endpoints\n\n### /top_cards/{card_id}\n\nReturns top",
                "back_trans_input_tokens_mean": -2.4559169034345434
            },
            {
                "idx": 4,
                "candidate": "how do you create a list on TCGdex?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1888636442331166,
                "back_trans_input": "Task: how do you create a list on TCGdex?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## Task\n\nCreate an endpoint that allows users to search their cards based on card names or keywords from",
                "back_trans_input_tokens_mean": -2.292115410891446
            },
            {
                "idx": 5,
                "candidate": "What is the name of the API to get a list of all magic cards?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.7926671645220589,
                "back_trans_input": "Task: What is the name of the API to get a list of all magic cards?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": ".\n\nThe correct answer should look like:\n\n```bash\nGET https://api.",
                "back_trans_input_tokens_mean": -2.2099665256968715
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "What is the name of the API to get a list of all magic cards?"
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tcgdex.net/v2/%7Blang%7D/variants/%7Bvariant%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/variants/{variant}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "Find which cards were reprinted in the \"Magic\" TCG.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.3036016747355461,
                "back_trans_input": "Task: Find which cards were reprinted in the &quot;Magic&quot; TCG.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n## 3.2 [**Find the cards that have been printed only once.",
                "back_trans_input_tokens_mean": -2.3163028028276234
            },
            {
                "idx": 2,
                "candidate": "Find the name and type of a card.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.9122224807739258,
                "back_trans_input": "Task: Find the name and type of a card.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n### Task 3\n\nYou are given the following information about one of the endpoints in the `",
                "back_trans_input_tokens_mean": -2.2904870042177006
            },
            {
                "idx": 3,
                "candidate": "Find every card in a Magic the Gathering Set.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.31331663330396,
                "back_trans_input": "Task: Find every card in a Magic the Gathering Set.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n***\n\nTask: Find all cards that are part of the \"Magic Origins\" set.",
                "back_trans_input_tokens_mean": -2.3472652678136474
            },
            {
                "idx": 4,
                "candidate": "spit out the name of all cards in TCGdex.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.2127462863922118,
                "back_trans_input": "Task: spit out the name of all cards in TCGdex.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\nFor example, if I were to generate these values from scratch for the above API, my",
                "back_trans_input_tokens_mean": -2.270015793877679
            },
            {
                "idx": 5,
                "candidate": "Find the cost and rarity of a card in a certain format.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.1059121489524841,
                "back_trans_input": "Task: Find the cost and rarity of a card in a certain format.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```javascript\n{\n  \"id\": \"https://tcgplayer.",
                "back_trans_input_tokens_mean": -2.310482557829436
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "Find the name and type of a card."
        }
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://api.tcgdex.net/v2/%7Blang%7D/variants/%7Bvariant%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "TCGdex API",
        "api_provider": "tcgdex.net",
        "endpoint": "",
        "framework": "tcgdex.net",
        "functionality": "",
        "api_arguments": {},
        "description": "",
        "path": "/variants/{variant}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "filters"
        ],
        "api_description": "A Multilanguage Pokémon TCG Database with Cards Pictures and most of the informations contained on the cards.\nYou can find out more about TCGdex at [https://www.tcgdex.net](https://www.tcgdex.net) or on [Discord](https://discord.gg/NehYTAhsZE).",
        "api_license": {
            "name": "MIT License",
            "url": "https://github.com/tcgdex/cards-database/blob/master/LICENSE"
        },
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "api to search for TCG cards.?",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.5272432804107665,
                "back_trans_input": "Task: api to search for TCG cards.?\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n---\n\n\n**Hints:** \n\n* Think about what kind of information should be in each field.",
                "back_trans_input_tokens_mean": -2.4366193447472915
            },
            {
                "idx": 2,
                "candidate": "Get all the cards a specified card in Magic the Gathering.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.0243697251592363,
                "back_trans_input": "Task: Get all the cards a specified card in Magic the Gathering.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n**Note:** You can find more information on how the endpoints look like by visiting https://tcgplayer",
                "back_trans_input_tokens_mean": -2.3676239360462534
            },
            {
                "idx": 3,
                "candidate": "Use which API to find the list of all cards that have been voted for in each specific format.",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -2.000701904296875,
                "back_trans_input": "Task: Use which API to find the list of all cards that have been voted for in each specific format.\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n# --hints--\n\nThis question requires some knowledge about endpoints.",
                "back_trans_input_tokens_mean": -2.433945510347011
            },
            {
                "idx": 4,
                "candidate": "Find a card. Name the API. Use it to find cards, their names, and other relevant information",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -1.354754014448686,
                "back_trans_input": "Task: Find a card. Name the API. Use it to find cards, their names, and other relevant information\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\n\n```json\n\"https://api.tcgplayer.",
                "back_trans_input_tokens_mean": -2.402574202593635
            },
            {
                "idx": 5,
                "candidate": "Find the value of a card. The name of the API is TCGdex and it has end",
                "input_text": "Functionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "gen_tokens_mean": -0.8833724477074363,
                "back_trans_input": "Task: Find the value of a card. The name of the API is TCGdex and it has end\n\nFunctionality: \nDescription: \nEndpoint: \n\nAPI: TCGdex API",
                "back_trans_gen_text": "\nEndpoint ID: \n\nFunctionality: \n\nDescription: \n\nEndpoint: \n\n",
                "back_trans_input_tokens_mean": -2.3238455387724546
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "Find the value of a card. The name of the API is TCGdex and it has end"
        }
    }
]