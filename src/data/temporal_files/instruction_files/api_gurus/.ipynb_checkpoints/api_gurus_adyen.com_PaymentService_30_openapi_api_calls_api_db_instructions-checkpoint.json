[
    {
        "api_call": "curl --request POST \\\n  --url https://pal-test.adyen.com/pal/servlet/Payment/v30/adjustAuthorisation \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"additionalData\":{\"property1\":\"string\",\"property2\":\"string\",\"allow3DS2\":\"string\",\"challengeWindowSize\":\"01\",\"executeThreeD\":\"string\",\"mpiImplementationType\":\"string\",\"scaExemption\":\"string\",\"threeDSVersion\":\"string\"},\"merchantAccount\":\"string\",\"modificationAmount\":{\"currency\":\"str\",\"value\":0},\"originalMerchantReference\":\"string\",\"originalReference\":\"string\",\"reference\":\"string\",\"tenderReference\":\"string\",\"uniqueTerminalId\":\"string\"}'",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-adjustAuthorisation",
        "framework": "adyen.com",
        "functionality": "Change the authorised amount",
        "api_arguments": {},
        "description": "Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.",
        "path": "/adjustAuthorisation",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9806456868350685
            },
            {
                "idx": 2,
                "candidate": "I want to increase the authorised amount for a previous payment using the Adyen Payment API. Can you help me with that?",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to increase the authorised amount for a previous payment using the Adyen Payment API. Can you help me with that?\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0166063076606449
            },
            {
                "idx": 3,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0108292341601157
            },
            {
                "idx": 4,
                "candidate": "I want to increase the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the endpoint post-adjustAuthorisation.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to increase the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the endpoint post-adjustAuthorisation.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9775000179207665
            },
            {
                "idx": 5,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9806456868350685
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "I want to increase the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the endpoint post-adjustAuthorisation."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/adjustAuthorisation\")\n  .post(body)\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-adjustAuthorisation",
        "framework": "adyen.com",
        "functionality": "Change the authorised amount",
        "api_arguments": {},
        "description": "Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.",
        "path": "/adjustAuthorisation",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to increase the authorised amount of a previous payment using the Adyen Payment API. How do I make a request to the post-adjustAuthorisation endpoint?",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to increase the authorised amount of a previous payment using the Adyen Payment API. How do I make a request to the post-adjustAuthorisation endpoint?\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.994762372689897
            },
            {
                "idx": 2,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0115874633270294
            },
            {
                "idx": 3,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0115874633270294
            },
            {
                "idx": 4,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0108292341601157
            },
            {
                "idx": 5,
                "candidate": "I want to modify the authorised amount for a previous payment using the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to modify the authorised amount for a previous payment using the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0056157520168068
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I want to increase the authorised amount of a previous payment using the Adyen Payment API. How do I make a request to the post-adjustAuthorisation endpoint?"
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://pal-test.adyen.com/pal/servlet/Payment/v30/adjustAuthorisation',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH', 'content-type': 'application/json'},\n  body: {\n    additionalData: {\n      property1: 'string',\n      property2: 'string',\n      allow3DS2: 'string',\n      challengeWindowSize: '01',\n      executeThreeD: 'string',\n      mpiImplementationType: 'string',\n      scaExemption: 'string',\n      threeDSVersion: 'string'\n    },\n    merchantAccount: 'string',\n    modificationAmount: {currency: 'str', value: 0},\n    originalMerchantReference: 'string',\n    originalReference: 'string',\n    reference: 'string',\n    tenderReference: 'string',\n    uniqueTerminalId: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-adjustAuthorisation",
        "framework": "adyen.com",
        "functionality": "Change the authorised amount",
        "api_arguments": {},
        "description": "Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.",
        "path": "/adjustAuthorisation",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9806456868350685
            },
            {
                "idx": 2,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0115874633270294
            },
            {
                "idx": 3,
                "candidate": "I want to modify the amount of a previous authorisation using the Adyen Payment API. Please show me an example of how to use the endpoint post-adjustAuthorisation.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to modify the amount of a previous authorisation using the Adyen Payment API. Please show me an example of how to use the endpoint post-adjustAuthorisation.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9860978357867923
            },
            {
                "idx": 4,
                "candidate": "I'd like to change the authorised amount for a previous payment using the Adyen Payment API.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to change the authorised amount for a previous payment using the Adyen Payment API.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0208014541414931
            },
            {
                "idx": 5,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0115874633270294
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"pal-test.adyen.com\")\n\npayload = \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\"\n\nheaders = {\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/pal/servlet/Payment/v30/adjustAuthorisation\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-adjustAuthorisation",
        "framework": "adyen.com",
        "functionality": "Change the authorised amount",
        "api_arguments": {},
        "description": "Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.",
        "path": "/adjustAuthorisation",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to change the amount of a previously authorised payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the amount of a previously authorised payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9819155775874677
            },
            {
                "idx": 2,
                "candidate": "I'd like to change the amount of a previous authorisation using the Adyen Payment API. Could you please help me with that using the post-adjustAuthorisation endpoint?",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to change the amount of a previous authorisation using the Adyen Payment API. Could you please help me with that using the post-adjustAuthorisation endpoint?\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.99629064014586
            },
            {
                "idx": 3,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0108292341601157
            },
            {
                "idx": 4,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9806456868350685
            },
            {
                "idx": 5,
                "candidate": "I'd like to change the authorised amount for a previous payment using the Adyen Payment API. Please provide an example of how to use the post-adjustAuthorisation endpoint for this purpose.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to change the authorised amount for a previous payment using the Adyen Payment API. Please provide an example of how to use the post-adjustAuthorisation endpoint for this purpose.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.995220208121064
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://pal-test.adyen.com/pal/servlet/Payment/v30/adjustAuthorisation\"\n\n\tpayload := strings.NewReader(\"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-adjustAuthorisation",
        "framework": "adyen.com",
        "functionality": "Change the authorised amount",
        "api_arguments": {},
        "description": "Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.",
        "path": "/adjustAuthorisation",
        "method": "post",
        "lang": "go",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9806456868350685
            },
            {
                "idx": 2,
                "candidate": "I would like to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI would like to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9829435499974839
            },
            {
                "idx": 3,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9806456868350685
            },
            {
                "idx": 4,
                "candidate": "I'd like to change the amount of a previous authorisation with Adyen Payment API. How can I use the endpoint post-adjustAuthorisation for this purpose?",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to change the amount of a previous authorisation with Adyen Payment API. How can I use the endpoint post-adjustAuthorisation for this purpose?\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0017760997662875
            },
            {
                "idx": 5,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0115874633270294
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/adjustAuthorisation\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-adjustAuthorisation",
        "framework": "adyen.com",
        "functionality": "Change the authorised amount",
        "api_arguments": {},
        "description": "Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.",
        "path": "/adjustAuthorisation",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9806456868350685
            },
            {
                "idx": 2,
                "candidate": "I'd like to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9889549968025725
            },
            {
                "idx": 3,
                "candidate": "I'd like to modify the authorised amount for a previous payment using the Adyen Payment API. Can you help me with that?",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to modify the authorised amount for a previous payment using the Adyen Payment API. Can you help me with that?\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0160065157717173
            },
            {
                "idx": 4,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0108292341601157
            },
            {
                "idx": 5,
                "candidate": "I'd like to change the authorised amount for a previous payment using the Adyen Payment API.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to change the authorised amount for a previous payment using the Adyen Payment API.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0208014541414931
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://pal-test.adyen.com/pal/servlet/Payment/v30/adjustAuthorisation\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-adjustAuthorisation",
        "framework": "adyen.com",
        "functionality": "Change the authorised amount",
        "api_arguments": {},
        "description": "Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.",
        "path": "/adjustAuthorisation",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to change the amount of a previous authorisation using the Adyen Payment API. Can you provide an example of how to use the post-adjustAuthorisation endpoint for this purpose?",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to change the amount of a previous authorisation using the Adyen Payment API. Can you provide an example of how to use the post-adjustAuthorisation endpoint for this purpose?\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0051447170322314
            },
            {
                "idx": 2,
                "candidate": "I'd like to change the amount of a previous authorisation with the Adyen Payment API. Please help me with that using the endpoint post-adjustAuthorisation.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to change the amount of a previous authorisation with the Adyen Payment API. Please help me with that using the endpoint post-adjustAuthorisation.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9890942396726204
            },
            {
                "idx": 3,
                "candidate": "I want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0108292341601157
            },
            {
                "idx": 4,
                "candidate": "I want to modify the initial authorised amount for a payment using the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to modify the initial authorised amount for a payment using the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.994902926386647
            },
            {
                "idx": 5,
                "candidate": "I want to increase the authorised amount of a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to increase the authorised amount of a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9847457879285134
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I want to increase the authorised amount of a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint."
        }
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"additionalData\": [\n    \"property1\": \"string\",\n    \"property2\": \"string\",\n    \"allow3DS2\": \"string\",\n    \"challengeWindowSize\": \"01\",\n    \"executeThreeD\": \"string\",\n    \"mpiImplementationType\": \"string\",\n    \"scaExemption\": \"string\",\n    \"threeDSVersion\": \"string\"\n  ],\n  \"merchantAccount\": \"string\",\n  \"modificationAmount\": [\n    \"currency\": \"str\",\n    \"value\": 0\n  ],\n  \"originalMerchantReference\": \"string\",\n  \"originalReference\": \"string\",\n  \"reference\": \"string\",\n  \"tenderReference\": \"string\",\n  \"uniqueTerminalId\": \"string\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://pal-test.adyen.com/pal/servlet/Payment/v30/adjustAuthorisation\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-adjustAuthorisation",
        "framework": "adyen.com",
        "functionality": "Change the authorised amount",
        "api_arguments": {},
        "description": "Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.",
        "path": "/adjustAuthorisation",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I would like to change the authorised amount for a previous payment using the Adyen Payment API.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI would like to change the authorised amount for a previous payment using the Adyen Payment API.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0133295811464922
            },
            {
                "idx": 2,
                "candidate": "I want to increase the authorised amount for a previous payment using the Adyen Payment API. How can I do this?",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to increase the authorised amount for a previous payment using the Adyen Payment API. How can I do this?\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -1.0197295895387741
            },
            {
                "idx": 3,
                "candidate": "I want to increase the authorised amount of a payment using the Adyen Payment API. Please help me with that using the endpoint post-adjustAuthorisation.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to increase the authorised amount of a payment using the Adyen Payment API. Please help me with that using the endpoint post-adjustAuthorisation.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9737853468475373
            },
            {
                "idx": 4,
                "candidate": "I'd like to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to change the authorised amount for a previous payment using the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9889549968025725
            },
            {
                "idx": 5,
                "candidate": "I'd like to change the amount of a previous authorisation with the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.",
                "input_text": "Functionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to change the amount of a previous authorisation with the Adyen Payment API. Please help me with that using the post-adjustAuthorisation endpoint.\n###Output:\nFunctionality: Change the authorised amount\nDescription: Allows you to increase or decrease the authorised amount after the initial authorisation has taken place. This functionality enables for example tipping, improving the chances your authorisation will be valid, or charging the shopper when they have already left the merchant premises.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce).\n> If you have a [newer integration](https://docs.adyen.com/online-payments), and are doing:\n> * [Asynchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use the [`/payments/{paymentPspReference}/amountUpdates`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/amountUpdates) endpoint on Checkout API.\n> * [Synchronous adjustments](https://docs.adyen.com/online-payments/adjust-authorisation#asynchronous-or-synchronous-adjustment), use this endpoint.\nEndpoint: post-adjustAuthorisation\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9922515380164391
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "I want to increase the authorised amount of a payment using the Adyen Payment API. Please help me with that using the endpoint post-adjustAuthorisation."
        }
    },
    {
        "api_call": "curl --request POST \\\n  --url https://pal-test.adyen.com/pal/servlet/Payment/v30/authorise \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"additionalAmount\":{\"currency\":\"str\",\"value\":0},\"additionalData\":{\"property1\":\"string\",\"property2\":\"string\",\"allow3DS2\":\"string\",\"challengeWindowSize\":\"01\",\"executeThreeD\":\"string\",\"mpiImplementationType\":\"string\",\"scaExemption\":\"string\",\"threeDSVersion\":\"string\"},\"amount\":{\"currency\":\"str\",\"value\":0},\"bankAccount\":{\"bankAccountNumber\":\"string\",\"bankCity\":\"string\",\"bankLocationId\":\"string\",\"bankName\":\"string\",\"bic\":\"string\",\"countryCode\":\"string\",\"iban\":\"string\",\"ownerName\":\"string\",\"taxId\":\"string\"},\"billingAddress\":{\"city\":\"string\",\"country\":\"string\",\"houseNumberOrName\":\"string\",\"postalCode\":\"string\",\"stateOrProvince\":\"string\",\"street\":\"string\"},\"browserInfo\":{\"acceptHeader\":\"string\",\"userAgent\":\"string\"},\"captureDelayHours\":0,\"card\":{\"cvc\":\"string\",\"expiryMonth\":\"st\",\"expiryYear\":\"stri\",\"holderName\":\"string\",\"issueNumber\":\"st\",\"number\":\"string\",\"startMonth\":\"st\",\"startYear\":\"stri\"},\"dateOfBirth\":\"2019-08-24\",\"dccQuote\":{\"account\":\"string\",\"accountType\":\"string\",\"baseAmount\":{\"currency\":\"str\",\"value\":0},\"basePoints\":0,\"buy\":{\"currency\":\"str\",\"value\":0},\"interbank\":{\"currency\":\"str\",\"value\":0},\"reference\":\"string\",\"sell\":{\"currency\":\"str\",\"value\":0},\"signature\":\"string\",\"source\":\"string\",\"type\":\"string\",\"validTill\":\"2019-08-24T14:15:22Z\"},\"deliveryAddress\":{\"city\":\"string\",\"country\":\"string\",\"houseNumberOrName\":\"string\",\"postalCode\":\"string\",\"stateOrProvince\":\"string\",\"street\":\"string\"},\"deliveryDate\":\"2019-08-24T14:15:22Z\",\"deviceFingerprint\":\"string\",\"entityType\":\"NaturalPerson\",\"fraudOffset\":0,\"installments\":{\"value\":0},\"mandate\":{\"amount\":\"string\",\"amountRule\":\"max\",\"billingAttemptsRule\":true,\"billingDay\":\"string\",\"endsAt\":\"string\",\"frequency\":\"adhoc\",\"remarks\":\"string\",\"startsAt\":\"string\"},\"mcc\":\"string\",\"merchantAccount\":\"string\",\"merchantOrderReference\":\"string\",\"metadata\":{\"property1\":\"string\",\"property2\":\"string\"},\"mpiData\":{\"authenticationResponse\":\"Y\",\"cavv\":\"string\",\"cavvAlgorithm\":\"string\",\"directoryResponse\":\"A\",\"eci\":\"string\",\"xid\":\"string\"},\"nationality\":\"st\",\"orderReference\":\"string\",\"recurring\":{\"contract\":\"ONECLICK\",\"recurringDetailName\":\"string\",\"tokenService\":\"VISATOKENSERVICE\"},\"recurringProcessingModel\":\"CardOnFile\",\"reference\":\"string\",\"selectedBrand\":\"string\",\"selectedRecurringDetailReference\":\"string\",\"sessionId\":\"string\",\"shopperEmail\":\"string\",\"shopperIP\":\"string\",\"shopperInteraction\":\"Ecommerce\",\"shopperLocale\":\"string\",\"shopperName\":{\"firstName\":\"string\",\"lastName\":\"string\"},\"shopperReference\":\"string\",\"shopperStatement\":\"string\",\"socialSecurityNumber\":\"string\",\"store\":\"string\",\"telephoneNumber\":\"string\",\"totalsGroup\":\"string\"}'",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-authorise",
        "framework": "adyen.com",
        "functionality": "Create an authorisation",
        "api_arguments": {},
        "description": "Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.",
        "path": "/authorise",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Payments"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the endpoint post-authorise for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the endpoint post-authorise for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9082986934700618
            },
            {
                "idx": 2,
                "candidate": "I would like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide me with an example of how to use the endpoint post-authorise for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI would like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide me with an example of how to use the endpoint post-authorise for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9013087150155059
            },
            {
                "idx": 3,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please help me with that using the post-authorise endpoint?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please help me with that using the post-authorise endpoint?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9010955215154255
            },
            {
                "idx": 4,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9052472088964245
            },
            {
                "idx": 5,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the endpoint post-authorise for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the endpoint post-authorise for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9082986934700618
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please help me with that using the post-authorise endpoint?"
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"additionalAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"amount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"bankAccount\\\":{\\\"bankAccountNumber\\\":\\\"string\\\",\\\"bankCity\\\":\\\"string\\\",\\\"bankLocationId\\\":\\\"string\\\",\\\"bankName\\\":\\\"string\\\",\\\"bic\\\":\\\"string\\\",\\\"countryCode\\\":\\\"string\\\",\\\"iban\\\":\\\"string\\\",\\\"ownerName\\\":\\\"string\\\",\\\"taxId\\\":\\\"string\\\"},\\\"billingAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"browserInfo\\\":{\\\"acceptHeader\\\":\\\"string\\\",\\\"userAgent\\\":\\\"string\\\"},\\\"captureDelayHours\\\":0,\\\"card\\\":{\\\"cvc\\\":\\\"string\\\",\\\"expiryMonth\\\":\\\"st\\\",\\\"expiryYear\\\":\\\"stri\\\",\\\"holderName\\\":\\\"string\\\",\\\"issueNumber\\\":\\\"st\\\",\\\"number\\\":\\\"string\\\",\\\"startMonth\\\":\\\"st\\\",\\\"startYear\\\":\\\"stri\\\"},\\\"dateOfBirth\\\":\\\"2019-08-24\\\",\\\"dccQuote\\\":{\\\"account\\\":\\\"string\\\",\\\"accountType\\\":\\\"string\\\",\\\"baseAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"basePoints\\\":0,\\\"buy\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"interbank\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"reference\\\":\\\"string\\\",\\\"sell\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"signature\\\":\\\"string\\\",\\\"source\\\":\\\"string\\\",\\\"type\\\":\\\"string\\\",\\\"validTill\\\":\\\"2019-08-24T14:15:22Z\\\"},\\\"deliveryAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"deliveryDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"deviceFingerprint\\\":\\\"string\\\",\\\"entityType\\\":\\\"NaturalPerson\\\",\\\"fraudOffset\\\":0,\\\"installments\\\":{\\\"value\\\":0},\\\"mandate\\\":{\\\"amount\\\":\\\"string\\\",\\\"amountRule\\\":\\\"max\\\",\\\"billingAttemptsRule\\\":true,\\\"billingDay\\\":\\\"string\\\",\\\"endsAt\\\":\\\"string\\\",\\\"frequency\\\":\\\"adhoc\\\",\\\"remarks\\\":\\\"string\\\",\\\"startsAt\\\":\\\"string\\\"},\\\"mcc\\\":\\\"string\\\",\\\"merchantAccount\\\":\\\"string\\\",\\\"merchantOrderReference\\\":\\\"string\\\",\\\"metadata\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"mpiData\\\":{\\\"authenticationResponse\\\":\\\"Y\\\",\\\"cavv\\\":\\\"string\\\",\\\"cavvAlgorithm\\\":\\\"string\\\",\\\"directoryResponse\\\":\\\"A\\\",\\\"eci\\\":\\\"string\\\",\\\"xid\\\":\\\"string\\\"},\\\"nationality\\\":\\\"st\\\",\\\"orderReference\\\":\\\"string\\\",\\\"recurring\\\":{\\\"contract\\\":\\\"ONECLICK\\\",\\\"recurringDetailName\\\":\\\"string\\\",\\\"tokenService\\\":\\\"VISATOKENSERVICE\\\"},\\\"recurringProcessingModel\\\":\\\"CardOnFile\\\",\\\"reference\\\":\\\"string\\\",\\\"selectedBrand\\\":\\\"string\\\",\\\"selectedRecurringDetailReference\\\":\\\"string\\\",\\\"sessionId\\\":\\\"string\\\",\\\"shopperEmail\\\":\\\"string\\\",\\\"shopperIP\\\":\\\"string\\\",\\\"shopperInteraction\\\":\\\"Ecommerce\\\",\\\"shopperLocale\\\":\\\"string\\\",\\\"shopperName\\\":{\\\"firstName\\\":\\\"string\\\",\\\"lastName\\\":\\\"string\\\"},\\\"shopperReference\\\":\\\"string\\\",\\\"shopperStatement\\\":\\\"string\\\",\\\"socialSecurityNumber\\\":\\\"string\\\",\\\"store\\\":\\\"string\\\",\\\"telephoneNumber\\\":\\\"string\\\",\\\"totalsGroup\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\")\n  .post(body)\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-authorise",
        "framework": "adyen.com",
        "functionality": "Create an authorisation",
        "api_arguments": {},
        "description": "Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.",
        "path": "/authorise",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Payments"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Please help me construct the request for the post-authorise endpoint.",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Please help me construct the request for the post-authorise endpoint.\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9042185587729045
            },
            {
                "idx": 2,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Please help me construct a request for the post-authorise endpoint.",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Please help me construct a request for the post-authorise endpoint.\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8956690633456872
            },
            {
                "idx": 3,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9052472088964245
            },
            {
                "idx": 4,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold for it. Could you please provide an example of how to use the endpoint post-authorise for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold for it. Could you please provide an example of how to use the endpoint post-authorise for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9150714561307046
            },
            {
                "idx": 5,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9052472088964245
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Please help me construct a request for the post-authorise endpoint."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://pal-test.adyen.com/pal/servlet/Payment/v30/authorise',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH', 'content-type': 'application/json'},\n  body: {\n    additionalAmount: {currency: 'str', value: 0},\n    additionalData: {\n      property1: 'string',\n      property2: 'string',\n      allow3DS2: 'string',\n      challengeWindowSize: '01',\n      executeThreeD: 'string',\n      mpiImplementationType: 'string',\n      scaExemption: 'string',\n      threeDSVersion: 'string'\n    },\n    amount: {currency: 'str', value: 0},\n    bankAccount: {\n      bankAccountNumber: 'string',\n      bankCity: 'string',\n      bankLocationId: 'string',\n      bankName: 'string',\n      bic: 'string',\n      countryCode: 'string',\n      iban: 'string',\n      ownerName: 'string',\n      taxId: 'string'\n    },\n    billingAddress: {\n      city: 'string',\n      country: 'string',\n      houseNumberOrName: 'string',\n      postalCode: 'string',\n      stateOrProvince: 'string',\n      street: 'string'\n    },\n    browserInfo: {acceptHeader: 'string', userAgent: 'string'},\n    captureDelayHours: 0,\n    card: {\n      cvc: 'string',\n      expiryMonth: 'st',\n      expiryYear: 'stri',\n      holderName: 'string',\n      issueNumber: 'st',\n      number: 'string',\n      startMonth: 'st',\n      startYear: 'stri'\n    },\n    dateOfBirth: '2019-08-24',\n    dccQuote: {\n      account: 'string',\n      accountType: 'string',\n      baseAmount: {currency: 'str', value: 0},\n      basePoints: 0,\n      buy: {currency: 'str', value: 0},\n      interbank: {currency: 'str', value: 0},\n      reference: 'string',\n      sell: {currency: 'str', value: 0},\n      signature: 'string',\n      source: 'string',\n      type: 'string',\n      validTill: '2019-08-24T14:15:22Z'\n    },\n    deliveryAddress: {\n      city: 'string',\n      country: 'string',\n      houseNumberOrName: 'string',\n      postalCode: 'string',\n      stateOrProvince: 'string',\n      street: 'string'\n    },\n    deliveryDate: '2019-08-24T14:15:22Z',\n    deviceFingerprint: 'string',\n    entityType: 'NaturalPerson',\n    fraudOffset: 0,\n    installments: {value: 0},\n    mandate: {\n      amount: 'string',\n      amountRule: 'max',\n      billingAttemptsRule: true,\n      billingDay: 'string',\n      endsAt: 'string',\n      frequency: 'adhoc',\n      remarks: 'string',\n      startsAt: 'string'\n    },\n    mcc: 'string',\n    merchantAccount: 'string',\n    merchantOrderReference: 'string',\n    metadata: {property1: 'string', property2: 'string'},\n    mpiData: {\n      authenticationResponse: 'Y',\n      cavv: 'string',\n      cavvAlgorithm: 'string',\n      directoryResponse: 'A',\n      eci: 'string',\n      xid: 'string'\n    },\n    nationality: 'st',\n    orderReference: 'string',\n    recurring: {\n      contract: 'ONECLICK',\n      recurringDetailName: 'string',\n      tokenService: 'VISATOKENSERVICE'\n    },\n    recurringProcessingModel: 'CardOnFile',\n    reference: 'string',\n    selectedBrand: 'string',\n    selectedRecurringDetailReference: 'string',\n    sessionId: 'string',\n    shopperEmail: 'string',\n    shopperIP: 'string',\n    shopperInteraction: 'Ecommerce',\n    shopperLocale: 'string',\n    shopperName: {firstName: 'string', lastName: 'string'},\n    shopperReference: 'string',\n    shopperStatement: 'string',\n    socialSecurityNumber: 'string',\n    store: 'string',\n    telephoneNumber: 'string',\n    totalsGroup: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-authorise",
        "framework": "adyen.com",
        "functionality": "Create an authorisation",
        "api_arguments": {},
        "description": "Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.",
        "path": "/authorise",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Payments"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to create a new payment and obtain an authorisation hold using the Adyen Payment API. Could you please help me construct the request for the post-authorise endpoint?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment and obtain an authorisation hold using the Adyen Payment API. Could you please help me construct the request for the post-authorise endpoint?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9002005970800411
            },
            {
                "idx": 2,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9052472088964245
            },
            {
                "idx": 3,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9052472088964245
            },
            {
                "idx": 4,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9052472088964245
            },
            {
                "idx": 5,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9052472088964245
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I'd like to create a new payment and obtain an authorisation hold using the Adyen Payment API. Could you please help me construct the request for the post-authorise endpoint?"
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"pal-test.adyen.com\")\n\npayload = \"{\\\"additionalAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"amount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"bankAccount\\\":{\\\"bankAccountNumber\\\":\\\"string\\\",\\\"bankCity\\\":\\\"string\\\",\\\"bankLocationId\\\":\\\"string\\\",\\\"bankName\\\":\\\"string\\\",\\\"bic\\\":\\\"string\\\",\\\"countryCode\\\":\\\"string\\\",\\\"iban\\\":\\\"string\\\",\\\"ownerName\\\":\\\"string\\\",\\\"taxId\\\":\\\"string\\\"},\\\"billingAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"browserInfo\\\":{\\\"acceptHeader\\\":\\\"string\\\",\\\"userAgent\\\":\\\"string\\\"},\\\"captureDelayHours\\\":0,\\\"card\\\":{\\\"cvc\\\":\\\"string\\\",\\\"expiryMonth\\\":\\\"st\\\",\\\"expiryYear\\\":\\\"stri\\\",\\\"holderName\\\":\\\"string\\\",\\\"issueNumber\\\":\\\"st\\\",\\\"number\\\":\\\"string\\\",\\\"startMonth\\\":\\\"st\\\",\\\"startYear\\\":\\\"stri\\\"},\\\"dateOfBirth\\\":\\\"2019-08-24\\\",\\\"dccQuote\\\":{\\\"account\\\":\\\"string\\\",\\\"accountType\\\":\\\"string\\\",\\\"baseAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"basePoints\\\":0,\\\"buy\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"interbank\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"reference\\\":\\\"string\\\",\\\"sell\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"signature\\\":\\\"string\\\",\\\"source\\\":\\\"string\\\",\\\"type\\\":\\\"string\\\",\\\"validTill\\\":\\\"2019-08-24T14:15:22Z\\\"},\\\"deliveryAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"deliveryDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"deviceFingerprint\\\":\\\"string\\\",\\\"entityType\\\":\\\"NaturalPerson\\\",\\\"fraudOffset\\\":0,\\\"installments\\\":{\\\"value\\\":0},\\\"mandate\\\":{\\\"amount\\\":\\\"string\\\",\\\"amountRule\\\":\\\"max\\\",\\\"billingAttemptsRule\\\":true,\\\"billingDay\\\":\\\"string\\\",\\\"endsAt\\\":\\\"string\\\",\\\"frequency\\\":\\\"adhoc\\\",\\\"remarks\\\":\\\"string\\\",\\\"startsAt\\\":\\\"string\\\"},\\\"mcc\\\":\\\"string\\\",\\\"merchantAccount\\\":\\\"string\\\",\\\"merchantOrderReference\\\":\\\"string\\\",\\\"metadata\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"mpiData\\\":{\\\"authenticationResponse\\\":\\\"Y\\\",\\\"cavv\\\":\\\"string\\\",\\\"cavvAlgorithm\\\":\\\"string\\\",\\\"directoryResponse\\\":\\\"A\\\",\\\"eci\\\":\\\"string\\\",\\\"xid\\\":\\\"string\\\"},\\\"nationality\\\":\\\"st\\\",\\\"orderReference\\\":\\\"string\\\",\\\"recurring\\\":{\\\"contract\\\":\\\"ONECLICK\\\",\\\"recurringDetailName\\\":\\\"string\\\",\\\"tokenService\\\":\\\"VISATOKENSERVICE\\\"},\\\"recurringProcessingModel\\\":\\\"CardOnFile\\\",\\\"reference\\\":\\\"string\\\",\\\"selectedBrand\\\":\\\"string\\\",\\\"selectedRecurringDetailReference\\\":\\\"string\\\",\\\"sessionId\\\":\\\"string\\\",\\\"shopperEmail\\\":\\\"string\\\",\\\"shopperIP\\\":\\\"string\\\",\\\"shopperInteraction\\\":\\\"Ecommerce\\\",\\\"shopperLocale\\\":\\\"string\\\",\\\"shopperName\\\":{\\\"firstName\\\":\\\"string\\\",\\\"lastName\\\":\\\"string\\\"},\\\"shopperReference\\\":\\\"string\\\",\\\"shopperStatement\\\":\\\"string\\\",\\\"socialSecurityNumber\\\":\\\"string\\\",\\\"store\\\":\\\"string\\\",\\\"telephoneNumber\\\":\\\"string\\\",\\\"totalsGroup\\\":\\\"string\\\"}\"\n\nheaders = {\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/pal/servlet/Payment/v30/authorise\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-authorise",
        "framework": "adyen.com",
        "functionality": "Create an authorisation",
        "api_arguments": {},
        "description": "Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.",
        "path": "/authorise",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Payments"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I would like to create a new payment authorisation with the Adyen Payment API and obtain a unique reference for it. Please help me with that.",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI would like to create a new payment authorisation with the Adyen Payment API and obtain a unique reference for it. Please help me with that.\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9813871285140833
            },
            {
                "idx": 2,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please help me construct the request for the post-authorise endpoint?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please help me construct the request for the post-authorise endpoint?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8956824874588978
            },
            {
                "idx": 3,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Can you please provide an example of how to use the post-authorise endpoint for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Can you please provide an example of how to use the post-authorise endpoint for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9053999988938468
            },
            {
                "idx": 4,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide me with an example of how to use the post-authorise endpoint for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide me with an example of how to use the post-authorise endpoint for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.901095855461874
            },
            {
                "idx": 5,
                "candidate": "I'd like to create a new payment and obtain an authorisation hold using the Adyen Payment API. Can you provide an example of how to use the post-authorise endpoint for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment and obtain an authorisation hold using the Adyen Payment API. Can you provide an example of how to use the post-authorise endpoint for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9086190740497818
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please help me construct the request for the post-authorise endpoint?"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\"\n\n\tpayload := strings.NewReader(\"{\\\"additionalAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"amount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"bankAccount\\\":{\\\"bankAccountNumber\\\":\\\"string\\\",\\\"bankCity\\\":\\\"string\\\",\\\"bankLocationId\\\":\\\"string\\\",\\\"bankName\\\":\\\"string\\\",\\\"bic\\\":\\\"string\\\",\\\"countryCode\\\":\\\"string\\\",\\\"iban\\\":\\\"string\\\",\\\"ownerName\\\":\\\"string\\\",\\\"taxId\\\":\\\"string\\\"},\\\"billingAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"browserInfo\\\":{\\\"acceptHeader\\\":\\\"string\\\",\\\"userAgent\\\":\\\"string\\\"},\\\"captureDelayHours\\\":0,\\\"card\\\":{\\\"cvc\\\":\\\"string\\\",\\\"expiryMonth\\\":\\\"st\\\",\\\"expiryYear\\\":\\\"stri\\\",\\\"holderName\\\":\\\"string\\\",\\\"issueNumber\\\":\\\"st\\\",\\\"number\\\":\\\"string\\\",\\\"startMonth\\\":\\\"st\\\",\\\"startYear\\\":\\\"stri\\\"},\\\"dateOfBirth\\\":\\\"2019-08-24\\\",\\\"dccQuote\\\":{\\\"account\\\":\\\"string\\\",\\\"accountType\\\":\\\"string\\\",\\\"baseAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"basePoints\\\":0,\\\"buy\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"interbank\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"reference\\\":\\\"string\\\",\\\"sell\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"signature\\\":\\\"string\\\",\\\"source\\\":\\\"string\\\",\\\"type\\\":\\\"string\\\",\\\"validTill\\\":\\\"2019-08-24T14:15:22Z\\\"},\\\"deliveryAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"deliveryDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"deviceFingerprint\\\":\\\"string\\\",\\\"entityType\\\":\\\"NaturalPerson\\\",\\\"fraudOffset\\\":0,\\\"installments\\\":{\\\"value\\\":0},\\\"mandate\\\":{\\\"amount\\\":\\\"string\\\",\\\"amountRule\\\":\\\"max\\\",\\\"billingAttemptsRule\\\":true,\\\"billingDay\\\":\\\"string\\\",\\\"endsAt\\\":\\\"string\\\",\\\"frequency\\\":\\\"adhoc\\\",\\\"remarks\\\":\\\"string\\\",\\\"startsAt\\\":\\\"string\\\"},\\\"mcc\\\":\\\"string\\\",\\\"merchantAccount\\\":\\\"string\\\",\\\"merchantOrderReference\\\":\\\"string\\\",\\\"metadata\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"mpiData\\\":{\\\"authenticationResponse\\\":\\\"Y\\\",\\\"cavv\\\":\\\"string\\\",\\\"cavvAlgorithm\\\":\\\"string\\\",\\\"directoryResponse\\\":\\\"A\\\",\\\"eci\\\":\\\"string\\\",\\\"xid\\\":\\\"string\\\"},\\\"nationality\\\":\\\"st\\\",\\\"orderReference\\\":\\\"string\\\",\\\"recurring\\\":{\\\"contract\\\":\\\"ONECLICK\\\",\\\"recurringDetailName\\\":\\\"string\\\",\\\"tokenService\\\":\\\"VISATOKENSERVICE\\\"},\\\"recurringProcessingModel\\\":\\\"CardOnFile\\\",\\\"reference\\\":\\\"string\\\",\\\"selectedBrand\\\":\\\"string\\\",\\\"selectedRecurringDetailReference\\\":\\\"string\\\",\\\"sessionId\\\":\\\"string\\\",\\\"shopperEmail\\\":\\\"string\\\",\\\"shopperIP\\\":\\\"string\\\",\\\"shopperInteraction\\\":\\\"Ecommerce\\\",\\\"shopperLocale\\\":\\\"string\\\",\\\"shopperName\\\":{\\\"firstName\\\":\\\"string\\\",\\\"lastName\\\":\\\"string\\\"},\\\"shopperReference\\\":\\\"string\\\",\\\"shopperStatement\\\":\\\"string\\\",\\\"socialSecurityNumber\\\":\\\"string\\\",\\\"store\\\":\\\"string\\\",\\\"telephoneNumber\\\":\\\"string\\\",\\\"totalsGroup\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-authorise",
        "framework": "adyen.com",
        "functionality": "Create an authorisation",
        "api_arguments": {},
        "description": "Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.",
        "path": "/authorise",
        "method": "post",
        "lang": "go",
        "domain": [
            "Payments"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to create a new payment with authorisation hold using the Adyen Payment API. Could you please provide an example of how to use the post-authorise endpoint for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with authorisation hold using the Adyen Payment API. Could you please provide an example of how to use the post-authorise endpoint for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9303516674983406
            },
            {
                "idx": 2,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the endpoint `post-authorise` for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the endpoint `post-authorise` for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9005683989291634
            },
            {
                "idx": 3,
                "candidate": "I'd like to create a new payment and obtain an authorisation hold with the Adyen Payment API using the post-authorise endpoint. Could you please provide me with an example of how to do that?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment and obtain an authorisation hold with the Adyen Payment API using the post-authorise endpoint. Could you please provide me with an example of how to do that?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9098623478274747
            },
            {
                "idx": 4,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9052472088964245
            },
            {
                "idx": 5,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please help me with making a request to the post-authorise endpoint?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please help me with making a request to the post-authorise endpoint?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.904961578039703
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the endpoint `post-authorise` for this purpose?"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"additionalAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"amount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"bankAccount\\\":{\\\"bankAccountNumber\\\":\\\"string\\\",\\\"bankCity\\\":\\\"string\\\",\\\"bankLocationId\\\":\\\"string\\\",\\\"bankName\\\":\\\"string\\\",\\\"bic\\\":\\\"string\\\",\\\"countryCode\\\":\\\"string\\\",\\\"iban\\\":\\\"string\\\",\\\"ownerName\\\":\\\"string\\\",\\\"taxId\\\":\\\"string\\\"},\\\"billingAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"browserInfo\\\":{\\\"acceptHeader\\\":\\\"string\\\",\\\"userAgent\\\":\\\"string\\\"},\\\"captureDelayHours\\\":0,\\\"card\\\":{\\\"cvc\\\":\\\"string\\\",\\\"expiryMonth\\\":\\\"st\\\",\\\"expiryYear\\\":\\\"stri\\\",\\\"holderName\\\":\\\"string\\\",\\\"issueNumber\\\":\\\"st\\\",\\\"number\\\":\\\"string\\\",\\\"startMonth\\\":\\\"st\\\",\\\"startYear\\\":\\\"stri\\\"},\\\"dateOfBirth\\\":\\\"2019-08-24\\\",\\\"dccQuote\\\":{\\\"account\\\":\\\"string\\\",\\\"accountType\\\":\\\"string\\\",\\\"baseAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"basePoints\\\":0,\\\"buy\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"interbank\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"reference\\\":\\\"string\\\",\\\"sell\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"signature\\\":\\\"string\\\",\\\"source\\\":\\\"string\\\",\\\"type\\\":\\\"string\\\",\\\"validTill\\\":\\\"2019-08-24T14:15:22Z\\\"},\\\"deliveryAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"deliveryDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"deviceFingerprint\\\":\\\"string\\\",\\\"entityType\\\":\\\"NaturalPerson\\\",\\\"fraudOffset\\\":0,\\\"installments\\\":{\\\"value\\\":0},\\\"mandate\\\":{\\\"amount\\\":\\\"string\\\",\\\"amountRule\\\":\\\"max\\\",\\\"billingAttemptsRule\\\":true,\\\"billingDay\\\":\\\"string\\\",\\\"endsAt\\\":\\\"string\\\",\\\"frequency\\\":\\\"adhoc\\\",\\\"remarks\\\":\\\"string\\\",\\\"startsAt\\\":\\\"string\\\"},\\\"mcc\\\":\\\"string\\\",\\\"merchantAccount\\\":\\\"string\\\",\\\"merchantOrderReference\\\":\\\"string\\\",\\\"metadata\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"mpiData\\\":{\\\"authenticationResponse\\\":\\\"Y\\\",\\\"cavv\\\":\\\"string\\\",\\\"cavvAlgorithm\\\":\\\"string\\\",\\\"directoryResponse\\\":\\\"A\\\",\\\"eci\\\":\\\"string\\\",\\\"xid\\\":\\\"string\\\"},\\\"nationality\\\":\\\"st\\\",\\\"orderReference\\\":\\\"string\\\",\\\"recurring\\\":{\\\"contract\\\":\\\"ONECLICK\\\",\\\"recurringDetailName\\\":\\\"string\\\",\\\"tokenService\\\":\\\"VISATOKENSERVICE\\\"},\\\"recurringProcessingModel\\\":\\\"CardOnFile\\\",\\\"reference\\\":\\\"string\\\",\\\"selectedBrand\\\":\\\"string\\\",\\\"selectedRecurringDetailReference\\\":\\\"string\\\",\\\"sessionId\\\":\\\"string\\\",\\\"shopperEmail\\\":\\\"string\\\",\\\"shopperIP\\\":\\\"string\\\",\\\"shopperInteraction\\\":\\\"Ecommerce\\\",\\\"shopperLocale\\\":\\\"string\\\",\\\"shopperName\\\":{\\\"firstName\\\":\\\"string\\\",\\\"lastName\\\":\\\"string\\\"},\\\"shopperReference\\\":\\\"string\\\",\\\"shopperStatement\\\":\\\"string\\\",\\\"socialSecurityNumber\\\":\\\"string\\\",\\\"store\\\":\\\"string\\\",\\\"telephoneNumber\\\":\\\"string\\\",\\\"totalsGroup\\\":\\\"string\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-authorise",
        "framework": "adyen.com",
        "functionality": "Create an authorisation",
        "api_arguments": {},
        "description": "Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.",
        "path": "/authorise",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Payments"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold for it. Please help me with the request to the post-authorise endpoint.",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold for it. Please help me with the request to the post-authorise endpoint.\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9135171158867668
            },
            {
                "idx": 2,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the endpoint post-authorise for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the endpoint post-authorise for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9082986934700618
            },
            {
                "idx": 3,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9052472088964245
            },
            {
                "idx": 4,
                "candidate": "I'd like to create a new payment with authorisation hold using the Adyen Payment API. Could you please provide an example of how to use the post-authorise endpoint for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with authorisation hold using the Adyen Payment API. Could you please provide an example of how to use the post-authorise endpoint for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9303516674983406
            },
            {
                "idx": 5,
                "candidate": "I'd like to create a new payment authorisation using the Adyen Payment API. Could you please help me construct the request for the post-authorise endpoint?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment authorisation using the Adyen Payment API. Could you please help me construct the request for the post-authorise endpoint?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9984500606469513
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?"
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"additionalAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"amount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"bankAccount\\\":{\\\"bankAccountNumber\\\":\\\"string\\\",\\\"bankCity\\\":\\\"string\\\",\\\"bankLocationId\\\":\\\"string\\\",\\\"bankName\\\":\\\"string\\\",\\\"bic\\\":\\\"string\\\",\\\"countryCode\\\":\\\"string\\\",\\\"iban\\\":\\\"string\\\",\\\"ownerName\\\":\\\"string\\\",\\\"taxId\\\":\\\"string\\\"},\\\"billingAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"browserInfo\\\":{\\\"acceptHeader\\\":\\\"string\\\",\\\"userAgent\\\":\\\"string\\\"},\\\"captureDelayHours\\\":0,\\\"card\\\":{\\\"cvc\\\":\\\"string\\\",\\\"expiryMonth\\\":\\\"st\\\",\\\"expiryYear\\\":\\\"stri\\\",\\\"holderName\\\":\\\"string\\\",\\\"issueNumber\\\":\\\"st\\\",\\\"number\\\":\\\"string\\\",\\\"startMonth\\\":\\\"st\\\",\\\"startYear\\\":\\\"stri\\\"},\\\"dateOfBirth\\\":\\\"2019-08-24\\\",\\\"dccQuote\\\":{\\\"account\\\":\\\"string\\\",\\\"accountType\\\":\\\"string\\\",\\\"baseAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"basePoints\\\":0,\\\"buy\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"interbank\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"reference\\\":\\\"string\\\",\\\"sell\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"signature\\\":\\\"string\\\",\\\"source\\\":\\\"string\\\",\\\"type\\\":\\\"string\\\",\\\"validTill\\\":\\\"2019-08-24T14:15:22Z\\\"},\\\"deliveryAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"deliveryDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"deviceFingerprint\\\":\\\"string\\\",\\\"entityType\\\":\\\"NaturalPerson\\\",\\\"fraudOffset\\\":0,\\\"installments\\\":{\\\"value\\\":0},\\\"mandate\\\":{\\\"amount\\\":\\\"string\\\",\\\"amountRule\\\":\\\"max\\\",\\\"billingAttemptsRule\\\":true,\\\"billingDay\\\":\\\"string\\\",\\\"endsAt\\\":\\\"string\\\",\\\"frequency\\\":\\\"adhoc\\\",\\\"remarks\\\":\\\"string\\\",\\\"startsAt\\\":\\\"string\\\"},\\\"mcc\\\":\\\"string\\\",\\\"merchantAccount\\\":\\\"string\\\",\\\"merchantOrderReference\\\":\\\"string\\\",\\\"metadata\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"mpiData\\\":{\\\"authenticationResponse\\\":\\\"Y\\\",\\\"cavv\\\":\\\"string\\\",\\\"cavvAlgorithm\\\":\\\"string\\\",\\\"directoryResponse\\\":\\\"A\\\",\\\"eci\\\":\\\"string\\\",\\\"xid\\\":\\\"string\\\"},\\\"nationality\\\":\\\"st\\\",\\\"orderReference\\\":\\\"string\\\",\\\"recurring\\\":{\\\"contract\\\":\\\"ONECLICK\\\",\\\"recurringDetailName\\\":\\\"string\\\",\\\"tokenService\\\":\\\"VISATOKENSERVICE\\\"},\\\"recurringProcessingModel\\\":\\\"CardOnFile\\\",\\\"reference\\\":\\\"string\\\",\\\"selectedBrand\\\":\\\"string\\\",\\\"selectedRecurringDetailReference\\\":\\\"string\\\",\\\"sessionId\\\":\\\"string\\\",\\\"shopperEmail\\\":\\\"string\\\",\\\"shopperIP\\\":\\\"string\\\",\\\"shopperInteraction\\\":\\\"Ecommerce\\\",\\\"shopperLocale\\\":\\\"string\\\",\\\"shopperName\\\":{\\\"firstName\\\":\\\"string\\\",\\\"lastName\\\":\\\"string\\\"},\\\"shopperReference\\\":\\\"string\\\",\\\"shopperStatement\\\":\\\"string\\\",\\\"socialSecurityNumber\\\":\\\"string\\\",\\\"store\\\":\\\"string\\\",\\\"telephoneNumber\\\":\\\"string\\\",\\\"totalsGroup\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-authorise",
        "framework": "adyen.com",
        "functionality": "Create an authorisation",
        "api_arguments": {},
        "description": "Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.",
        "path": "/authorise",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Payments"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold for it. Can you help me with that, using the post-authorise endpoint?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold for it. Can you help me with that, using the post-authorise endpoint?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9098399020527014
            },
            {
                "idx": 2,
                "candidate": "I'd like to create a new payment authorisation with the Adyen Payment API and obtain an authorisation hold. Could you please provide me with an example of how to use the post-authorise endpoint for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment authorisation with the Adyen Payment API and obtain an authorisation hold. Could you please provide me with an example of how to use the post-authorise endpoint for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9495728466280752
            },
            {
                "idx": 3,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please help me construct a request using the post-authorise endpoint?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please help me construct a request using the post-authorise endpoint?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8985292176784754
            },
            {
                "idx": 4,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please help me construct the request for the post-authorise endpoint?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please help me construct the request for the post-authorise endpoint?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8956824874588978
            },
            {
                "idx": 5,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the post-authorise endpoint for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9052472088964245
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please help me construct the request for the post-authorise endpoint?"
        }
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"additionalAmount\": [\n    \"currency\": \"str\",\n    \"value\": 0\n  ],\n  \"additionalData\": [\n    \"property1\": \"string\",\n    \"property2\": \"string\",\n    \"allow3DS2\": \"string\",\n    \"challengeWindowSize\": \"01\",\n    \"executeThreeD\": \"string\",\n    \"mpiImplementationType\": \"string\",\n    \"scaExemption\": \"string\",\n    \"threeDSVersion\": \"string\"\n  ],\n  \"amount\": [\n    \"currency\": \"str\",\n    \"value\": 0\n  ],\n  \"bankAccount\": [\n    \"bankAccountNumber\": \"string\",\n    \"bankCity\": \"string\",\n    \"bankLocationId\": \"string\",\n    \"bankName\": \"string\",\n    \"bic\": \"string\",\n    \"countryCode\": \"string\",\n    \"iban\": \"string\",\n    \"ownerName\": \"string\",\n    \"taxId\": \"string\"\n  ],\n  \"billingAddress\": [\n    \"city\": \"string\",\n    \"country\": \"string\",\n    \"houseNumberOrName\": \"string\",\n    \"postalCode\": \"string\",\n    \"stateOrProvince\": \"string\",\n    \"street\": \"string\"\n  ],\n  \"browserInfo\": [\n    \"acceptHeader\": \"string\",\n    \"userAgent\": \"string\"\n  ],\n  \"captureDelayHours\": 0,\n  \"card\": [\n    \"cvc\": \"string\",\n    \"expiryMonth\": \"st\",\n    \"expiryYear\": \"stri\",\n    \"holderName\": \"string\",\n    \"issueNumber\": \"st\",\n    \"number\": \"string\",\n    \"startMonth\": \"st\",\n    \"startYear\": \"stri\"\n  ],\n  \"dateOfBirth\": \"2019-08-24\",\n  \"dccQuote\": [\n    \"account\": \"string\",\n    \"accountType\": \"string\",\n    \"baseAmount\": [\n      \"currency\": \"str\",\n      \"value\": 0\n    ],\n    \"basePoints\": 0,\n    \"buy\": [\n      \"currency\": \"str\",\n      \"value\": 0\n    ],\n    \"interbank\": [\n      \"currency\": \"str\",\n      \"value\": 0\n    ],\n    \"reference\": \"string\",\n    \"sell\": [\n      \"currency\": \"str\",\n      \"value\": 0\n    ],\n    \"signature\": \"string\",\n    \"source\": \"string\",\n    \"type\": \"string\",\n    \"validTill\": \"2019-08-24T14:15:22Z\"\n  ],\n  \"deliveryAddress\": [\n    \"city\": \"string\",\n    \"country\": \"string\",\n    \"houseNumberOrName\": \"string\",\n    \"postalCode\": \"string\",\n    \"stateOrProvince\": \"string\",\n    \"street\": \"string\"\n  ],\n  \"deliveryDate\": \"2019-08-24T14:15:22Z\",\n  \"deviceFingerprint\": \"string\",\n  \"entityType\": \"NaturalPerson\",\n  \"fraudOffset\": 0,\n  \"installments\": [\"value\": 0],\n  \"mandate\": [\n    \"amount\": \"string\",\n    \"amountRule\": \"max\",\n    \"billingAttemptsRule\": true,\n    \"billingDay\": \"string\",\n    \"endsAt\": \"string\",\n    \"frequency\": \"adhoc\",\n    \"remarks\": \"string\",\n    \"startsAt\": \"string\"\n  ],\n  \"mcc\": \"string\",\n  \"merchantAccount\": \"string\",\n  \"merchantOrderReference\": \"string\",\n  \"metadata\": [\n    \"property1\": \"string\",\n    \"property2\": \"string\"\n  ],\n  \"mpiData\": [\n    \"authenticationResponse\": \"Y\",\n    \"cavv\": \"string\",\n    \"cavvAlgorithm\": \"string\",\n    \"directoryResponse\": \"A\",\n    \"eci\": \"string\",\n    \"xid\": \"string\"\n  ],\n  \"nationality\": \"st\",\n  \"orderReference\": \"string\",\n  \"recurring\": [\n    \"contract\": \"ONECLICK\",\n    \"recurringDetailName\": \"string\",\n    \"tokenService\": \"VISATOKENSERVICE\"\n  ],\n  \"recurringProcessingModel\": \"CardOnFile\",\n  \"reference\": \"string\",\n  \"selectedBrand\": \"string\",\n  \"selectedRecurringDetailReference\": \"string\",\n  \"sessionId\": \"string\",\n  \"shopperEmail\": \"string\",\n  \"shopperIP\": \"string\",\n  \"shopperInteraction\": \"Ecommerce\",\n  \"shopperLocale\": \"string\",\n  \"shopperName\": [\n    \"firstName\": \"string\",\n    \"lastName\": \"string\"\n  ],\n  \"shopperReference\": \"string\",\n  \"shopperStatement\": \"string\",\n  \"socialSecurityNumber\": \"string\",\n  \"store\": \"string\",\n  \"telephoneNumber\": \"string\",\n  \"totalsGroup\": \"string\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-authorise",
        "framework": "adyen.com",
        "functionality": "Create an authorisation",
        "api_arguments": {},
        "description": "Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.",
        "path": "/authorise",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Payments"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the endpoint post-authorise for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Could you please provide an example of how to use the endpoint post-authorise for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9082986934700618
            },
            {
                "idx": 2,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Please help me with that by providing an example of how to use the endpoint post-authorise.",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold. Please help me with that by providing an example of how to use the endpoint post-authorise.\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.908711370335153
            },
            {
                "idx": 3,
                "candidate": "I'd like to create a new payment authorisation with the Adyen Payment API. Could you please provide an example of how to use the post-authorise endpoint to generate a unique reference (pspReference) and attempt to obtain an authorisation hold?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment authorisation with the Adyen Payment API. Could you please provide an example of how to use the post-authorise endpoint to generate a unique reference (pspReference) and attempt to obtain an authorisation hold?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.867632863345283
            },
            {
                "idx": 4,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold for it. Could you please provide an example of how to use the endpoint post-authorise for this purpose?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold for it. Could you please provide an example of how to use the endpoint post-authorise for this purpose?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9150714561307046
            },
            {
                "idx": 5,
                "candidate": "I'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold for it. Could you please help me construct the request using the post-authorise endpoint?",
                "input_text": "Functionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to create a new payment with the Adyen Payment API and obtain an authorisation hold for it. Could you please help me construct the request using the post-authorise endpoint?\n###Output:\nFunctionality: Create an authorisation\nDescription: Creates a payment with a unique reference (`pspReference`) and attempts to obtain an authorisation hold. For cards, this amount can be captured or cancelled later. Non-card payment methods typically don't support this and will automatically capture as part of the authorisation.\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments) endpoint under Checkout API instead.\nEndpoint: post-authorise\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9111724862358732
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "I'd like to create a new payment authorisation with the Adyen Payment API. Could you please provide an example of how to use the post-authorise endpoint to generate a unique reference (pspReference) and attempt to obtain an authorisation hold?"
        }
    },
    {
        "api_call": "curl --request POST \\\n  --url https://pal-test.adyen.com/pal/servlet/Payment/v30/authorise3d \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"additionalAmount\":{\"currency\":\"str\",\"value\":0},\"additionalData\":{\"property1\":\"string\",\"property2\":\"string\",\"allow3DS2\":\"string\",\"challengeWindowSize\":\"01\",\"executeThreeD\":\"string\",\"mpiImplementationType\":\"string\",\"scaExemption\":\"string\",\"threeDSVersion\":\"string\"},\"amount\":{\"currency\":\"str\",\"value\":0},\"billingAddress\":{\"city\":\"string\",\"country\":\"string\",\"houseNumberOrName\":\"string\",\"postalCode\":\"string\",\"stateOrProvince\":\"string\",\"street\":\"string\"},\"browserInfo\":{\"acceptHeader\":\"string\",\"userAgent\":\"string\"},\"captureDelayHours\":0,\"dateOfBirth\":\"2019-08-24\",\"dccQuote\":{\"account\":\"string\",\"accountType\":\"string\",\"baseAmount\":{\"currency\":\"str\",\"value\":0},\"basePoints\":0,\"buy\":{\"currency\":\"str\",\"value\":0},\"interbank\":{\"currency\":\"str\",\"value\":0},\"reference\":\"string\",\"sell\":{\"currency\":\"str\",\"value\":0},\"signature\":\"string\",\"source\":\"string\",\"type\":\"string\",\"validTill\":\"2019-08-24T14:15:22Z\"},\"deliveryAddress\":{\"city\":\"string\",\"country\":\"string\",\"houseNumberOrName\":\"string\",\"postalCode\":\"string\",\"stateOrProvince\":\"string\",\"street\":\"string\"},\"deliveryDate\":\"2019-08-24T14:15:22Z\",\"deviceFingerprint\":\"string\",\"fraudOffset\":0,\"installments\":{\"value\":0},\"mcc\":\"string\",\"md\":\"string\",\"merchantAccount\":\"string\",\"merchantOrderReference\":\"string\",\"metadata\":{\"property1\":\"string\",\"property2\":\"string\"},\"orderReference\":\"string\",\"paResponse\":\"string\",\"recurring\":{\"contract\":\"ONECLICK\",\"recurringDetailName\":\"string\",\"tokenService\":\"VISATOKENSERVICE\"},\"recurringProcessingModel\":\"CardOnFile\",\"reference\":\"string\",\"selectedBrand\":\"string\",\"selectedRecurringDetailReference\":\"string\",\"sessionId\":\"string\",\"shopperEmail\":\"string\",\"shopperIP\":\"string\",\"shopperInteraction\":\"Ecommerce\",\"shopperLocale\":\"string\",\"shopperName\":{\"firstName\":\"string\",\"lastName\":\"string\"},\"shopperReference\":\"string\",\"shopperStatement\":\"string\",\"socialSecurityNumber\":\"string\",\"store\":\"string\",\"telephoneNumber\":\"string\",\"totalsGroup\":\"string\"}'",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-authorise3d",
        "framework": "adyen.com",
        "functionality": "Complete a 3DS authorisation",
        "api_arguments": {},
        "description": "For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.",
        "path": "/authorise3d",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Payments"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to complete a 3DS authorisation process by making a request to the post-authorise3d endpoint of the Adyen Payment API. I need to provide the `md` and `paResponse` parameters obtained from the card issuer during the shopper's payment process.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to complete a 3DS authorisation process by making a request to the post-authorise3d endpoint of the Adyen Payment API. I need to provide the `md` and `paResponse` parameters obtained from the card issuer during the shopper's payment process.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8550176740021871
            },
            {
                "idx": 2,
                "candidate": "I need to complete a 3DS authorisation process by sending the `md` and `paResponse` parameters to the Adyen Payment API using the endpoint post-authorise3d.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3DS authorisation process by sending the `md` and `paResponse` parameters to the Adyen Payment API using the endpoint post-authorise3d.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9101086511838584
            },
            {
                "idx": 3,
                "candidate": "I need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the required `md` and `paResponse` parameters.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the required `md` and `paResponse` parameters.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8974422796209549
            },
            {
                "idx": 4,
                "candidate": "I need to complete a 3DS authorisation process by sending the received `md` and `paResponse` parameters to the Adyen Payment API using the endpoint post-authorise3d.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3DS authorisation process by sending the received `md` and `paResponse` parameters to the Adyen Payment API using the endpoint post-authorise3d.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9054451527305063
            },
            {
                "idx": 5,
                "candidate": "I need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the `md` and `paResponse` parameters.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the `md` and `paResponse` parameters.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9035574541580093
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I want to complete a 3DS authorisation process by making a request to the post-authorise3d endpoint of the Adyen Payment API. I need to provide the `md` and `paResponse` parameters obtained from the card issuer during the shopper's payment process."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"additionalAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"amount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"billingAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"browserInfo\\\":{\\\"acceptHeader\\\":\\\"string\\\",\\\"userAgent\\\":\\\"string\\\"},\\\"captureDelayHours\\\":0,\\\"dateOfBirth\\\":\\\"2019-08-24\\\",\\\"dccQuote\\\":{\\\"account\\\":\\\"string\\\",\\\"accountType\\\":\\\"string\\\",\\\"baseAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"basePoints\\\":0,\\\"buy\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"interbank\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"reference\\\":\\\"string\\\",\\\"sell\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"signature\\\":\\\"string\\\",\\\"source\\\":\\\"string\\\",\\\"type\\\":\\\"string\\\",\\\"validTill\\\":\\\"2019-08-24T14:15:22Z\\\"},\\\"deliveryAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"deliveryDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"deviceFingerprint\\\":\\\"string\\\",\\\"fraudOffset\\\":0,\\\"installments\\\":{\\\"value\\\":0},\\\"mcc\\\":\\\"string\\\",\\\"md\\\":\\\"string\\\",\\\"merchantAccount\\\":\\\"string\\\",\\\"merchantOrderReference\\\":\\\"string\\\",\\\"metadata\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"orderReference\\\":\\\"string\\\",\\\"paResponse\\\":\\\"string\\\",\\\"recurring\\\":{\\\"contract\\\":\\\"ONECLICK\\\",\\\"recurringDetailName\\\":\\\"string\\\",\\\"tokenService\\\":\\\"VISATOKENSERVICE\\\"},\\\"recurringProcessingModel\\\":\\\"CardOnFile\\\",\\\"reference\\\":\\\"string\\\",\\\"selectedBrand\\\":\\\"string\\\",\\\"selectedRecurringDetailReference\\\":\\\"string\\\",\\\"sessionId\\\":\\\"string\\\",\\\"shopperEmail\\\":\\\"string\\\",\\\"shopperIP\\\":\\\"string\\\",\\\"shopperInteraction\\\":\\\"Ecommerce\\\",\\\"shopperLocale\\\":\\\"string\\\",\\\"shopperName\\\":{\\\"firstName\\\":\\\"string\\\",\\\"lastName\\\":\\\"string\\\"},\\\"shopperReference\\\":\\\"string\\\",\\\"shopperStatement\\\":\\\"string\\\",\\\"socialSecurityNumber\\\":\\\"string\\\",\\\"store\\\":\\\"string\\\",\\\"telephoneNumber\\\":\\\"string\\\",\\\"totalsGroup\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/authorise3d\")\n  .post(body)\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-authorise3d",
        "framework": "adyen.com",
        "functionality": "Complete a 3DS authorisation",
        "api_arguments": {},
        "description": "For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.",
        "path": "/authorise3d",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Payments"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I need to complete a 3DS authorisation with the Adyen Payment API using the `md` and `paResponse` parameters provided by the card issuer. Please help me with that.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3DS authorisation with the Adyen Payment API using the `md` and `paResponse` parameters provided by the card issuer. Please help me with that.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9088813350063873
            },
            {
                "idx": 2,
                "candidate": "I want to complete a 3D Secure authorisation for a payment using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d and include the required `md` and `paResponse` parameters.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to complete a 3D Secure authorisation for a payment using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d and include the required `md` and `paResponse` parameters.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9199420428200679
            },
            {
                "idx": 3,
                "candidate": "I need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the `md` and `paResponse` parameters.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the `md` and `paResponse` parameters.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9035574541580093
            },
            {
                "idx": 4,
                "candidate": "I need to complete a 3D Secure authorisation with Adyen Payment API by providing the `md` and `paResponse` parameters received from the card issuer. Please help me with the query for the post-authorise3d endpoint.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3D Secure authorisation with Adyen Payment API by providing the `md` and `paResponse` parameters received from the card issuer. Please help me with the query for the post-authorise3d endpoint.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.88532004709457
            },
            {
                "idx": 5,
                "candidate": "I want to complete a 3D Secure authorisation process by making a request to the post-authorise3d endpoint of the Adyen Payment API. I need to provide the `md` and `paResponse` parameters that I receive from the card issuer upon shopper's payment confirmation.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to complete a 3D Secure authorisation process by making a request to the post-authorise3d endpoint of the Adyen Payment API. I need to provide the `md` and `paResponse` parameters that I receive from the card issuer upon shopper's payment confirmation.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8351211593271952
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I want to complete a 3D Secure authorisation process by making a request to the post-authorise3d endpoint of the Adyen Payment API. I need to provide the `md` and `paResponse` parameters that I receive from the card issuer upon shopper's payment confirmation."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://pal-test.adyen.com/pal/servlet/Payment/v30/authorise3d',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH', 'content-type': 'application/json'},\n  body: {\n    additionalAmount: {currency: 'str', value: 0},\n    additionalData: {\n      property1: 'string',\n      property2: 'string',\n      allow3DS2: 'string',\n      challengeWindowSize: '01',\n      executeThreeD: 'string',\n      mpiImplementationType: 'string',\n      scaExemption: 'string',\n      threeDSVersion: 'string'\n    },\n    amount: {currency: 'str', value: 0},\n    billingAddress: {\n      city: 'string',\n      country: 'string',\n      houseNumberOrName: 'string',\n      postalCode: 'string',\n      stateOrProvince: 'string',\n      street: 'string'\n    },\n    browserInfo: {acceptHeader: 'string', userAgent: 'string'},\n    captureDelayHours: 0,\n    dateOfBirth: '2019-08-24',\n    dccQuote: {\n      account: 'string',\n      accountType: 'string',\n      baseAmount: {currency: 'str', value: 0},\n      basePoints: 0,\n      buy: {currency: 'str', value: 0},\n      interbank: {currency: 'str', value: 0},\n      reference: 'string',\n      sell: {currency: 'str', value: 0},\n      signature: 'string',\n      source: 'string',\n      type: 'string',\n      validTill: '2019-08-24T14:15:22Z'\n    },\n    deliveryAddress: {\n      city: 'string',\n      country: 'string',\n      houseNumberOrName: 'string',\n      postalCode: 'string',\n      stateOrProvince: 'string',\n      street: 'string'\n    },\n    deliveryDate: '2019-08-24T14:15:22Z',\n    deviceFingerprint: 'string',\n    fraudOffset: 0,\n    installments: {value: 0},\n    mcc: 'string',\n    md: 'string',\n    merchantAccount: 'string',\n    merchantOrderReference: 'string',\n    metadata: {property1: 'string', property2: 'string'},\n    orderReference: 'string',\n    paResponse: 'string',\n    recurring: {\n      contract: 'ONECLICK',\n      recurringDetailName: 'string',\n      tokenService: 'VISATOKENSERVICE'\n    },\n    recurringProcessingModel: 'CardOnFile',\n    reference: 'string',\n    selectedBrand: 'string',\n    selectedRecurringDetailReference: 'string',\n    sessionId: 'string',\n    shopperEmail: 'string',\n    shopperIP: 'string',\n    shopperInteraction: 'Ecommerce',\n    shopperLocale: 'string',\n    shopperName: {firstName: 'string', lastName: 'string'},\n    shopperReference: 'string',\n    shopperStatement: 'string',\n    socialSecurityNumber: 'string',\n    store: 'string',\n    telephoneNumber: 'string',\n    totalsGroup: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-authorise3d",
        "framework": "adyen.com",
        "functionality": "Complete a 3DS authorisation",
        "api_arguments": {},
        "description": "For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.",
        "path": "/authorise3d",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Payments"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I need to complete a 3DS authorisation process using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the required `md` and `paResponse` parameters.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3DS authorisation process using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the required `md` and `paResponse` parameters.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9006864710917563
            },
            {
                "idx": 2,
                "candidate": "I need to complete a 3DS authorisation with Adyen Payment API using the received `md` and `paResponse` parameters from the card issuer. Please help me with that.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3DS authorisation with Adyen Payment API using the received `md` and `paResponse` parameters from the card issuer. Please help me with that.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9055763377615427
            },
            {
                "idx": 3,
                "candidate": "I want to complete a 3D Secure authorisation for a payment using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d and include the required parameters `md` and `paResponse`.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to complete a 3D Secure authorisation for a payment using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d and include the required parameters `md` and `paResponse`.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9130253622886971
            },
            {
                "idx": 4,
                "candidate": "I have an authenticated 3D Secure session, and I need to complete the payment authorisation using the Adyen Payment API. I will provide the `md` and `paResponse` parameters that I receive from the card issuer after the shopper pays. Please help me with this.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI have an authenticated 3D Secure session, and I need to complete the payment authorisation using the Adyen Payment API. I will provide the `md` and `paResponse` parameters that I receive from the card issuer after the shopper pays. Please help me with this.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.74594409615135
            },
            {
                "idx": 5,
                "candidate": "I need to complete a 3D Secure authorisation by making a request to the post-authorise3d endpoint of the Adyen Payment API. I should include the `md` and `paResponse` parameters that I receive from the card issuer after the shopper pays via 3D Secure.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3D Secure authorisation by making a request to the post-authorise3d endpoint of the Adyen Payment API. I should include the `md` and `paResponse` parameters that I receive from the card issuer after the shopper pays via 3D Secure.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7741715134602137
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "I have an authenticated 3D Secure session, and I need to complete the payment authorisation using the Adyen Payment API. I will provide the `md` and `paResponse` parameters that I receive from the card issuer after the shopper pays. Please help me with this."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"pal-test.adyen.com\")\n\npayload = \"{\\\"additionalAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"amount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"billingAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"browserInfo\\\":{\\\"acceptHeader\\\":\\\"string\\\",\\\"userAgent\\\":\\\"string\\\"},\\\"captureDelayHours\\\":0,\\\"dateOfBirth\\\":\\\"2019-08-24\\\",\\\"dccQuote\\\":{\\\"account\\\":\\\"string\\\",\\\"accountType\\\":\\\"string\\\",\\\"baseAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"basePoints\\\":0,\\\"buy\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"interbank\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"reference\\\":\\\"string\\\",\\\"sell\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"signature\\\":\\\"string\\\",\\\"source\\\":\\\"string\\\",\\\"type\\\":\\\"string\\\",\\\"validTill\\\":\\\"2019-08-24T14:15:22Z\\\"},\\\"deliveryAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"deliveryDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"deviceFingerprint\\\":\\\"string\\\",\\\"fraudOffset\\\":0,\\\"installments\\\":{\\\"value\\\":0},\\\"mcc\\\":\\\"string\\\",\\\"md\\\":\\\"string\\\",\\\"merchantAccount\\\":\\\"string\\\",\\\"merchantOrderReference\\\":\\\"string\\\",\\\"metadata\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"orderReference\\\":\\\"string\\\",\\\"paResponse\\\":\\\"string\\\",\\\"recurring\\\":{\\\"contract\\\":\\\"ONECLICK\\\",\\\"recurringDetailName\\\":\\\"string\\\",\\\"tokenService\\\":\\\"VISATOKENSERVICE\\\"},\\\"recurringProcessingModel\\\":\\\"CardOnFile\\\",\\\"reference\\\":\\\"string\\\",\\\"selectedBrand\\\":\\\"string\\\",\\\"selectedRecurringDetailReference\\\":\\\"string\\\",\\\"sessionId\\\":\\\"string\\\",\\\"shopperEmail\\\":\\\"string\\\",\\\"shopperIP\\\":\\\"string\\\",\\\"shopperInteraction\\\":\\\"Ecommerce\\\",\\\"shopperLocale\\\":\\\"string\\\",\\\"shopperName\\\":{\\\"firstName\\\":\\\"string\\\",\\\"lastName\\\":\\\"string\\\"},\\\"shopperReference\\\":\\\"string\\\",\\\"shopperStatement\\\":\\\"string\\\",\\\"socialSecurityNumber\\\":\\\"string\\\",\\\"store\\\":\\\"string\\\",\\\"telephoneNumber\\\":\\\"string\\\",\\\"totalsGroup\\\":\\\"string\\\"}\"\n\nheaders = {\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/pal/servlet/Payment/v30/authorise3d\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-authorise3d",
        "framework": "adyen.com",
        "functionality": "Complete a 3DS authorisation",
        "api_arguments": {},
        "description": "For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.",
        "path": "/authorise3d",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Payments"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the `md` and `paResponse` parameters.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the `md` and `paResponse` parameters.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9035574541580093
            },
            {
                "idx": 2,
                "candidate": "I need to complete a 3D Secure authorisation using the Adyen Payment API by sending the received `md` and `paResponse` parameters. Please help me with that.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3D Secure authorisation using the Adyen Payment API by sending the received `md` and `paResponse` parameters. Please help me with that.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9288579455251954
            },
            {
                "idx": 3,
                "candidate": "I need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the `md` and `paResponse` parameters.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the `md` and `paResponse` parameters.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9035574541580093
            },
            {
                "idx": 4,
                "candidate": "I need to complete a 3DS authorisation process by sending the `md` and `paResponse` parameters to the Adyen Payment API using the post-authorise3d endpoint.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3DS authorisation process by sending the `md` and `paResponse` parameters to the Adyen Payment API using the post-authorise3d endpoint.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9073807281012393
            },
            {
                "idx": 5,
                "candidate": "I need to complete a 3D Secure authorisation process by making a call to the post-authorise3d endpoint of the Adyen Payment API. I should include the received `md` and `paResponse` parameters in the request.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3D Secure authorisation process by making a call to the post-authorise3d endpoint of the Adyen Payment API. I should include the received `md` and `paResponse` parameters in the request.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9127759059487748
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the `md` and `paResponse` parameters."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://pal-test.adyen.com/pal/servlet/Payment/v30/authorise3d\"\n\n\tpayload := strings.NewReader(\"{\\\"additionalAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"amount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"billingAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"browserInfo\\\":{\\\"acceptHeader\\\":\\\"string\\\",\\\"userAgent\\\":\\\"string\\\"},\\\"captureDelayHours\\\":0,\\\"dateOfBirth\\\":\\\"2019-08-24\\\",\\\"dccQuote\\\":{\\\"account\\\":\\\"string\\\",\\\"accountType\\\":\\\"string\\\",\\\"baseAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"basePoints\\\":0,\\\"buy\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"interbank\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"reference\\\":\\\"string\\\",\\\"sell\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"signature\\\":\\\"string\\\",\\\"source\\\":\\\"string\\\",\\\"type\\\":\\\"string\\\",\\\"validTill\\\":\\\"2019-08-24T14:15:22Z\\\"},\\\"deliveryAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"deliveryDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"deviceFingerprint\\\":\\\"string\\\",\\\"fraudOffset\\\":0,\\\"installments\\\":{\\\"value\\\":0},\\\"mcc\\\":\\\"string\\\",\\\"md\\\":\\\"string\\\",\\\"merchantAccount\\\":\\\"string\\\",\\\"merchantOrderReference\\\":\\\"string\\\",\\\"metadata\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"orderReference\\\":\\\"string\\\",\\\"paResponse\\\":\\\"string\\\",\\\"recurring\\\":{\\\"contract\\\":\\\"ONECLICK\\\",\\\"recurringDetailName\\\":\\\"string\\\",\\\"tokenService\\\":\\\"VISATOKENSERVICE\\\"},\\\"recurringProcessingModel\\\":\\\"CardOnFile\\\",\\\"reference\\\":\\\"string\\\",\\\"selectedBrand\\\":\\\"string\\\",\\\"selectedRecurringDetailReference\\\":\\\"string\\\",\\\"sessionId\\\":\\\"string\\\",\\\"shopperEmail\\\":\\\"string\\\",\\\"shopperIP\\\":\\\"string\\\",\\\"shopperInteraction\\\":\\\"Ecommerce\\\",\\\"shopperLocale\\\":\\\"string\\\",\\\"shopperName\\\":{\\\"firstName\\\":\\\"string\\\",\\\"lastName\\\":\\\"string\\\"},\\\"shopperReference\\\":\\\"string\\\",\\\"shopperStatement\\\":\\\"string\\\",\\\"socialSecurityNumber\\\":\\\"string\\\",\\\"store\\\":\\\"string\\\",\\\"telephoneNumber\\\":\\\"string\\\",\\\"totalsGroup\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-authorise3d",
        "framework": "adyen.com",
        "functionality": "Complete a 3DS authorisation",
        "api_arguments": {},
        "description": "For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.",
        "path": "/authorise3d",
        "method": "post",
        "lang": "go",
        "domain": [
            "Payments"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I need to complete a 3DS authorisation process by making a request to the Adyen Payment API endpoint post-authorise3d. I will provide the necessary `md` and `paResponse` parameters received from the card issuer upon shopper's payment confirmation during a 3D Secure session.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3DS authorisation process by making a request to the Adyen Payment API endpoint post-authorise3d. I will provide the necessary `md` and `paResponse` parameters received from the card issuer upon shopper's payment confirmation during a 3D Secure session.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8056379182994167
            },
            {
                "idx": 2,
                "candidate": "I have an authenticated 3D Secure session and I need to complete the payment authorisation using the Adyen Payment API. Please help me with this by providing an example of how to use the endpoint post-authorise3d. I will provide the `md` and `paResponse` parameters that I receive from the card issuer.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI have an authenticated 3D Secure session and I need to complete the payment authorisation using the Adyen Payment API. Please help me with this by providing an example of how to use the endpoint post-authorise3d. I will provide the `md` and `paResponse` parameters that I receive from the card issuer.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7837174433102083
            },
            {
                "idx": 3,
                "candidate": "I need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the `md` and `paResponse` parameters.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the `md` and `paResponse` parameters.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9035574541580093
            },
            {
                "idx": 4,
                "candidate": "I need to complete a 3DS authorisation with the Adyen Payment API using the received `md` and `paResponse` parameters. Please help me with that.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3DS authorisation with the Adyen Payment API using the received `md` and `paResponse` parameters. Please help me with that.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9157753986944052
            },
            {
                "idx": 5,
                "candidate": "I need to complete a 3DS authorisation for a payment by sending the `md` and `paResponse` parameters to the endpoint post-authorise3d from Adyen Payment API.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3DS authorisation for a payment by sending the `md` and `paResponse` parameters to the endpoint post-authorise3d from Adyen Payment API.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.880084302852423
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "I have an authenticated 3D Secure session and I need to complete the payment authorisation using the Adyen Payment API. Please help me with this by providing an example of how to use the endpoint post-authorise3d. I will provide the `md` and `paResponse` parameters that I receive from the card issuer."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/authorise3d\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"additionalAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"amount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"billingAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"browserInfo\\\":{\\\"acceptHeader\\\":\\\"string\\\",\\\"userAgent\\\":\\\"string\\\"},\\\"captureDelayHours\\\":0,\\\"dateOfBirth\\\":\\\"2019-08-24\\\",\\\"dccQuote\\\":{\\\"account\\\":\\\"string\\\",\\\"accountType\\\":\\\"string\\\",\\\"baseAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"basePoints\\\":0,\\\"buy\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"interbank\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"reference\\\":\\\"string\\\",\\\"sell\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"signature\\\":\\\"string\\\",\\\"source\\\":\\\"string\\\",\\\"type\\\":\\\"string\\\",\\\"validTill\\\":\\\"2019-08-24T14:15:22Z\\\"},\\\"deliveryAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"deliveryDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"deviceFingerprint\\\":\\\"string\\\",\\\"fraudOffset\\\":0,\\\"installments\\\":{\\\"value\\\":0},\\\"mcc\\\":\\\"string\\\",\\\"md\\\":\\\"string\\\",\\\"merchantAccount\\\":\\\"string\\\",\\\"merchantOrderReference\\\":\\\"string\\\",\\\"metadata\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"orderReference\\\":\\\"string\\\",\\\"paResponse\\\":\\\"string\\\",\\\"recurring\\\":{\\\"contract\\\":\\\"ONECLICK\\\",\\\"recurringDetailName\\\":\\\"string\\\",\\\"tokenService\\\":\\\"VISATOKENSERVICE\\\"},\\\"recurringProcessingModel\\\":\\\"CardOnFile\\\",\\\"reference\\\":\\\"string\\\",\\\"selectedBrand\\\":\\\"string\\\",\\\"selectedRecurringDetailReference\\\":\\\"string\\\",\\\"sessionId\\\":\\\"string\\\",\\\"shopperEmail\\\":\\\"string\\\",\\\"shopperIP\\\":\\\"string\\\",\\\"shopperInteraction\\\":\\\"Ecommerce\\\",\\\"shopperLocale\\\":\\\"string\\\",\\\"shopperName\\\":{\\\"firstName\\\":\\\"string\\\",\\\"lastName\\\":\\\"string\\\"},\\\"shopperReference\\\":\\\"string\\\",\\\"shopperStatement\\\":\\\"string\\\",\\\"socialSecurityNumber\\\":\\\"string\\\",\\\"store\\\":\\\"string\\\",\\\"telephoneNumber\\\":\\\"string\\\",\\\"totalsGroup\\\":\\\"string\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-authorise3d",
        "framework": "adyen.com",
        "functionality": "Complete a 3DS authorisation",
        "api_arguments": {},
        "description": "For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.",
        "path": "/authorise3d",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Payments"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I have an authenticated 3D Secure session, and I need to complete the payment authorisation using the Adyen Payment API. Please help me with a query to use the post-authorise3d endpoint and pass the required `md` and `paResponse` parameters.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI have an authenticated 3D Secure session, and I need to complete the payment authorisation using the Adyen Payment API. Please help me with a query to use the post-authorise3d endpoint and pass the required `md` and `paResponse` parameters.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8339809616460809
            },
            {
                "idx": 2,
                "candidate": "I need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the `md` and `paResponse` parameters.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the `md` and `paResponse` parameters.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9035574541580093
            },
            {
                "idx": 3,
                "candidate": "I want to complete a 3D Secure authorisation process using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the necessary `md` and `paResponse` parameters.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to complete a 3D Secure authorisation process using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the necessary `md` and `paResponse` parameters.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9122666878533476
            },
            {
                "idx": 4,
                "candidate": "I need to complete a 3D Secure authorisation process by sending the received `md` and `paResponse` parameters to the Adyen Payment API using the post-authorise3d endpoint.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3D Secure authorisation process by sending the received `md` and `paResponse` parameters to the Adyen Payment API using the post-authorise3d endpoint.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9051429428952885
            },
            {
                "idx": 5,
                "candidate": "I need to complete a 3DS authorisation using the Adyen Payment API by providing the `md` and `paResponse` parameters. Please help me with that.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3DS authorisation using the Adyen Payment API by providing the `md` and `paResponse` parameters. Please help me with that.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.920730672477796
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I have an authenticated 3D Secure session, and I need to complete the payment authorisation using the Adyen Payment API. Please help me with a query to use the post-authorise3d endpoint and pass the required `md` and `paResponse` parameters."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://pal-test.adyen.com/pal/servlet/Payment/v30/authorise3d\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"additionalAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"amount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"billingAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"browserInfo\\\":{\\\"acceptHeader\\\":\\\"string\\\",\\\"userAgent\\\":\\\"string\\\"},\\\"captureDelayHours\\\":0,\\\"dateOfBirth\\\":\\\"2019-08-24\\\",\\\"dccQuote\\\":{\\\"account\\\":\\\"string\\\",\\\"accountType\\\":\\\"string\\\",\\\"baseAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"basePoints\\\":0,\\\"buy\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"interbank\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"reference\\\":\\\"string\\\",\\\"sell\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"signature\\\":\\\"string\\\",\\\"source\\\":\\\"string\\\",\\\"type\\\":\\\"string\\\",\\\"validTill\\\":\\\"2019-08-24T14:15:22Z\\\"},\\\"deliveryAddress\\\":{\\\"city\\\":\\\"string\\\",\\\"country\\\":\\\"string\\\",\\\"houseNumberOrName\\\":\\\"string\\\",\\\"postalCode\\\":\\\"string\\\",\\\"stateOrProvince\\\":\\\"string\\\",\\\"street\\\":\\\"string\\\"},\\\"deliveryDate\\\":\\\"2019-08-24T14:15:22Z\\\",\\\"deviceFingerprint\\\":\\\"string\\\",\\\"fraudOffset\\\":0,\\\"installments\\\":{\\\"value\\\":0},\\\"mcc\\\":\\\"string\\\",\\\"md\\\":\\\"string\\\",\\\"merchantAccount\\\":\\\"string\\\",\\\"merchantOrderReference\\\":\\\"string\\\",\\\"metadata\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"},\\\"orderReference\\\":\\\"string\\\",\\\"paResponse\\\":\\\"string\\\",\\\"recurring\\\":{\\\"contract\\\":\\\"ONECLICK\\\",\\\"recurringDetailName\\\":\\\"string\\\",\\\"tokenService\\\":\\\"VISATOKENSERVICE\\\"},\\\"recurringProcessingModel\\\":\\\"CardOnFile\\\",\\\"reference\\\":\\\"string\\\",\\\"selectedBrand\\\":\\\"string\\\",\\\"selectedRecurringDetailReference\\\":\\\"string\\\",\\\"sessionId\\\":\\\"string\\\",\\\"shopperEmail\\\":\\\"string\\\",\\\"shopperIP\\\":\\\"string\\\",\\\"shopperInteraction\\\":\\\"Ecommerce\\\",\\\"shopperLocale\\\":\\\"string\\\",\\\"shopperName\\\":{\\\"firstName\\\":\\\"string\\\",\\\"lastName\\\":\\\"string\\\"},\\\"shopperReference\\\":\\\"string\\\",\\\"shopperStatement\\\":\\\"string\\\",\\\"socialSecurityNumber\\\":\\\"string\\\",\\\"store\\\":\\\"string\\\",\\\"telephoneNumber\\\":\\\"string\\\",\\\"totalsGroup\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-authorise3d",
        "framework": "adyen.com",
        "functionality": "Complete a 3DS authorisation",
        "api_arguments": {},
        "description": "For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.",
        "path": "/authorise3d",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Payments"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I need to complete a 3DS authorisation for a payment using the Adyen Payment API. Please provide an example of how to use the post-authorise3d endpoint to send the required `md` and `paResponse` parameters.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3DS authorisation for a payment using the Adyen Payment API. Please provide an example of how to use the post-authorise3d endpoint to send the required `md` and `paResponse` parameters.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8842375818951262
            },
            {
                "idx": 2,
                "candidate": "I need to complete a 3DS authorisation process with the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the required parameters `md` and `paResponse`.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3DS authorisation process with the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the required parameters `md` and `paResponse`.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9091185597126474
            },
            {
                "idx": 3,
                "candidate": "I need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the required `md` and `paResponse` parameters.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3D Secure authorisation using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the required `md` and `paResponse` parameters.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8974422796209549
            },
            {
                "idx": 4,
                "candidate": "I need to complete a 3DS authorisation process by sending the received `md` and `paResponse` parameters to the Adyen Payment API using the post-authorise3d endpoint.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3DS authorisation process by sending the received `md` and `paResponse` parameters to the Adyen Payment API using the post-authorise3d endpoint.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9001908528700416
            },
            {
                "idx": 5,
                "candidate": "I need to complete a 3DS authorisation process by sending the `md` and `paResponse` parameters to the Adyen Payment API using the post-authorise3d endpoint.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3DS authorisation process by sending the `md` and `paResponse` parameters to the Adyen Payment API using the post-authorise3d endpoint.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9073807281012393
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I need to complete a 3DS authorisation for a payment using the Adyen Payment API. Please provide an example of how to use the post-authorise3d endpoint to send the required `md` and `paResponse` parameters."
        }
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"additionalAmount\": [\n    \"currency\": \"str\",\n    \"value\": 0\n  ],\n  \"additionalData\": [\n    \"property1\": \"string\",\n    \"property2\": \"string\",\n    \"allow3DS2\": \"string\",\n    \"challengeWindowSize\": \"01\",\n    \"executeThreeD\": \"string\",\n    \"mpiImplementationType\": \"string\",\n    \"scaExemption\": \"string\",\n    \"threeDSVersion\": \"string\"\n  ],\n  \"amount\": [\n    \"currency\": \"str\",\n    \"value\": 0\n  ],\n  \"billingAddress\": [\n    \"city\": \"string\",\n    \"country\": \"string\",\n    \"houseNumberOrName\": \"string\",\n    \"postalCode\": \"string\",\n    \"stateOrProvince\": \"string\",\n    \"street\": \"string\"\n  ],\n  \"browserInfo\": [\n    \"acceptHeader\": \"string\",\n    \"userAgent\": \"string\"\n  ],\n  \"captureDelayHours\": 0,\n  \"dateOfBirth\": \"2019-08-24\",\n  \"dccQuote\": [\n    \"account\": \"string\",\n    \"accountType\": \"string\",\n    \"baseAmount\": [\n      \"currency\": \"str\",\n      \"value\": 0\n    ],\n    \"basePoints\": 0,\n    \"buy\": [\n      \"currency\": \"str\",\n      \"value\": 0\n    ],\n    \"interbank\": [\n      \"currency\": \"str\",\n      \"value\": 0\n    ],\n    \"reference\": \"string\",\n    \"sell\": [\n      \"currency\": \"str\",\n      \"value\": 0\n    ],\n    \"signature\": \"string\",\n    \"source\": \"string\",\n    \"type\": \"string\",\n    \"validTill\": \"2019-08-24T14:15:22Z\"\n  ],\n  \"deliveryAddress\": [\n    \"city\": \"string\",\n    \"country\": \"string\",\n    \"houseNumberOrName\": \"string\",\n    \"postalCode\": \"string\",\n    \"stateOrProvince\": \"string\",\n    \"street\": \"string\"\n  ],\n  \"deliveryDate\": \"2019-08-24T14:15:22Z\",\n  \"deviceFingerprint\": \"string\",\n  \"fraudOffset\": 0,\n  \"installments\": [\"value\": 0],\n  \"mcc\": \"string\",\n  \"md\": \"string\",\n  \"merchantAccount\": \"string\",\n  \"merchantOrderReference\": \"string\",\n  \"metadata\": [\n    \"property1\": \"string\",\n    \"property2\": \"string\"\n  ],\n  \"orderReference\": \"string\",\n  \"paResponse\": \"string\",\n  \"recurring\": [\n    \"contract\": \"ONECLICK\",\n    \"recurringDetailName\": \"string\",\n    \"tokenService\": \"VISATOKENSERVICE\"\n  ],\n  \"recurringProcessingModel\": \"CardOnFile\",\n  \"reference\": \"string\",\n  \"selectedBrand\": \"string\",\n  \"selectedRecurringDetailReference\": \"string\",\n  \"sessionId\": \"string\",\n  \"shopperEmail\": \"string\",\n  \"shopperIP\": \"string\",\n  \"shopperInteraction\": \"Ecommerce\",\n  \"shopperLocale\": \"string\",\n  \"shopperName\": [\n    \"firstName\": \"string\",\n    \"lastName\": \"string\"\n  ],\n  \"shopperReference\": \"string\",\n  \"shopperStatement\": \"string\",\n  \"socialSecurityNumber\": \"string\",\n  \"store\": \"string\",\n  \"telephoneNumber\": \"string\",\n  \"totalsGroup\": \"string\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://pal-test.adyen.com/pal/servlet/Payment/v30/authorise3d\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-authorise3d",
        "framework": "adyen.com",
        "functionality": "Complete a 3DS authorisation",
        "api_arguments": {},
        "description": "For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.",
        "path": "/authorise3d",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Payments"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to complete a 3D Secure authorisation for a payment using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d to send the required `md` and `paResponse` parameters.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to complete a 3D Secure authorisation for a payment using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d to send the required `md` and `paResponse` parameters.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8944752536208194
            },
            {
                "idx": 2,
                "candidate": "I want to complete a 3D Secure authorisation process with Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the required `md` and `paResponse` parameters.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to complete a 3D Secure authorisation process with Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d with the required `md` and `paResponse` parameters.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9160735244629907
            },
            {
                "idx": 3,
                "candidate": "I need to complete a 3D Secure authorisation process by making a request to the Adyen Payment API using the endpoint post-authorise3d and providing the `md` and `paResponse` parameters.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3D Secure authorisation process by making a request to the Adyen Payment API using the endpoint post-authorise3d and providing the `md` and `paResponse` parameters.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9165555801427715
            },
            {
                "idx": 4,
                "candidate": "I need to complete a 3D Secure authorisation process by sending the received `md` and `paResponse` parameters to the Adyen Payment API using the post-authorise3d endpoint.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3D Secure authorisation process by sending the received `md` and `paResponse` parameters to the Adyen Payment API using the post-authorise3d endpoint.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9051429428952885
            },
            {
                "idx": 5,
                "candidate": "I need to complete a 3D Secure authorisation with the Adyen Payment API by providing the `md` and `paResponse` parameters received from the card issuer.",
                "input_text": "Functionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to complete a 3D Secure authorisation with the Adyen Payment API by providing the `md` and `paResponse` parameters received from the card issuer.\n###Output:\nFunctionality: Complete a 3DS authorisation\nDescription: For an authenticated 3D Secure session, completes the payment authorisation. This endpoint must receive the `md` and `paResponse` parameters that you get from the card issuer after a shopper pays via 3D Secure.\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/details`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/details) endpoint under Checkout API instead.\nEndpoint: post-authorise3d\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9268916009593678
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I want to complete a 3D Secure authorisation for a payment using the Adyen Payment API. Please provide an example of how to use the endpoint post-authorise3d to send the required `md` and `paResponse` parameters."
        }
    },
    {
        "api_call": "curl --request POST \\\n  --url https://pal-test.adyen.com/pal/servlet/Payment/v30/cancel \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"additionalData\":{\"property1\":\"string\",\"property2\":\"string\",\"allow3DS2\":\"string\",\"challengeWindowSize\":\"01\",\"executeThreeD\":\"string\",\"mpiImplementationType\":\"string\",\"scaExemption\":\"string\",\"threeDSVersion\":\"string\"},\"merchantAccount\":\"string\",\"originalMerchantReference\":\"string\",\"originalReference\":\"string\",\"reference\":\"string\",\"tenderReference\":\"string\",\"uniqueTerminalId\":\"string\"}'",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-cancel",
        "framework": "adyen.com",
        "functionality": "Cancel an authorisation",
        "api_arguments": {},
        "description": "Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.",
        "path": "/cancel",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. How do I make a request to the post-cancel endpoint?",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. How do I make a request to the post-cancel endpoint?\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5452605803238154
            },
            {
                "idx": 2,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. How can I do that using the post-cancel endpoint?",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. How can I do that using the post-cancel endpoint?\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5519342842112561
            },
            {
                "idx": 3,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request and returning a unique reference for this cancellation.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request and returning a unique reference for this cancellation.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5046545746975624
            },
            {
                "idx": 4,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request details for the post-cancel endpoint.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request details for the post-cancel endpoint.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5303683039761545
            },
            {
                "idx": 5,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request to return a unique reference for this cancellation.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request to return a unique reference for this cancellation.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5034140384652825
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request to return a unique reference for this cancellation."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/cancel\")\n  .post(body)\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-cancel",
        "framework": "adyen.com",
        "functionality": "Cancel an authorisation",
        "api_arguments": {},
        "description": "Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.",
        "path": "/cancel",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel the authorisation hold on a payment using Adyen Payment API. Please help me with the request and provide a unique reference for the cancellation.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using Adyen Payment API. Please help me with the request and provide a unique reference for the cancellation.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5088202427862715
            },
            {
                "idx": 2,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. How can I do that with a unique reference for the request?",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. How can I do that with a unique reference for the request?\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5331845711862355
            },
            {
                "idx": 3,
                "candidate": "I want to cancel the authorisation hold on a payment using Adyen Payment API. Please provide an example of how to use the endpoint post-cancel.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using Adyen Payment API. Please provide an example of how to use the endpoint post-cancel.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5425148495269196
            },
            {
                "idx": 4,
                "candidate": "I want to cancel the authorisation hold on a payment using Adyen Payment API. Please help me construct a request for the endpoint post-cancel.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using Adyen Payment API. Please help me construct a request for the endpoint post-cancel.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5303351652347317
            },
            {
                "idx": 5,
                "candidate": "I need to cancel the authorisation hold on a payment and receive a unique reference for this request using the Adyen Payment API.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to cancel the authorisation hold on a payment and receive a unique reference for this request using the Adyen Payment API.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5140792757041724
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I want to cancel the authorisation hold on a payment using Adyen Payment API. Please help me with the request and provide a unique reference for the cancellation."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://pal-test.adyen.com/pal/servlet/Payment/v30/cancel',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH', 'content-type': 'application/json'},\n  body: {\n    additionalData: {\n      property1: 'string',\n      property2: 'string',\n      allow3DS2: 'string',\n      challengeWindowSize: '01',\n      executeThreeD: 'string',\n      mpiImplementationType: 'string',\n      scaExemption: 'string',\n      threeDSVersion: 'string'\n    },\n    merchantAccount: 'string',\n    originalMerchantReference: 'string',\n    originalReference: 'string',\n    reference: 'string',\n    tenderReference: 'string',\n    uniqueTerminalId: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-cancel",
        "framework": "adyen.com",
        "functionality": "Cancel an authorisation",
        "api_arguments": {},
        "description": "Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.",
        "path": "/cancel",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request format for the post-cancel endpoint.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request format for the post-cancel endpoint.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5258246852678161
            },
            {
                "idx": 2,
                "candidate": "I need to cancel the authorisation hold on a payment and get a unique reference for this request using the Adyen Payment API. How can I do that?",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to cancel the authorisation hold on a payment and get a unique reference for this request using the Adyen Payment API. How can I do that?\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5233378060318807
            },
            {
                "idx": 3,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. How can I do that with a unique reference for the request?",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. How can I do that with a unique reference for the request?\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5331845711862355
            },
            {
                "idx": 4,
                "candidate": "I want to cancel the authorisation hold on a payment using Adyen Payment API. How can I achieve this with a unique reference for the request?",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using Adyen Payment API. How can I achieve this with a unique reference for the request?\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5398041563862378
            },
            {
                "idx": 5,
                "candidate": "I'd like to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request details for the post-cancel endpoint.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request details for the post-cancel endpoint.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5342831991370102
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "I need to cancel the authorisation hold on a payment and get a unique reference for this request using the Adyen Payment API. How can I do that?"
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"pal-test.adyen.com\")\n\npayload = \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\"\n\nheaders = {\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/pal/servlet/Payment/v30/cancel\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-cancel",
        "framework": "adyen.com",
        "functionality": "Cancel an authorisation",
        "api_arguments": {},
        "description": "Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.",
        "path": "/cancel",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request details for the post-cancel endpoint.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request details for the post-cancel endpoint.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5303683039761545
            },
            {
                "idx": 2,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please provide me with an example of how to use the endpoint \"post-cancel\".",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. Please provide me with an example of how to use the endpoint \"post-cancel\".\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5383586097930937
            },
            {
                "idx": 3,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please provide an example of how to use the endpoint post-cancel.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. Please provide an example of how to use the endpoint post-cancel.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5402166229503205
            },
            {
                "idx": 4,
                "candidate": "I'd like to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request details for the post-cancel endpoint.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request details for the post-cancel endpoint.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5342831991370102
            },
            {
                "idx": 5,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request using the post-cancel endpoint.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request using the post-cancel endpoint.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5387963093211644
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request details for the post-cancel endpoint."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://pal-test.adyen.com/pal/servlet/Payment/v30/cancel\"\n\n\tpayload := strings.NewReader(\"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-cancel",
        "framework": "adyen.com",
        "functionality": "Cancel an authorisation",
        "api_arguments": {},
        "description": "Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.",
        "path": "/cancel",
        "method": "post",
        "lang": "go",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. How can I do that and get a unique reference for the request?",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. How can I do that and get a unique reference for the request?\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5145592517527819
            },
            {
                "idx": 2,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5359630177518168
            },
            {
                "idx": 3,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Could you please help me construct a request using the post-cancel endpoint?",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. Could you please help me construct a request using the post-cancel endpoint?\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5224244008170825
            },
            {
                "idx": 4,
                "candidate": "I want to cancel the authorisation hold on a payment using Adyen Payment API, please help me with that.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using Adyen Payment API, please help me with that.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5347203110738354
            },
            {
                "idx": 5,
                "candidate": "I want to cancel the authorisation hold on a payment using Adyen Payment API. Please provide me with the unique reference for this request. (Refer to the functionality and description of the post-cancel endpoint.)",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using Adyen Payment API. Please provide me with the unique reference for this request. (Refer to the functionality and description of the post-cancel endpoint.)\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5072608444862257
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I want to cancel the authorisation hold on a payment using Adyen Payment API. Please provide me with the unique reference for this request. (Refer to the functionality and description of the post-cancel endpoint.)"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/cancel\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-cancel",
        "framework": "adyen.com",
        "functionality": "Cancel an authorisation",
        "api_arguments": {},
        "description": "Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.",
        "path": "/cancel",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I need to cancel the authorisation hold on a payment and get a unique reference for this request using the Adyen Payment API.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to cancel the authorisation hold on a payment and get a unique reference for this request using the Adyen Payment API.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5157824353028234
            },
            {
                "idx": 2,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. How do I do that?",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. How do I do that?\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5443568863004595
            },
            {
                "idx": 3,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. How can I do that with a unique reference for the request?",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. How can I do that with a unique reference for the request?\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5331845711862355
            },
            {
                "idx": 4,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5359630177518168
            },
            {
                "idx": 5,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. How can I do this using the post-cancel endpoint?",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. How can I do this using the post-cancel endpoint?\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5527082959561013
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I need to cancel the authorisation hold on a payment and get a unique reference for this request using the Adyen Payment API."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://pal-test.adyen.com/pal/servlet/Payment/v30/cancel\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-cancel",
        "framework": "adyen.com",
        "functionality": "Cancel an authorisation",
        "api_arguments": {},
        "description": "Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.",
        "path": "/cancel",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I need to cancel the authorisation hold on a payment and get a unique reference for this request using the Adyen Payment API.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to cancel the authorisation hold on a payment and get a unique reference for this request using the Adyen Payment API.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5157824353028234
            },
            {
                "idx": 2,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Could you please provide an example of how to use the endpoint post-cancel?",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. Could you please provide an example of how to use the endpoint post-cancel?\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5397305736825426
            },
            {
                "idx": 3,
                "candidate": "I'd like to cancel the authorisation hold on payment with a specific reference using the Adyen Payment API. Could you please help me with that?",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel the authorisation hold on payment with a specific reference using the Adyen Payment API. Could you please help me with that?\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5278129036032102
            },
            {
                "idx": 4,
                "candidate": "I want to cancel the authorisation hold on a payment using Adyen Payment API. Please help me with that. (Unique payment identifier required for the request.)",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using Adyen Payment API. Please help me with that. (Unique payment identifier required for the request.)\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5249053428917948
            },
            {
                "idx": 5,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please provide me with an example of how to use the post-cancel endpoint for this purpose.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. Please provide me with an example of how to use the post-cancel endpoint for this purpose.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5373999883785351
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I need to cancel the authorisation hold on a payment and get a unique reference for this request using the Adyen Payment API."
        }
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"additionalData\": [\n    \"property1\": \"string\",\n    \"property2\": \"string\",\n    \"allow3DS2\": \"string\",\n    \"challengeWindowSize\": \"01\",\n    \"executeThreeD\": \"string\",\n    \"mpiImplementationType\": \"string\",\n    \"scaExemption\": \"string\",\n    \"threeDSVersion\": \"string\"\n  ],\n  \"merchantAccount\": \"string\",\n  \"originalMerchantReference\": \"string\",\n  \"originalReference\": \"string\",\n  \"reference\": \"string\",\n  \"tenderReference\": \"string\",\n  \"uniqueTerminalId\": \"string\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://pal-test.adyen.com/pal/servlet/Payment/v30/cancel\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-cancel",
        "framework": "adyen.com",
        "functionality": "Cancel an authorisation",
        "api_arguments": {},
        "description": "Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.",
        "path": "/cancel",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request to return a unique reference for this cancellation.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request to return a unique reference for this cancellation.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5034140384652825
            },
            {
                "idx": 2,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with that by giving me an example of how to use the endpoint post-cancel.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with that by giving me an example of how to use the endpoint post-cancel.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5420263300625865
            },
            {
                "idx": 3,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. How can I do this using the post-cancel endpoint?",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. How can I do this using the post-cancel endpoint?\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5527082959561013
            },
            {
                "idx": 4,
                "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request using the post-cancel endpoint.",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request using the post-cancel endpoint.\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5387963093211644
            },
            {
                "idx": 5,
                "candidate": "I want to cancel the authorisation hold on a payment using Adyen Payment API. How can I do that?",
                "input_text": "Functionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel the authorisation hold on a payment using Adyen Payment API. How can I do that?\n###Output:\nFunctionality: Cancel an authorisation\nDescription: Cancels the authorisation hold on a payment, returning a unique reference for this request. You can cancel payments after authorisation only for payment methods that support distinct authorisations and captures.\n\nFor more information, refer to [Cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/cancels) endpoint under Checkout API instead.\nEndpoint: post-cancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5433013066368689
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I want to cancel the authorisation hold on a payment using the Adyen Payment API. Please help me with the request to return a unique reference for this cancellation."
        }
    },
    {
        "api_call": "curl --request POST \\\n  --url https://pal-test.adyen.com/pal/servlet/Payment/v30/cancelOrRefund \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"additionalData\":{\"property1\":\"string\",\"property2\":\"string\",\"allow3DS2\":\"string\",\"challengeWindowSize\":\"01\",\"executeThreeD\":\"string\",\"mpiImplementationType\":\"string\",\"scaExemption\":\"string\",\"threeDSVersion\":\"string\"},\"merchantAccount\":\"string\",\"originalMerchantReference\":\"string\",\"originalReference\":\"string\",\"reference\":\"string\",\"tenderReference\":\"string\",\"uniqueTerminalId\":\"string\"}'",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-cancelOrRefund",
        "framework": "adyen.com",
        "functionality": "Cancel or refund a payment",
        "api_arguments": {},
        "description": "Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.",
        "path": "/cancelOrRefund",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I need to cancel or refund a payment using the Adyen Payment API. If the payment has not been captured yet, I will cancel it. If it has already been captured, I will refund the payment. How can I achieve this using the post-cancelOrRefund endpoint?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to cancel or refund a payment using the Adyen Payment API. If the payment has not been captured yet, I will cancel it. If it has already been captured, I will refund the payment. How can I achieve this using the post-cancelOrRefund endpoint?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.14612837453886182
            },
            {
                "idx": 2,
                "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled or refunded based on its current status, and provide the appropriate API call?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled or refunded based on its current status, and provide the appropriate API call?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.13424601001143646
            },
            {
                "idx": 3,
                "candidate": "I want to cancel or refund a payment using the Adyen Payment API. How can I determine if the payment needs to be cancelled or refunded, and make the corresponding request?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel or refund a payment using the Adyen Payment API. How can I determine if the payment needs to be cancelled or refunded, and make the corresponding request?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.15994295058978486
            },
            {
                "idx": 4,
                "candidate": "I want to cancel or refund a payment using the Adyen Payment API. Please help me determine if the payment needs to be cancelled (if it hasn't been captured yet) or refunded (if it has already been captured) based on its current status, and then process the corresponding request.",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel or refund a payment using the Adyen Payment API. Please help me determine if the payment needs to be cancelled (if it hasn't been captured yet) or refunded (if it has already been captured) based on its current status, and then process the corresponding request.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.14493934948448112
            },
            {
                "idx": 5,
                "candidate": "I need to cancel or refund a payment using the Adyen Payment API, depending on its current status. How should I proceed?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to cancel or refund a payment using the Adyen Payment API, depending on its current status. How should I proceed?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.14650688113494434
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled or refunded based on its current status, and provide the appropriate API call?"
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/cancelOrRefund\")\n  .post(body)\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-cancelOrRefund",
        "framework": "adyen.com",
        "functionality": "Cancel or refund a payment",
        "api_arguments": {},
        "description": "Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.",
        "path": "/cancelOrRefund",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to cancel a payment with the Adyen Payment API. Could you please help me determine if the payment needs to be refunded or cancelled based on its current status, and guide me through the appropriate API call?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel a payment with the Adyen Payment API. Could you please help me determine if the payment needs to be refunded or cancelled based on its current status, and guide me through the appropriate API call?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.135769702488684
            },
            {
                "idx": 2,
                "candidate": "I want to cancel or refund a payment using the Adyen Payment API. Please help me determine if the payment needs to be cancelled or refunded based on its current status, and then use the appropriate endpoint to make the request. If the payment has not been captured yet, I should use the cancel endpoint. If it has already been captured, I should use the refund endpoint. Let me know which endpoint to use for each scenario.",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel or refund a payment using the Adyen Payment API. Please help me determine if the payment needs to be cancelled or refunded based on its current status, and then use the appropriate endpoint to make the request. If the payment has not been captured yet, I should use the cancel endpoint. If it has already been captured, I should use the refund endpoint. Let me know which endpoint to use for each scenario.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.1456834817352156
            },
            {
                "idx": 3,
                "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled or refunded based on its current status, and provide the appropriate API call? If it hasn't been captured yet, I'd like to cancel it. If it has already been captured, I'd like to refund it.",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled or refunded based on its current status, and provide the appropriate API call? If it hasn't been captured yet, I'd like to cancel it. If it has already been captured, I'd like to refund it.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.1300196372409929
            },
            {
                "idx": 4,
                "candidate": "I want to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled or refunded based on its current status, and then guide me through the corresponding process?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled or refunded based on its current status, and then guide me through the corresponding process?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.15219867965555484
            },
            {
                "idx": 5,
                "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please provide instructions on how to check if the payment has already been captured before making a corresponding refund or cancellation request?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using the Adyen Payment API. Could you please provide instructions on how to check if the payment has already been captured before making a corresponding refund or cancellation request?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.19965704774770363
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled or refunded based on its current status, and provide the appropriate API call? If it hasn't been captured yet, I'd like to cancel it. If it has already been captured, I'd like to refund it."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://pal-test.adyen.com/pal/servlet/Payment/v30/cancelOrRefund',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH', 'content-type': 'application/json'},\n  body: {\n    additionalData: {\n      property1: 'string',\n      property2: 'string',\n      allow3DS2: 'string',\n      challengeWindowSize: '01',\n      executeThreeD: 'string',\n      mpiImplementationType: 'string',\n      scaExemption: 'string',\n      threeDSVersion: 'string'\n    },\n    merchantAccount: 'string',\n    originalMerchantReference: 'string',\n    originalReference: 'string',\n    reference: 'string',\n    tenderReference: 'string',\n    uniqueTerminalId: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-cancelOrRefund",
        "framework": "adyen.com",
        "functionality": "Cancel or refund a payment",
        "api_arguments": {},
        "description": "Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.",
        "path": "/cancelOrRefund",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please provide instructions on how to check if the payment has been captured first, and then make the appropriate `/refund` or `/cancel` call if necessary? (Refer to the documentation for more details)",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using the Adyen Payment API. Could you please provide instructions on how to check if the payment has been captured first, and then make the appropriate `/refund` or `/cancel` call if necessary? (Refer to the documentation for more details)\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.1887310519446571
            },
            {
                "idx": 2,
                "candidate": "I need to cancel or refund a payment using the Adyen Payment API. How can I check if the payment has been captured before making a corresponding request? If it hasn't been captured yet, I want to cancel it. If it has been captured, I want to refund it. Please provide an example.",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to cancel or refund a payment using the Adyen Payment API. How can I check if the payment has been captured before making a corresponding request? If it hasn't been captured yet, I want to cancel it. If it has been captured, I want to refund it. Please provide an example.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.17117225108737455
            },
            {
                "idx": 3,
                "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please guide me on how to check if the payment has been captured first, and then make a corresponding request using the post-cancelOrRefund endpoint?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using the Adyen Payment API. Could you please guide me on how to check if the payment has been captured first, and then make a corresponding request using the post-cancelOrRefund endpoint?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.20511316442574348
            },
            {
                "idx": 4,
                "candidate": "I need to cancel or refund a payment using the Adyen Payment API. How can I determine if the payment has already been captured before making a request to either cancel or refund it? Then, I will use the appropriate endpoint to cancel or refund the payment.",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to cancel or refund a payment using the Adyen Payment API. How can I determine if the payment has already been captured before making a request to either cancel or refund it? Then, I will use the appropriate endpoint to cancel or refund the payment.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.18349181698702738
            },
            {
                "idx": 5,
                "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please guide me on how to check if the payment has been captured first, and then make the appropriate call for cancellation or refund?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using the Adyen Payment API. Could you please guide me on how to check if the payment has been captured first, and then make the appropriate call for cancellation or refund?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.18539428874910743
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "I need to cancel or refund a payment using the Adyen Payment API. How can I check if the payment has been captured before making a corresponding request? If it hasn't been captured yet, I want to cancel it. If it has been captured, I want to refund it. Please provide an example."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"pal-test.adyen.com\")\n\npayload = \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\"\n\nheaders = {\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/pal/servlet/Payment/v30/cancelOrRefund\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-cancelOrRefund",
        "framework": "adyen.com",
        "functionality": "Cancel or refund a payment",
        "api_arguments": {},
        "description": "Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.",
        "path": "/cancelOrRefund",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment has already been captured before making a corresponding refund or cancellation request? If the payment has not been captured yet, I'd like to cancel it. Otherwise, I'd like to refund it. Please let me know how I can check the capture status of the payment before making the request.",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment has already been captured before making a corresponding refund or cancellation request? If the payment has not been captured yet, I'd like to cancel it. Otherwise, I'd like to refund it. Please let me know how I can check the capture status of the payment before making the request.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.22680012431271784
            },
            {
                "idx": 2,
                "candidate": "I'd like to cancel or refund a payment using Adyen Payment API. Could you please help me determine if the payment needs to be cancelled or refunded based on its current status, and if so, how to proceed with the respective API call?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using Adyen Payment API. Could you please help me determine if the payment needs to be cancelled or refunded based on its current status, and if so, how to proceed with the respective API call?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.15134605804089274
            },
            {
                "idx": 3,
                "candidate": "I need to cancel or refund a payment using the Adyen Payment API. How can I check if the payment has been captured before making a corresponding request? If it has not been captured yet, I want to cancel it. If it has already been captured, I want to refund it. Please provide an example.",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to cancel or refund a payment using the Adyen Payment API. How can I check if the payment has been captured before making a corresponding request? If it has not been captured yet, I want to cancel it. If it has already been captured, I want to refund it. Please provide an example.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.16645190238064653
            },
            {
                "idx": 4,
                "candidate": "I want to cancel or refund a payment using the Adyen Payment API. Could you please guide me on how to check if the payment has been captured first, and then make the appropriate call to either cancel or refund it?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel or refund a payment using the Adyen Payment API. Could you please guide me on how to check if the payment has been captured first, and then make the appropriate call to either cancel or refund it?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.18070928627921667
            },
            {
                "idx": 5,
                "candidate": "I want to cancel or refund a payment using the Adyen Payment API. Please help me determine if the payment needs to be cancelled (if it has not been captured yet) or refunded (if it has already been captured), and guide me through the corresponding API call.",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel or refund a payment using the Adyen Payment API. Please help me determine if the payment needs to be cancelled (if it has not been captured yet) or refunded (if it has already been captured), and guide me through the corresponding API call.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.13668383519751726
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I want to cancel or refund a payment using the Adyen Payment API. Please help me determine if the payment needs to be cancelled (if it has not been captured yet) or refunded (if it has already been captured), and guide me through the corresponding API call."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://pal-test.adyen.com/pal/servlet/Payment/v30/cancelOrRefund\"\n\n\tpayload := strings.NewReader(\"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-cancelOrRefund",
        "framework": "adyen.com",
        "functionality": "Cancel or refund a payment",
        "api_arguments": {},
        "description": "Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.",
        "path": "/cancelOrRefund",
        "method": "post",
        "lang": "go",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please guide me on how to check if the payment has been captured first before making a corresponding cancellation or refund request? If the payment has already been captured, I should use the refund endpoint, and if it hasn't been captured yet, I should use the cancel endpoint. Thanks for your help!",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using the Adyen Payment API. Could you please guide me on how to check if the payment has been captured first before making a corresponding cancellation or refund request? If the payment has already been captured, I should use the refund endpoint, and if it hasn't been captured yet, I should use the cancel endpoint. Thanks for your help!\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.17578328141454377
            },
            {
                "idx": 2,
                "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment has already been captured before making a corresponding refund or cancellation request? If so, kindly guide me on how to initiate the refund or cancellation process.",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment has already been captured before making a corresponding refund or cancellation request? If so, kindly guide me on how to initiate the refund or cancellation process.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.15535227083201422
            },
            {
                "idx": 3,
                "candidate": "I want to cancel or refund a payment using the Adyen Payment API. How can I check if the payment has already been captured before making a corresponding request? If it has not been captured yet, I'd like to cancel it. If it has already been captured, I'd like to refund it. Please provide instructions on how to use the post-cancelOrRefund endpoint for this purpose.",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel or refund a payment using the Adyen Payment API. How can I check if the payment has already been captured before making a corresponding request? If it has not been captured yet, I'd like to cancel it. If it has already been captured, I'd like to refund it. Please provide instructions on how to use the post-cancelOrRefund endpoint for this purpose.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.17475867198268366
            },
            {
                "idx": 4,
                "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please provide instructions on how to check if the payment has been captured first, and then make the corresponding cancellation or refund request if necessary? (Using the post-cancelOrRefund endpoint)",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using the Adyen Payment API. Could you please provide instructions on how to check if the payment has been captured first, and then make the corresponding cancellation or refund request if necessary? (Using the post-cancelOrRefund endpoint)\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.20539973904185782
            },
            {
                "idx": 5,
                "candidate": "I'd like to cancel or refund a payment using Adyen Payment API. Could you please help me determine if the payment has already been captured before making a corresponding refund or cancellation request? If so, please guide me on how to use the '/refund' endpoint, otherwise, the '/cancel' endpoint would be the appropriate choice.",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using Adyen Payment API. Could you please help me determine if the payment has already been captured before making a corresponding refund or cancellation request? If so, please guide me on how to use the '/refund' endpoint, otherwise, the '/cancel' endpoint would be the appropriate choice.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.15116043890396058
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I'd like to cancel or refund a payment using Adyen Payment API. Could you please help me determine if the payment has already been captured before making a corresponding refund or cancellation request? If so, please guide me on how to use the '/refund' endpoint, otherwise, the '/cancel' endpoint would be the appropriate choice."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/cancelOrRefund\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-cancelOrRefund",
        "framework": "adyen.com",
        "functionality": "Cancel or refund a payment",
        "api_arguments": {},
        "description": "Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.",
        "path": "/cancelOrRefund",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled (before capture) or refunded (after capture), and guide me through the corresponding process?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled (before capture) or refunded (after capture), and guide me through the corresponding process?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.13910418414417614
            },
            {
                "idx": 2,
                "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Please help me determine if the payment needs to be cancelled or refunded based on its current capture status, and then guide me through the process of making the corresponding request using the post-cancelOrRefund endpoint.",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using the Adyen Payment API. Please help me determine if the payment needs to be cancelled or refunded based on its current capture status, and then guide me through the process of making the corresponding request using the post-cancelOrRefund endpoint.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.16941663605027876
            },
            {
                "idx": 3,
                "candidate": "I want to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled (if it has not been captured yet) or refunded (if it has already been captured), and guide me through the corresponding API call?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled (if it has not been captured yet) or refunded (if it has already been captured), and guide me through the corresponding API call?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.13611822155233821
            },
            {
                "idx": 4,
                "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please guide me on how to check if the payment has already been captured before making a corresponding refund or cancellation request?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using the Adyen Payment API. Could you please guide me on how to check if the payment has already been captured before making a corresponding refund or cancellation request?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.18999268966926183
            },
            {
                "idx": 5,
                "candidate": "I want to cancel or refund a payment using the Adyen Payment API. Please help me determine if the payment needs to be cancelled or refunded based on its current status, and provide me with the appropriate API call.",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel or refund a payment using the Adyen Payment API. Please help me determine if the payment needs to be cancelled or refunded based on its current status, and provide me with the appropriate API call.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.12962258414311983
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I want to cancel or refund a payment using the Adyen Payment API. Please help me determine if the payment needs to be cancelled or refunded based on its current status, and provide me with the appropriate API call."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://pal-test.adyen.com/pal/servlet/Payment/v30/cancelOrRefund\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-cancelOrRefund",
        "framework": "adyen.com",
        "functionality": "Cancel or refund a payment",
        "api_arguments": {},
        "description": "Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.",
        "path": "/cancelOrRefund",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I need to cancel or refund a payment using the Adyen Payment API, depending on its current capture status. How can I do this with the post-cancelOrRefund endpoint?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to cancel or refund a payment using the Adyen Payment API, depending on its current capture status. How can I do this with the post-cancelOrRefund endpoint?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.1541717848731201
            },
            {
                "idx": 2,
                "candidate": "I want to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled or refunded based on its current status, and then guide me through the corresponding process?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled or refunded based on its current status, and then guide me through the corresponding process?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.15219867965555484
            },
            {
                "idx": 3,
                "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled or refunded based on its current status, and then provide an example of how to use the post-cancelOrRefund endpoint to complete the process?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled or refunded based on its current status, and then provide an example of how to use the post-cancelOrRefund endpoint to complete the process?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.17396846707005517
            },
            {
                "idx": 4,
                "candidate": "I want to cancel or refund a payment using the Adyen Payment API. How can I check if the payment has been captured before making a refund or cancellation request? If it hasn't been captured yet, I'd like to cancel it. If it has already been captured, I'd like to refund it. Could you please guide me on how to do this using the post-cancelOrRefund endpoint?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel or refund a payment using the Adyen Payment API. How can I check if the payment has been captured before making a refund or cancellation request? If it hasn't been captured yet, I'd like to cancel it. If it has already been captured, I'd like to refund it. Could you please guide me on how to do this using the post-cancelOrRefund endpoint?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.17907338896386465
            },
            {
                "idx": 5,
                "candidate": "I need to cancel or refund a payment using the Adyen Payment API. If the payment has not been captured yet, I will use the cancel endpoint. If it has already been captured, I will use the refund endpoint instead. How do I make these calls?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to cancel or refund a payment using the Adyen Payment API. If the payment has not been captured yet, I will use the cancel endpoint. If it has already been captured, I will use the refund endpoint instead. How do I make these calls?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.14269106228444828
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I need to cancel or refund a payment using the Adyen Payment API. If the payment has not been captured yet, I will use the cancel endpoint. If it has already been captured, I will use the refund endpoint instead. How do I make these calls?"
        }
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"additionalData\": [\n    \"property1\": \"string\",\n    \"property2\": \"string\",\n    \"allow3DS2\": \"string\",\n    \"challengeWindowSize\": \"01\",\n    \"executeThreeD\": \"string\",\n    \"mpiImplementationType\": \"string\",\n    \"scaExemption\": \"string\",\n    \"threeDSVersion\": \"string\"\n  ],\n  \"merchantAccount\": \"string\",\n  \"originalMerchantReference\": \"string\",\n  \"originalReference\": \"string\",\n  \"reference\": \"string\",\n  \"tenderReference\": \"string\",\n  \"uniqueTerminalId\": \"string\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://pal-test.adyen.com/pal/servlet/Payment/v30/cancelOrRefund\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-cancelOrRefund",
        "framework": "adyen.com",
        "functionality": "Cancel or refund a payment",
        "api_arguments": {},
        "description": "Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.",
        "path": "/cancelOrRefund",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel or refund a payment using the Adyen Payment API. Please help me determine if the payment needs to be cancelled or refunded based on its current status before making the corresponding request to the post-cancelOrRefund endpoint.",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel or refund a payment using the Adyen Payment API. Please help me determine if the payment needs to be cancelled or refunded based on its current status before making the corresponding request to the post-cancelOrRefund endpoint.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.14620393893144404
            },
            {
                "idx": 2,
                "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled or refunded based on its current captured status? If it hasn't been captured yet, I'd like to cancel it. Otherwise, I'd like to refund it. Please let me know how to proceed.",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using the Adyen Payment API. Could you please help me determine if the payment needs to be cancelled or refunded based on its current captured status? If it hasn't been captured yet, I'd like to cancel it. Otherwise, I'd like to refund it. Please let me know how to proceed.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.14196202149624648
            },
            {
                "idx": 3,
                "candidate": "I'd like to cancel a payment that has not been captured yet or refund one that has already been captured using the Adyen Payment API. Could you please help me with that by providing an example of how to use the post-cancelOrRefund endpoint?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel a payment that has not been captured yet or refund one that has already been captured using the Adyen Payment API. Could you please help me with that by providing an example of how to use the post-cancelOrRefund endpoint?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.1417811225575924
            },
            {
                "idx": 4,
                "candidate": "I want to cancel or refund a payment using the Adyen Payment API. How can I check if the payment has already been captured before making a refund or cancellation request? If it has not been captured yet, I'd like to cancel it. If it has been captured, I'd like to refund it. Please help me with this process using the post-cancelOrRefund endpoint.",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel or refund a payment using the Adyen Payment API. How can I check if the payment has already been captured before making a refund or cancellation request? If it has not been captured yet, I'd like to cancel it. If it has been captured, I'd like to refund it. Please help me with this process using the post-cancelOrRefund endpoint.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.1760359419422616
            },
            {
                "idx": 5,
                "candidate": "I'd like to cancel or refund a payment using the Adyen Payment API. Could you please guide me on how to check if the payment has been captured first, and then make a corresponding cancellation or refund request based on the status?",
                "input_text": "Functionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel or refund a payment using the Adyen Payment API. Could you please guide me on how to check if the payment has been captured first, and then make a corresponding cancellation or refund request based on the status?\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.1894153900568874
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "I'd like to cancel a payment that has not been captured yet or refund one that has already been captured using the Adyen Payment API. Could you please help me with that by providing an example of how to use the post-cancelOrRefund endpoint?"
        }
    },
    {
        "api_call": "curl --request POST \\\n  --url https://pal-test.adyen.com/pal/servlet/Payment/v30/capture \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"additionalData\":{\"property1\":\"string\",\"property2\":\"string\",\"allow3DS2\":\"string\",\"challengeWindowSize\":\"01\",\"executeThreeD\":\"string\",\"mpiImplementationType\":\"string\",\"scaExemption\":\"string\",\"threeDSVersion\":\"string\"},\"merchantAccount\":\"string\",\"modificationAmount\":{\"currency\":\"str\",\"value\":0},\"originalMerchantReference\":\"string\",\"originalReference\":\"string\",\"reference\":\"string\",\"tenderReference\":\"string\",\"uniqueTerminalId\":\"string\"}'",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-capture",
        "framework": "adyen.com",
        "functionality": "Capture an authorisation",
        "api_arguments": {},
        "description": "Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n",
        "path": "/capture",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to capture the authorisation hold on a payment and receive a unique reference for this request using the Adyen Payment API.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment and receive a unique reference for this request using the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.1984290861770707
            },
            {
                "idx": 2,
                "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API. Please provide an example of how to make a capture request and obtain a unique reference for the transaction.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using the Adyen Payment API. Please provide an example of how to make a capture request and obtain a unique reference for the transaction.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.19991271691944615
            },
            {
                "idx": 3,
                "candidate": "I want to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for the capture request. If the full authorisation amount is not needed, I can capture a smaller amount to cancel the remaining authorisation balance. This process is optional for payment methods that are captured automatically after authorisation, and it won't lead to double charges even if auto-capture is enabled. For more details, refer to the Capture documentation.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for the capture request. If the full authorisation amount is not needed, I can capture a smaller amount to cancel the remaining authorisation balance. This process is optional for payment methods that are captured automatically after authorisation, and it won't lead to double charges even if auto-capture is enabled. For more details, refer to the Capture documentation.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.20576257978697185
            },
            {
                "idx": 4,
                "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API. Please provide an example of how to make a request to the post-capture endpoint.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using the Adyen Payment API. Please provide an example of how to make a request to the post-capture endpoint.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.213405840177731
            },
            {
                "idx": 5,
                "candidate": "I'd like to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for the request. The full authorisation amount will be captured, but it's also possible to capture a smaller amount to cancel the remaining authorisation balance. Please provide an example of how to use the post-capture endpoint.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for the request. The full authorisation amount will be captured, but it's also possible to capture a smaller amount to cancel the remaining authorisation balance. Please provide an example of how to use the post-capture endpoint.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.1952985123885023
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I'd like to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for the request. The full authorisation amount will be captured, but it's also possible to capture a smaller amount to cancel the remaining authorisation balance. Please provide an example of how to use the post-capture endpoint."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/capture\")\n  .post(body)\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-capture",
        "framework": "adyen.com",
        "functionality": "Capture an authorisation",
        "api_arguments": {},
        "description": "Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n",
        "path": "/capture",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for this request. The full authorisation amount will be captured, but it's also possible to capture a smaller amount, cancelling the remaining authorisation balance. For more information, please refer to the Capture documentation.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for this request. The full authorisation amount will be captured, but it's also possible to capture a smaller amount, cancelling the remaining authorisation balance. For more information, please refer to the Capture documentation.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.20674841442458644
            },
            {
                "idx": 2,
                "candidate": "I'd like to capture the authorisation hold on a payment using Adyen Payment API. Could you please provide an example of how to make a request to the post-capture endpoint?",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using Adyen Payment API. Could you please provide an example of how to make a request to the post-capture endpoint?\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.2057988229328449
            },
            {
                "idx": 3,
                "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API. Please provide an example of how to make a capture request and obtain a unique reference for the transaction.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using the Adyen Payment API. Please provide an example of how to make a capture request and obtain a unique reference for the transaction.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.19991271691944615
            },
            {
                "idx": 4,
                "candidate": "I'd like to capture the authorisation for my customer's payment using the Adyen Payment API, and receive a unique reference for this request. If desired, I can also capture a smaller amount, cancelling the remaining authorisation balance. I understand that this step is optional if the payment method is set to capture automatically after authorisation or if auto-capture is enabled. For more details, please refer to the Capture documentation.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation for my customer's payment using the Adyen Payment API, and receive a unique reference for this request. If desired, I can also capture a smaller amount, cancelling the remaining authorisation balance. I understand that this step is optional if the payment method is set to capture automatically after authorisation or if auto-capture is enabled. For more details, please refer to the Capture documentation.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.1978560859462731
            },
            {
                "idx": 5,
                "candidate": "I'd like to capture the authorisation hold on a payment using Adyen Payment API, and receive a unique reference for this request. If necessary, I can capture a smaller amount to cancel the remaining authorisation balance. Payment methods that are captured automatically after authorisation do not require manual capture, and submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, I can skip calling the capture method. For more details, please refer to the Capture documentation.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using Adyen Payment API, and receive a unique reference for this request. If necessary, I can capture a smaller amount to cancel the remaining authorisation balance. Payment methods that are captured automatically after authorisation do not require manual capture, and submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, I can skip calling the capture method. For more details, please refer to the Capture documentation.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.20589237878188144
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "I'd like to capture the authorisation for my customer's payment using the Adyen Payment API, and receive a unique reference for this request. If desired, I can also capture a smaller amount, cancelling the remaining authorisation balance. I understand that this step is optional if the payment method is set to capture automatically after authorisation or if auto-capture is enabled. For more details, please refer to the Capture documentation."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://pal-test.adyen.com/pal/servlet/Payment/v30/capture',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH', 'content-type': 'application/json'},\n  body: {\n    additionalData: {\n      property1: 'string',\n      property2: 'string',\n      allow3DS2: 'string',\n      challengeWindowSize: '01',\n      executeThreeD: 'string',\n      mpiImplementationType: 'string',\n      scaExemption: 'string',\n      threeDSVersion: 'string'\n    },\n    merchantAccount: 'string',\n    modificationAmount: {currency: 'str', value: 0},\n    originalMerchantReference: 'string',\n    originalReference: 'string',\n    reference: 'string',\n    tenderReference: 'string',\n    uniqueTerminalId: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-capture",
        "framework": "adyen.com",
        "functionality": "Capture an authorisation",
        "api_arguments": {},
        "description": "Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n",
        "path": "/capture",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for this request. Please provide instructions on how to do this.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for this request. Please provide instructions on how to do this.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.1964405113985827
            },
            {
                "idx": 2,
                "candidate": "I'd like to capture the authorisation hold on a payment using Adyen Payment API, please provide me with the necessary details to make a successful request.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using Adyen Payment API, please provide me with the necessary details to make a successful request.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.20500945134326384
            },
            {
                "idx": 3,
                "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API. Could you please provide an example of how to make this request?",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using the Adyen Payment API. Could you please provide an example of how to make this request?\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.19305920179242775
            },
            {
                "idx": 4,
                "candidate": "I'd like to capture the authorisation hold for a payment using the Adyen Payment API. If possible, I'd like to capture the full authorisation amount, but I can also capture a smaller amount to cancel the remaining authorisation balance. How do I make this request?",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold for a payment using the Adyen Payment API. If possible, I'd like to capture the full authorisation amount, but I can also capture a smaller amount to cancel the remaining authorisation balance. How do I make this request?\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.20169700773319404
            },
            {
                "idx": 5,
                "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API. Could you please provide an example of how to make a capture request with this endpoint?",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using the Adyen Payment API. Could you please provide an example of how to make a capture request with this endpoint?\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.20379828434409822
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API. Could you please provide an example of how to make this request?"
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"pal-test.adyen.com\")\n\npayload = \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\"\n\nheaders = {\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/pal/servlet/Payment/v30/capture\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-capture",
        "framework": "adyen.com",
        "functionality": "Capture an authorisation",
        "api_arguments": {},
        "description": "Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n",
        "path": "/capture",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to capture the authorisation for a payment using Adyen Payment API. Please provide me with the necessary details to make the capture request and receive a unique reference for this action.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation for a payment using Adyen Payment API. Please provide me with the necessary details to make the capture request and receive a unique reference for this action.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.20709020542909884
            },
            {
                "idx": 2,
                "candidate": "I'd like to capture the authorisation hold on a payment and receive a unique reference for this request using the Adyen Payment API.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment and receive a unique reference for this request using the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.1984290861770707
            },
            {
                "idx": 3,
                "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API and receive a unique reference for this request. If possible, I'd like to capture only a portion of the authorisation amount to cancel the remaining balance. Please help me with this capture request.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using the Adyen Payment API and receive a unique reference for this request. If possible, I'd like to capture only a portion of the authorisation amount to cancel the remaining balance. Please help me with this capture request.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.22857967938408616
            },
            {
                "idx": 4,
                "candidate": "I'd like to capture the authorisation for a payment using the Adyen Payment API. Please provide me with the necessary details to make a successful request and receive a unique reference for this operation.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation for a payment using the Adyen Payment API. Please provide me with the necessary details to make a successful request and receive a unique reference for this operation.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.20748287593072642
            },
            {
                "idx": 5,
                "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API. Please provide an example of how to make a request to the post-capture endpoint.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using the Adyen Payment API. Please provide an example of how to make a request to the post-capture endpoint.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.213405840177731
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "I'd like to capture the authorisation hold on a payment and receive a unique reference for this request using the Adyen Payment API."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://pal-test.adyen.com/pal/servlet/Payment/v30/capture\"\n\n\tpayload := strings.NewReader(\"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-capture",
        "framework": "adyen.com",
        "functionality": "Capture an authorisation",
        "api_arguments": {},
        "description": "Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n",
        "path": "/capture",
        "method": "post",
        "lang": "go",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to capture the authorisation hold on payment with reference \"1234567890\" using the Adyen Payment API. Please provide an example of how to make the capture request.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on payment with reference \"1234567890\" using the Adyen Payment API. Please provide an example of how to make the capture request.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.22517912448144975
            },
            {
                "idx": 2,
                "candidate": "I want to capture the authorisation hold on a payment using the Adyen Payment API and receive a unique reference for this request. If needed, I can also specify an amount smaller than the authorisation amount to cancel the remaining authorisation balance. This endpoint is suitable for transactions where the payment method does not automatically capture after authorisation or if auto-capture is not enabled. For more information, refer to the Capture documentation on the Adyen website.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to capture the authorisation hold on a payment using the Adyen Payment API and receive a unique reference for this request. If needed, I can also specify an amount smaller than the authorisation amount to cancel the remaining authorisation balance. This endpoint is suitable for transactions where the payment method does not automatically capture after authorisation or if auto-capture is not enabled. For more information, refer to the Capture documentation on the Adyen website.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.20524677955089468
            },
            {
                "idx": 3,
                "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API. Please provide me with the necessary details to make a successful capture request and receive a unique reference for this transaction.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using the Adyen Payment API. Please provide me with the necessary details to make a successful capture request and receive a unique reference for this transaction.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.2081720949872027
            },
            {
                "idx": 4,
                "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API. Could you please provide me with the necessary details to make a successful request?",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using the Adyen Payment API. Could you please provide me with the necessary details to make a successful request?\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.20424439849941095
            },
            {
                "idx": 5,
                "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API and receive a unique reference for this request. The full authorisation amount will be captured by default, but it's also possible to capture a smaller amount to cancel the remaining authorisation balance. Please help me with this capture request.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using the Adyen Payment API and receive a unique reference for this request. The full authorisation amount will be captured by default, but it's also possible to capture a smaller amount to cancel the remaining authorisation balance. Please help me with this capture request.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.20051293099377282
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API and receive a unique reference for this request. The full authorisation amount will be captured by default, but it's also possible to capture a smaller amount to cancel the remaining authorisation balance. Please help me with this capture request."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/capture\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-capture",
        "framework": "adyen.com",
        "functionality": "Capture an authorisation",
        "api_arguments": {},
        "description": "Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n",
        "path": "/capture",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API. Could you please provide an example of how to make a successful request to the post-capture endpoint?",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using the Adyen Payment API. Could you please provide an example of how to make a successful request to the post-capture endpoint?\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.21146717337398518
            },
            {
                "idx": 2,
                "candidate": "I'd like to capture the authorisation hold on a payment using Adyen Payment API, and receive a unique reference for this request. If necessary, I can also specify an amount smaller than the authorisation balance to cancel the remaining authorisation. Please help me with that.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using Adyen Payment API, and receive a unique reference for this request. If necessary, I can also specify an amount smaller than the authorisation balance to cancel the remaining authorisation. Please help me with that.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.20033246264687063
            },
            {
                "idx": 3,
                "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API. Please provide me with the necessary details to make a successful request.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using the Adyen Payment API. Please provide me with the necessary details to make a successful request.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.2050418137818063
            },
            {
                "idx": 4,
                "candidate": "I'd like to capture the authorisation hold for a payment using the Adyen Payment API. Please provide an example of how to make a request to the post-capture endpoint.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold for a payment using the Adyen Payment API. Please provide an example of how to make a request to the post-capture endpoint.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.21398161260383877
            },
            {
                "idx": 5,
                "candidate": "I'd like to capture the authorization hold on a payment using the Adyen Payment API and receive a unique reference for this request. This process typically captures the full authorization amount, but it's also possible to capture a smaller amount, resulting in cancelling the remaining authorization balance. Please provide instructions on how to do this.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorization hold on a payment using the Adyen Payment API and receive a unique reference for this request. This process typically captures the full authorization amount, but it's also possible to capture a smaller amount, resulting in cancelling the remaining authorization balance. Please provide instructions on how to do this.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.19845867009981272
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I'd like to capture the authorization hold on a payment using the Adyen Payment API and receive a unique reference for this request. This process typically captures the full authorization amount, but it's also possible to capture a smaller amount, resulting in cancelling the remaining authorization balance. Please provide instructions on how to do this."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://pal-test.adyen.com/pal/servlet/Payment/v30/capture\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-capture",
        "framework": "adyen.com",
        "functionality": "Capture an authorisation",
        "api_arguments": {},
        "description": "Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n",
        "path": "/capture",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to capture the authorization hold for a specific payment and receive a unique reference for the capture request using the Adyen Payment API.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorization hold for a specific payment and receive a unique reference for the capture request using the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.19934188595114938
            },
            {
                "idx": 2,
                "candidate": "I want to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for the request. If needed, I can capture only a portion of the authorised amount to cancel the remaining authorisation balance. Payment methods that are captured automatically after authorisation do not require a capture request, and submitting a capture request on these transactions will not result in double charges. For more details, please refer to the Capture documentation.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for the request. If needed, I can capture only a portion of the authorised amount to cancel the remaining authorisation balance. Payment methods that are captured automatically after authorisation do not require a capture request, and submitting a capture request on these transactions will not result in double charges. For more details, please refer to the Capture documentation.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.2070476253603829
            },
            {
                "idx": 3,
                "candidate": "I'd like to capture the authorisation for a payment using Adyen Payment API, and get a unique reference for this request. I understand that I can capture the full authorisation amount, or a smaller amount to cancel the remaining authorisation balance. Payment methods that are captured automatically after authorisation don't require additional capturing, and submitting a capture request on these transactions won't result in double charges. If auto-capture is enabled, I don't need to call the capture method. For more details, please refer to the Capture documentation.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation for a payment using Adyen Payment API, and get a unique reference for this request. I understand that I can capture the full authorisation amount, or a smaller amount to cancel the remaining authorisation balance. Payment methods that are captured automatically after authorisation don't require additional capturing, and submitting a capture request on these transactions won't result in double charges. If auto-capture is enabled, I don't need to call the capture method. For more details, please refer to the Capture documentation.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.21266016461681636
            },
            {
                "idx": 4,
                "candidate": "I'd like to capture the authorisation hold on payment with the reference X, and capture the full amount. If possible, please provide me with a unique reference for this capture request using the Adyen Payment API.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on payment with the reference X, and capture the full amount. If possible, please provide me with a unique reference for this capture request using the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.22326965466789284
            },
            {
                "idx": 5,
                "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API and receive a unique reference for the request. This can be done by making a POST request to the post-capture endpoint with the necessary payment details. For more information, please refer to the Capture documentation.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using the Adyen Payment API and receive a unique reference for the request. This can be done by making a POST request to the post-capture endpoint with the necessary payment details. For more information, please refer to the Capture documentation.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.197402484570494
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API and receive a unique reference for the request. This can be done by making a POST request to the post-capture endpoint with the necessary payment details. For more information, please refer to the Capture documentation."
        }
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"additionalData\": [\n    \"property1\": \"string\",\n    \"property2\": \"string\",\n    \"allow3DS2\": \"string\",\n    \"challengeWindowSize\": \"01\",\n    \"executeThreeD\": \"string\",\n    \"mpiImplementationType\": \"string\",\n    \"scaExemption\": \"string\",\n    \"threeDSVersion\": \"string\"\n  ],\n  \"merchantAccount\": \"string\",\n  \"modificationAmount\": [\n    \"currency\": \"str\",\n    \"value\": 0\n  ],\n  \"originalMerchantReference\": \"string\",\n  \"originalReference\": \"string\",\n  \"reference\": \"string\",\n  \"tenderReference\": \"string\",\n  \"uniqueTerminalId\": \"string\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://pal-test.adyen.com/pal/servlet/Payment/v30/capture\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-capture",
        "framework": "adyen.com",
        "functionality": "Capture an authorisation",
        "api_arguments": {},
        "description": "Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n",
        "path": "/capture",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for this request. If possible, I'd also like to specify an amount smaller than the full authorisation to cancel the remaining authorisation balance. Please provide an example of how to do this.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for this request. If possible, I'd also like to specify an amount smaller than the full authorisation to cancel the remaining authorisation balance. Please provide an example of how to do this.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.2288375975503327
            },
            {
                "idx": 2,
                "candidate": "I'd like to capture the authorization hold for a payment using the Adyen Payment API. Please provide an example of how to do this using the post-capture endpoint.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorization hold for a payment using the Adyen Payment API. Please provide an example of how to do this using the post-capture endpoint.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.19979212320891745
            },
            {
                "idx": 3,
                "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API and receive a unique reference for this request. If necessary, I can capture a smaller amount to cancel the remaining authorisation balance. Please provide an example of how to use the post-capture endpoint.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using the Adyen Payment API and receive a unique reference for this request. If necessary, I can capture a smaller amount to cancel the remaining authorisation balance. Please provide an example of how to use the post-capture endpoint.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.1937955568626841
            },
            {
                "idx": 4,
                "candidate": "I want to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for the request. If I choose to capture only a portion of the authorised amount, the remaining authorisation balance will be cancelled. This process is not necessary for payment methods that are automatically captured after authorisation or when immediate or delayed auto-capture is enabled. For more details, please refer to the Capture documentation.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for the request. If I choose to capture only a portion of the authorised amount, the remaining authorisation balance will be cancelled. This process is not necessary for payment methods that are automatically captured after authorisation or when immediate or delayed auto-capture is enabled. For more details, please refer to the Capture documentation.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.2033049843266744
            },
            {
                "idx": 5,
                "candidate": "I'd like to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for this request. Please provide instructions on how to do that.",
                "input_text": "Functionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to capture the authorisation hold on a payment using Adyen Payment API and receive a unique reference for this request. Please provide instructions on how to do that.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.19655481450682435
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "I'd like to capture the authorisation hold on a payment using the Adyen Payment API and receive a unique reference for this request. If necessary, I can capture a smaller amount to cancel the remaining authorisation balance. Please provide an example of how to use the post-capture endpoint."
        }
    },
    {
        "api_call": "curl --request POST \\\n  --url https://pal-test.adyen.com/pal/servlet/Payment/v30/refund \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"additionalData\":{\"property1\":\"string\",\"property2\":\"string\",\"allow3DS2\":\"string\",\"challengeWindowSize\":\"01\",\"executeThreeD\":\"string\",\"mpiImplementationType\":\"string\",\"scaExemption\":\"string\",\"threeDSVersion\":\"string\"},\"merchantAccount\":\"string\",\"modificationAmount\":{\"currency\":\"str\",\"value\":0},\"originalMerchantReference\":\"string\",\"originalReference\":\"string\",\"reference\":\"string\",\"tenderReference\":\"string\",\"uniqueTerminalId\":\"string\"}'",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-refund",
        "framework": "adyen.com",
        "functionality": "Refund a captured payment",
        "api_arguments": {},
        "description": "Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.",
        "path": "/refund",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to refund a payment that I have previously captured using the Adyen Payment API. Please help me with the request to refund a partial or full amount with a unique reference.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a payment that I have previously captured using the Adyen Payment API. Please help me with the request to refund a partial or full amount with a unique reference.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8991792264289807
            },
            {
                "idx": 2,
                "candidate": "I want to refund a previously captured payment using the Adyen Payment API. Please help me generate a request to refund a partial or full amount of the captured payment with a unique reference.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment using the Adyen Payment API. Please help me generate a request to refund a partial or full amount of the captured payment with a unique reference.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9025401046207371
            },
            {
                "idx": 3,
                "candidate": "I want to refund a previously captured payment using the Adyen Payment API. Please help me with the request details for the post-refund endpoint.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment using the Adyen Payment API. Please help me with the request details for the post-refund endpoint.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9127403991756611
            },
            {
                "idx": 4,
                "candidate": "I'd like to refund a previously captured payment with the Adyen Payment API. Please provide an example of how to use the endpoint 'post-refund'.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to refund a previously captured payment with the Adyen Payment API. Please provide an example of how to use the endpoint 'post-refund'.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9177879243051877
            },
            {
                "idx": 5,
                "candidate": "I want to refund a previously captured payment with the Adyen Payment API, please help me with the request and provide a unique reference for the refund.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment with the Adyen Payment API, please help me with the request and provide a unique reference for the refund.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8973220589185726
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I want to refund a previously captured payment with the Adyen Payment API, please help me with the request and provide a unique reference for the refund."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/refund\")\n  .post(body)\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-refund",
        "framework": "adyen.com",
        "functionality": "Refund a captured payment",
        "api_arguments": {},
        "description": "Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.",
        "path": "/refund",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to refund a payment that has already been captured using the Adyen Payment API. Could you please provide an example of how to do this using the post-refund endpoint?",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a payment that has already been captured using the Adyen Payment API. Could you please provide an example of how to do this using the post-refund endpoint?\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9306536062818608
            },
            {
                "idx": 2,
                "candidate": "I want to refund a previously captured payment with the Adyen Payment API, and receive a unique reference for this request. Please help me with that.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment with the Adyen Payment API, and receive a unique reference for this request. Please help me with that.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8934871420082033
            },
            {
                "idx": 3,
                "candidate": "I'd like to refund a previously captured payment using the Adyen Payment API. Please help me with the request details for the post-refund endpoint.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to refund a previously captured payment using the Adyen Payment API. Please help me with the request details for the post-refund endpoint.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9161908897837696
            },
            {
                "idx": 4,
                "candidate": "I want to refund a payment that has been previously captured with the Adyen Payment API, please provide an example of how to use the post-refund endpoint for that.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a payment that has been previously captured with the Adyen Payment API, please provide an example of how to use the post-refund endpoint for that.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9185394917880553
            },
            {
                "idx": 5,
                "candidate": "I want to refund a payment that I have previously captured using the Adyen Payment API. Please help me generate a request to partially refund the captured amount with a unique reference for this request.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a payment that I have previously captured using the Adyen Payment API. Please help me generate a request to partially refund the captured amount with a unique reference for this request.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9029909225497095
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "I want to refund a previously captured payment with the Adyen Payment API, and receive a unique reference for this request. Please help me with that."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://pal-test.adyen.com/pal/servlet/Payment/v30/refund',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH', 'content-type': 'application/json'},\n  body: {\n    additionalData: {\n      property1: 'string',\n      property2: 'string',\n      allow3DS2: 'string',\n      challengeWindowSize: '01',\n      executeThreeD: 'string',\n      mpiImplementationType: 'string',\n      scaExemption: 'string',\n      threeDSVersion: 'string'\n    },\n    merchantAccount: 'string',\n    modificationAmount: {currency: 'str', value: 0},\n    originalMerchantReference: 'string',\n    originalReference: 'string',\n    reference: 'string',\n    tenderReference: 'string',\n    uniqueTerminalId: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-refund",
        "framework": "adyen.com",
        "functionality": "Refund a captured payment",
        "api_arguments": {},
        "description": "Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.",
        "path": "/refund",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to refund a previously captured payment partially or in full using the Adyen Payment API. Please provide an example of how to use the endpoint post-refund.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment partially or in full using the Adyen Payment API. Please provide an example of how to use the endpoint post-refund.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9199439233576443
            },
            {
                "idx": 2,
                "candidate": "I want to refund a previously captured payment for the amount of $100 using the Adyen Payment API. Please provide a request example for the post-refund endpoint.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment for the amount of $100 using the Adyen Payment API. Please provide a request example for the post-refund endpoint.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9301345706926426
            },
            {
                "idx": 3,
                "candidate": "I want to refund a previously captured payment with the Adyen Payment API, returning a unique reference for this request. Please help me with the proper usage of the post-refund endpoint.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment with the Adyen Payment API, returning a unique reference for this request. Please help me with the proper usage of the post-refund endpoint.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9036246568863784
            },
            {
                "idx": 4,
                "candidate": "I'd like to refund a previously captured payment with the Adyen Payment API, please provide an example of how to do that.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to refund a previously captured payment with the Adyen Payment API, please provide an example of how to do that.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9090025359259287
            },
            {
                "idx": 5,
                "candidate": "I'd like to refund a previously captured payment with the Adyen Payment API. Please help me with the request details.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to refund a previously captured payment with the Adyen Payment API. Please help me with the request details.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9118151938013161
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "I want to refund a previously captured payment with the Adyen Payment API, returning a unique reference for this request. Please help me with the proper usage of the post-refund endpoint."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"pal-test.adyen.com\")\n\npayload = \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\"\n\nheaders = {\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/pal/servlet/Payment/v30/refund\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-refund",
        "framework": "adyen.com",
        "functionality": "Refund a captured payment",
        "api_arguments": {},
        "description": "Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.",
        "path": "/refund",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to refund a previously captured payment using the Adyen Payment API. Please provide an example of how to make a request to the post-refund endpoint.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to refund a previously captured payment using the Adyen Payment API. Please provide an example of how to make a request to the post-refund endpoint.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9098914193351436
            },
            {
                "idx": 2,
                "candidate": "I want to refund a previously captured payment with the Adyen Payment API, and I'd like to receive a unique reference for this request. Could you help me with that?",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment with the Adyen Payment API, and I'd like to receive a unique reference for this request. Could you help me with that?\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9024497238364373
            },
            {
                "idx": 3,
                "candidate": "I want to refund a previously captured payment using the Adyen Payment API. Could you please help me with the request details for the post-refund endpoint?",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment using the Adyen Payment API. Could you please help me with the request details for the post-refund endpoint?\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9170840901465239
            },
            {
                "idx": 4,
                "candidate": "I want to refund a payment that I have previously captured with the Adyen Payment API. Please help me with the request using the post-refund endpoint.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a payment that I have previously captured with the Adyen Payment API. Please help me with the request using the post-refund endpoint.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9090635587226665
            },
            {
                "idx": 5,
                "candidate": "I want to refund a previously captured payment using the Adyen Payment API. Please help me with the necessary request to do so.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment using the Adyen Payment API. Please help me with the necessary request to do so.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.910382348800656
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "I want to refund a previously captured payment with the Adyen Payment API, and I'd like to receive a unique reference for this request. Could you help me with that?"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://pal-test.adyen.com/pal/servlet/Payment/v30/refund\"\n\n\tpayload := strings.NewReader(\"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-refund",
        "framework": "adyen.com",
        "functionality": "Refund a captured payment",
        "api_arguments": {},
        "description": "Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.",
        "path": "/refund",
        "method": "post",
        "lang": "go",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to refund a previously captured payment with the Adyen Payment API. Please help me with the request details for the post-refund endpoint.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to refund a previously captured payment with the Adyen Payment API. Please help me with the request details for the post-refund endpoint.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9157107349736502
            },
            {
                "idx": 2,
                "candidate": "I want to refund a payment that has already been captured using the Adyen Payment API. Can you please help me with the request details for the post-refund endpoint?",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a payment that has already been captured using the Adyen Payment API. Can you please help me with the request details for the post-refund endpoint?\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9310345772762008
            },
            {
                "idx": 3,
                "candidate": "I want to refund a payment that I've previously captured using the Adyen Payment API. Please help me with the request to refund a partial or full amount of the captured payment and receive a unique reference for this request.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a payment that I've previously captured using the Adyen Payment API. Please help me with the request to refund a partial or full amount of the captured payment and receive a unique reference for this request.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8877050971297554
            },
            {
                "idx": 4,
                "candidate": "I'd like to refund a previously captured payment with Adyen Payment API, please provide an example of how to use the post-refund endpoint.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to refund a previously captured payment with Adyen Payment API, please provide an example of how to use the post-refund endpoint.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9126906794251527
            },
            {
                "idx": 5,
                "candidate": "I want to refund a previously captured payment with the Adyen Payment API, please help me with the request and provide a unique reference for this transaction.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment with the Adyen Payment API, please help me with the request and provide a unique reference for this transaction.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8966727641754867
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "I want to refund a payment that I've previously captured using the Adyen Payment API. Please help me with the request to refund a partial or full amount of the captured payment and receive a unique reference for this request."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/refund\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-refund",
        "framework": "adyen.com",
        "functionality": "Refund a captured payment",
        "api_arguments": {},
        "description": "Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.",
        "path": "/refund",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to refund a previously captured payment with the Adyen Payment API. Please provide an example of how to use the endpoint post-refund for this purpose.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to refund a previously captured payment with the Adyen Payment API. Please provide an example of how to use the endpoint post-refund for this purpose.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9188223874777722
            },
            {
                "idx": 2,
                "candidate": "I want to refund a payment that has already been captured using the Adyen Payment API. Please help me with the request to refund a partial or full amount and provide a unique reference for the transaction.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a payment that has already been captured using the Adyen Payment API. Please help me with the request to refund a partial or full amount and provide a unique reference for the transaction.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9042559657906659
            },
            {
                "idx": 3,
                "candidate": "I want to refund a previously captured payment partially or in full using the Adyen Payment API. Please provide an example of how to make a refund request.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment partially or in full using the Adyen Payment API. Please provide an example of how to make a refund request.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9142201650018176
            },
            {
                "idx": 4,
                "candidate": "I'd like to refund a previously captured payment partially using the Adyen Payment API, please provide an example of how to do that.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to refund a previously captured payment partially using the Adyen Payment API, please provide an example of how to do that.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9617751105882535
            },
            {
                "idx": 5,
                "candidate": "I would like to refund a previously captured payment with the Adyen Payment API. Please help me with the required information to make a successful refund request, including the unique reference for this request.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI would like to refund a previously captured payment with the Adyen Payment API. Please help me with the required information to make a successful refund request, including the unique reference for this request.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.905660502322727
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "I want to refund a payment that has already been captured using the Adyen Payment API. Please help me with the request to refund a partial or full amount and provide a unique reference for the transaction."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://pal-test.adyen.com/pal/servlet/Payment/v30/refund\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-refund",
        "framework": "adyen.com",
        "functionality": "Refund a captured payment",
        "api_arguments": {},
        "description": "Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.",
        "path": "/refund",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to refund a previously captured payment using the Adyen Payment API. Please provide an example on how to use the post-refund endpoint.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment using the Adyen Payment API. Please provide an example on how to use the post-refund endpoint.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9085285796254648
            },
            {
                "idx": 2,
                "candidate": "I want to refund a previously captured payment with Adyen Payment API, please help me with the request details including the unique reference for this request.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment with Adyen Payment API, please help me with the request details including the unique reference for this request.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9072878544977336
            },
            {
                "idx": 3,
                "candidate": "I'd like to refund a previously captured payment with the Adyen Payment API. Please help me with the request to refund a partial or full amount, returning a unique reference for this request.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to refund a previously captured payment with the Adyen Payment API. Please help me with the request to refund a partial or full amount, returning a unique reference for this request.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8931505815886643
            },
            {
                "idx": 4,
                "candidate": "I want to refund a previously captured payment using the Adyen Payment API, and receive a unique reference for the refund request. The refund can be made for the full captured amount or a partial amount, as long as the sum of all partial refunds does not exceed the captured amount. If the payment has not been captured yet, please use the /cancel method instead. Some payment methods may not support partial or multiple refunds. A margin above the captured limit can be configured for handling costs.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment using the Adyen Payment API, and receive a unique reference for the refund request. The refund can be made for the full captured amount or a partial amount, as long as the sum of all partial refunds does not exceed the captured amount. If the payment has not been captured yet, please use the /cancel method instead. Some payment methods may not support partial or multiple refunds. A margin above the captured limit can be configured for handling costs.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.6340162879655248
            },
            {
                "idx": 5,
                "candidate": "I want to refund a previously captured payment with the Adyen Payment API, please provide an example of how to do this using the post-refund endpoint.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment with the Adyen Payment API, please provide an example of how to do this using the post-refund endpoint.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9115254480134508
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "I want to refund a previously captured payment using the Adyen Payment API, and receive a unique reference for the refund request. The refund can be made for the full captured amount or a partial amount, as long as the sum of all partial refunds does not exceed the captured amount. If the payment has not been captured yet, please use the /cancel method instead. Some payment methods may not support partial or multiple refunds. A margin above the captured limit can be configured for handling costs."
        }
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"additionalData\": [\n    \"property1\": \"string\",\n    \"property2\": \"string\",\n    \"allow3DS2\": \"string\",\n    \"challengeWindowSize\": \"01\",\n    \"executeThreeD\": \"string\",\n    \"mpiImplementationType\": \"string\",\n    \"scaExemption\": \"string\",\n    \"threeDSVersion\": \"string\"\n  ],\n  \"merchantAccount\": \"string\",\n  \"modificationAmount\": [\n    \"currency\": \"str\",\n    \"value\": 0\n  ],\n  \"originalMerchantReference\": \"string\",\n  \"originalReference\": \"string\",\n  \"reference\": \"string\",\n  \"tenderReference\": \"string\",\n  \"uniqueTerminalId\": \"string\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://pal-test.adyen.com/pal/servlet/Payment/v30/refund\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-refund",
        "framework": "adyen.com",
        "functionality": "Refund a captured payment",
        "api_arguments": {},
        "description": "Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.",
        "path": "/refund",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to refund a previously captured payment using the Adyen Payment API, providing a unique reference for this request. The refund can be done on the full captured amount or a partial amount, as long as the sum of partial refunds does not exceed the captured amount. Please help me achieve this using the post-refund endpoint.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment using the Adyen Payment API, providing a unique reference for this request. The refund can be done on the full captured amount or a partial amount, as long as the sum of partial refunds does not exceed the captured amount. Please help me achieve this using the post-refund endpoint.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8377987866413502
            },
            {
                "idx": 2,
                "candidate": "I'd like to refund a payment that I've previously captured using the Adyen Payment API. Could you please help me with the request details for the post-refund endpoint?",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to refund a payment that I've previously captured using the Adyen Payment API. Could you please help me with the request details for the post-refund endpoint?\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9179712563357989
            },
            {
                "idx": 3,
                "candidate": "I'd like to refund a previously captured payment using the Adyen Payment API. Could you please help me construct the request and provide the unique reference for this refund?",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to refund a previously captured payment using the Adyen Payment API. Could you please help me construct the request and provide the unique reference for this refund?\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9089290349147576
            },
            {
                "idx": 4,
                "candidate": "I want to refund a previously captured payment with the Adyen Payment API, providing a unique reference for the request. The refund can be done for the full captured amount or a partial amount, as long as the total refunded amount doesn't exceed the captured amount. To get started, please help me with using the post-refund endpoint.",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a previously captured payment with the Adyen Payment API, providing a unique reference for the request. The refund can be done for the full captured amount or a partial amount, as long as the total refunded amount doesn't exceed the captured amount. To get started, please help me with using the post-refund endpoint.\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.887422715854798
            },
            {
                "idx": 5,
                "candidate": "I want to refund a payment that I have previously captured using the Adyen Payment API. Could you please provide me with an example of how to use the post-refund endpoint to do this?",
                "input_text": "Functionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to refund a payment that I have previously captured using the Adyen Payment API. Could you please provide me with an example of how to use the post-refund endpoint to do this?\n###Output:\nFunctionality: Refund a captured payment\nDescription: Refunds a payment that has previously been captured, returning a unique reference for this request. Refunding can be done on the full captured amount or a partial amount. Multiple (partial) refunds will be accepted as long as their sum doesn't exceed the captured amount. Payments which have been authorised, but not captured, cannot be refunded, use the /cancel method instead.\n\nSome payment methods/gateways do not support partial/multiple refunds.\nA margin above the captured limit can be configured to cover shipping/handling costs.\n\nFor more information, refer to [Refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/refunds`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/refunds) endpoint under Checkout API instead.\nEndpoint: post-refund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9144860908805688
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I want to refund a previously captured payment using the Adyen Payment API, providing a unique reference for this request. The refund can be done on the full captured amount or a partial amount, as long as the sum of partial refunds does not exceed the captured amount. Please help me achieve this using the post-refund endpoint."
        }
    },
    {
        "api_call": "curl --request POST \\\n  --url https://pal-test.adyen.com/pal/servlet/Payment/v30/technicalCancel \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"additionalData\":{\"property1\":\"string\",\"property2\":\"string\",\"allow3DS2\":\"string\",\"challengeWindowSize\":\"01\",\"executeThreeD\":\"string\",\"mpiImplementationType\":\"string\",\"scaExemption\":\"string\",\"threeDSVersion\":\"string\"},\"merchantAccount\":\"string\",\"modificationAmount\":{\"currency\":\"str\",\"value\":0},\"originalMerchantReference\":\"string\",\"reference\":\"string\",\"tenderReference\":\"string\",\"uniqueTerminalId\":\"string\"}'",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-technicalCancel",
        "framework": "adyen.com",
        "functionality": "Cancel an authorisation using your reference",
        "api_arguments": {},
        "description": "This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.",
        "path": "/technicalCancel",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. How do I do that?",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. How do I do that?\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9205665684029412
            },
            {
                "idx": 2,
                "candidate": "I want to cancel an authorisation using the reference I provided during my payment request with the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during my payment request with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8955631064378065
            },
            {
                "idx": 3,
                "candidate": "I want to cancel an authorisation I initiated earlier using the Adyen Payment API, and I have the reference from my initial payment request. How can I do this using the post-technicalCancel endpoint?",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation I initiated earlier using the Adyen Payment API, and I have the reference from my initial payment request. How can I do this using the post-technicalCancel endpoint?\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8318312055745031
            },
            {
                "idx": 4,
                "candidate": "I want to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9135415303156034
            },
            {
                "idx": 5,
                "candidate": "I'd like to cancel an authorisation using the reference I provided during my initial payment request with Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel an authorisation using the reference I provided during my initial payment request with Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9180067489778635
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "I want to cancel an authorisation I initiated earlier using the Adyen Payment API, and I have the reference from my initial payment request. How can I do this using the post-technicalCancel endpoint?"
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/technicalCancel\")\n  .post(body)\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-technicalCancel",
        "framework": "adyen.com",
        "functionality": "Cancel an authorisation using your reference",
        "api_arguments": {},
        "description": "This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.",
        "path": "/technicalCancel",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel an authorisation using the reference from my previous payment request with Adyen Payment API. How can I do that?",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference from my previous payment request with Adyen Payment API. How can I do that?\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9136914582131629
            },
            {
                "idx": 2,
                "candidate": "I want to cancel an authorisation using the reference I provided during the original payment request with the Adyen Payment API. Please help me achieve that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during the original payment request with the Adyen Payment API. Please help me achieve that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.900929680067354
            },
            {
                "idx": 3,
                "candidate": "I want to cancel an authorisation using the reference I provided during the initial payment request with the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during the initial payment request with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9146076028579782
            },
            {
                "idx": 4,
                "candidate": "I want to cancel an authorisation using the reference I provided during the initial payment request with the Adyen Payment API. How can I do this?",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during the initial payment request with the Adyen Payment API. How can I do this?\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9235672379507927
            },
            {
                "idx": 5,
                "candidate": "I want to cancel an authorisation using the reference from my previous payment request with the Adyen Payment API. Please help me do that using the post-technicalCancel endpoint.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference from my previous payment request with the Adyen Payment API. Please help me do that using the post-technicalCancel endpoint.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7961043270448
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I want to cancel an authorisation using the reference from my previous payment request with the Adyen Payment API. Please help me do that using the post-technicalCancel endpoint."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://pal-test.adyen.com/pal/servlet/Payment/v30/technicalCancel',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH', 'content-type': 'application/json'},\n  body: {\n    additionalData: {\n      property1: 'string',\n      property2: 'string',\n      allow3DS2: 'string',\n      challengeWindowSize: '01',\n      executeThreeD: 'string',\n      mpiImplementationType: 'string',\n      scaExemption: 'string',\n      threeDSVersion: 'string'\n    },\n    merchantAccount: 'string',\n    modificationAmount: {currency: 'str', value: 0},\n    originalMerchantReference: 'string',\n    reference: 'string',\n    tenderReference: 'string',\n    uniqueTerminalId: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-technicalCancel",
        "framework": "adyen.com",
        "functionality": "Cancel an authorisation using your reference",
        "api_arguments": {},
        "description": "This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.",
        "path": "/technicalCancel",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel an authorisation I initiated using the reference provided in my payment request with Adyen Payment API. How can I do this?",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation I initiated using the reference provided in my payment request with Adyen Payment API. How can I do this?\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9008616234923476
            },
            {
                "idx": 2,
                "candidate": "I want to cancel an authorisation using the Adyen Payment API with the reference I provided during the initial payment request. How can I do this using the post-technicalCancel endpoint?",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the Adyen Payment API with the reference I provided during the initial payment request. How can I do this using the post-technicalCancel endpoint?\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8121992183117904
            },
            {
                "idx": 3,
                "candidate": "I want to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. How can I do that?",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. How can I do that?\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9217006026069532
            },
            {
                "idx": 4,
                "candidate": "I want to cancel an authorisation using the reference from my previous payment request with the Adyen Payment API. How can I achieve this?",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference from my previous payment request with the Adyen Payment API. How can I achieve this?\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9153729277369986
            },
            {
                "idx": 5,
                "candidate": "I want to cancel an authorisation using the reference I provided during the initial payment request with the Adyen Payment API. How can I achieve this?",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during the initial payment request with the Adyen Payment API. How can I achieve this?\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9275300984624565
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "I want to cancel an authorisation using the Adyen Payment API with the reference I provided during the initial payment request. How can I do this using the post-technicalCancel endpoint?"
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"pal-test.adyen.com\")\n\npayload = \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\"\n\nheaders = {\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/pal/servlet/Payment/v30/technicalCancel\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-technicalCancel",
        "framework": "adyen.com",
        "functionality": "Cancel an authorisation using your reference",
        "api_arguments": {},
        "description": "This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.",
        "path": "/technicalCancel",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel an authorisation using the reference I provided during the original payment request with the Adyen Payment API. Please help me achieve that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during the original payment request with the Adyen Payment API. Please help me achieve that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.900929680067354
            },
            {
                "idx": 2,
                "candidate": "I want to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9135415303156034
            },
            {
                "idx": 3,
                "candidate": "I want to cancel an authorisation using the reference I provided during the initial payment request with the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during the initial payment request with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9146076028579782
            },
            {
                "idx": 4,
                "candidate": "I want to cancel an authorisation using the reference from my previous payment request with the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference from my previous payment request with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9048115866923719
            },
            {
                "idx": 5,
                "candidate": "I want to cancel an authorisation using the reference I provided during my payment request with the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during my payment request with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8955631064378065
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I want to cancel an authorisation using the reference I provided during my payment request with the Adyen Payment API. Please help me with that."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://pal-test.adyen.com/pal/servlet/Payment/v30/technicalCancel\"\n\n\tpayload := strings.NewReader(\"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-technicalCancel",
        "framework": "adyen.com",
        "functionality": "Cancel an authorisation using your reference",
        "api_arguments": {},
        "description": "This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.",
        "path": "/technicalCancel",
        "method": "post",
        "lang": "go",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel an authorisation using the reference I provided during my payment request with the Adyen Payment API. How can I do this?",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during my payment request with the Adyen Payment API. How can I do this?\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9030902372356593
            },
            {
                "idx": 2,
                "candidate": "I'd like to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. Please help me with that using the post-technicalCancel endpoint.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. Please help me with that using the post-technicalCancel endpoint.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8088428500725813
            },
            {
                "idx": 3,
                "candidate": "I want to cancel an authorisation using the reference provided during my initial payment request with the Adyen Payment API. How do I do that?",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference provided during my initial payment request with the Adyen Payment API. How do I do that?\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9056768386634934
            },
            {
                "idx": 4,
                "candidate": "I'd like to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. Please help me achieve that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. Please help me achieve that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9281654562421773
            },
            {
                "idx": 5,
                "candidate": "I want to cancel an authorisation using the reference from my previous payment request with Adyen Payment API. Please help me do that using the post-technicalCancel endpoint.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference from my previous payment request with Adyen Payment API. Please help me do that using the post-technicalCancel endpoint.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7999615949268063
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I want to cancel an authorisation using the reference from my previous payment request with Adyen Payment API. Please help me do that using the post-technicalCancel endpoint."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/technicalCancel\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-technicalCancel",
        "framework": "adyen.com",
        "functionality": "Cancel an authorisation using your reference",
        "api_arguments": {},
        "description": "This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.",
        "path": "/technicalCancel",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel an authorisation using the reference from my previous payment request with Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference from my previous payment request with Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9060223162573388
            },
            {
                "idx": 2,
                "candidate": "I want to cancel an authorisation using the reference I provided during the initial payment request with the Adyen Payment API. How can I do that?",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during the initial payment request with the Adyen Payment API. How can I do that?\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9232028117350938
            },
            {
                "idx": 3,
                "candidate": "I want to cancel an authorisation using the reference from my previous payment request with Adyen Payment API. How can I do that?",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference from my previous payment request with Adyen Payment API. How can I do that?\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9136914582131629
            },
            {
                "idx": 4,
                "candidate": "I'd like to cancel an authorisation using the reference I provided during my initial payment request with Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel an authorisation using the reference I provided during my initial payment request with Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9180067489778635
            },
            {
                "idx": 5,
                "candidate": "I want to cancel an authorisation using the reference I provided during my payment request with the Adyen Payment API. Please help me with that using the post-technicalCancel endpoint.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during my payment request with the Adyen Payment API. Please help me with that using the post-technicalCancel endpoint.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7858106471846286
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I want to cancel an authorisation using the reference I provided during my payment request with the Adyen Payment API. Please help me with that using the post-technicalCancel endpoint."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://pal-test.adyen.com/pal/servlet/Payment/v30/technicalCancel\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-technicalCancel",
        "framework": "adyen.com",
        "functionality": "Cancel an authorisation using your reference",
        "api_arguments": {},
        "description": "This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.",
        "path": "/technicalCancel",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel an authorisation using the reference I provided during the initial payment request with the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during the initial payment request with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9146076028579782
            },
            {
                "idx": 2,
                "candidate": "I want to cancel an authorisation using the reference from my previous payment request with Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference from my previous payment request with Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9060223162573388
            },
            {
                "idx": 3,
                "candidate": "I'd like to cancel an authorisation using the reference I provided during my payment request with the Adyen Payment API. Please help me achieve that using the post-technicalCancel endpoint.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel an authorisation using the reference I provided during my payment request with the Adyen Payment API. Please help me achieve that using the post-technicalCancel endpoint.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7918746572995545
            },
            {
                "idx": 4,
                "candidate": "I'd like to cancel an authorisation using the reference from my previous payment request with the Adyen Payment API. How do I do that?",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel an authorisation using the reference from my previous payment request with the Adyen Payment API. How do I do that?\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9260137715558678
            },
            {
                "idx": 5,
                "candidate": "I want to cancel an authorisation using the reference provided during my initial payment request with the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference provided during my initial payment request with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8988034289127882
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "I'd like to cancel an authorisation using the reference I provided during my payment request with the Adyen Payment API. Please help me achieve that using the post-technicalCancel endpoint."
        }
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"additionalData\": [\n    \"property1\": \"string\",\n    \"property2\": \"string\",\n    \"allow3DS2\": \"string\",\n    \"challengeWindowSize\": \"01\",\n    \"executeThreeD\": \"string\",\n    \"mpiImplementationType\": \"string\",\n    \"scaExemption\": \"string\",\n    \"threeDSVersion\": \"string\"\n  ],\n  \"merchantAccount\": \"string\",\n  \"modificationAmount\": [\n    \"currency\": \"str\",\n    \"value\": 0\n  ],\n  \"originalMerchantReference\": \"string\",\n  \"reference\": \"string\",\n  \"tenderReference\": \"string\",\n  \"uniqueTerminalId\": \"string\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://pal-test.adyen.com/pal/servlet/Payment/v30/technicalCancel\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-technicalCancel",
        "framework": "adyen.com",
        "functionality": "Cancel an authorisation using your reference",
        "api_arguments": {},
        "description": "This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.",
        "path": "/technicalCancel",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. How can I achieve this?",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. How can I achieve this?\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.9262691756874151
            },
            {
                "idx": 2,
                "candidate": "I want to cancel an authorisation using the reference I provided during my payment request with the Adyen Payment API. Please help me with that using the post-technicalCancel endpoint.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during my payment request with the Adyen Payment API. Please help me with that using the post-technicalCancel endpoint.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7858106471846286
            },
            {
                "idx": 3,
                "candidate": "I want to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. Please help me with that using the post-technicalCancel endpoint.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. Please help me with that using the post-technicalCancel endpoint.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8024882789030453
            },
            {
                "idx": 4,
                "candidate": "I want to cancel an authorisation using the reference I provided during the original payment request with the Adyen Payment API. Please help me with that.",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an authorisation using the reference I provided during the original payment request with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8982515051601998
            },
            {
                "idx": 5,
                "candidate": "I'd like to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. How do I do that?",
                "input_text": "Functionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel an authorisation using the reference I provided during the initial payment request with Adyen Payment API. How do I do that?\n###Output:\nFunctionality: Cancel an authorisation using your reference\nDescription: This endpoint allows you to cancel a payment if you do not have the PSP reference of the original payment request available.\n\nIn your call, refer to the original payment by using the `reference` that you specified in your payment request.\n\nFor more information, see [Technical cancel](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel#technical-cancel). \n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/cancels`](https://docs.adyen.com/api-explorer/#/CheckoutService/cancels) endpoint under Checkout API instead.\nEndpoint: post-technicalCancel\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.932837881318809
            }
        ],
        "best_instruction": {
            "idx": 2,
            "candidate": "I want to cancel an authorisation using the reference I provided during my payment request with the Adyen Payment API. Please help me with that using the post-technicalCancel endpoint."
        }
    },
    {
        "api_call": "curl --request POST \\\n  --url https://pal-test.adyen.com/pal/servlet/Payment/v30/voidPendingRefund \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'content-type: application/json' \\\n  --data '{\"additionalData\":{\"property1\":\"string\",\"property2\":\"string\",\"allow3DS2\":\"string\",\"challengeWindowSize\":\"01\",\"executeThreeD\":\"string\",\"mpiImplementationType\":\"string\",\"scaExemption\":\"string\",\"threeDSVersion\":\"string\"},\"merchantAccount\":\"string\",\"modificationAmount\":{\"currency\":\"str\",\"value\":0},\"originalMerchantReference\":\"string\",\"originalReference\":\"string\",\"reference\":\"string\",\"tenderReference\":\"string\",\"uniqueTerminalId\":\"string\"}'",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-voidPendingRefund",
        "framework": "adyen.com",
        "functionality": "Cancel an in-person refund",
        "api_arguments": {},
        "description": "This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).",
        "path": "/voidPendingRefund",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel an unreferenced refund request for a previous transaction using the Adyen Payment API. Could you please help me with that by providing an example using the post-voidPendingRefund endpoint?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request for a previous transaction using the Adyen Payment API. Could you please help me with that by providing an example using the post-voidPendingRefund endpoint?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4429278555609429
            },
            {
                "idx": 2,
                "candidate": "I want to cancel an unreferenced refund request with the Adyen Payment API before it gets processed. Could you help me with that using the tenderReference or pspReference of the original refund request?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request with the Adyen Payment API before it gets processed. Could you help me with that using the tenderReference or pspReference of the original refund request?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.45953770348511086
            },
            {
                "idx": 3,
                "candidate": "I want to cancel an unreferenced refund request for a previous transaction using the Adyen Payment API. To do this, please use the post-voidPendingRefund endpoint and provide the tenderReference or pspReference of the original refund request.",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request for a previous transaction using the Adyen Payment API. To do this, please use the post-voidPendingRefund endpoint and provide the tenderReference or pspReference of the original refund request.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.48802323225647615
            },
            {
                "idx": 4,
                "candidate": "I want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Could you please help me with that by providing an example using the post-voidPendingRefund endpoint?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Could you please help me with that by providing an example using the post-voidPendingRefund endpoint?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4247288670897777
            },
            {
                "idx": 5,
                "candidate": "I want to cancel an unreferenced refund request using the Adyen Payment API before it gets completed. Please help me with that by providing an example using the endpoint post-voidPendingRefund.",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request using the Adyen Payment API before it gets completed. Please help me with that by providing an example using the endpoint post-voidPendingRefund.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.3962495936395318
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I want to cancel an unreferenced refund request using the Adyen Payment API before it gets completed. Please help me with that by providing an example using the endpoint post-voidPendingRefund."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/voidPendingRefund\")\n  .post(body)\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-voidPendingRefund",
        "framework": "adyen.com",
        "functionality": "Cancel an in-person refund",
        "api_arguments": {},
        "description": "This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).",
        "path": "/voidPendingRefund",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I need to cancel an unreferenced refund request before it gets completed with Adyen Payment API, using the tenderReference. Please help me with that.",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI need to cancel an unreferenced refund request before it gets completed with Adyen Payment API, using the tenderReference. Please help me with that.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.44307436887380597
            },
            {
                "idx": 2,
                "candidate": "I want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Could you please help me with that by providing an example using the endpoint post-voidPendingRefund?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Could you please help me with that by providing an example using the endpoint post-voidPendingRefund?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.42906492672792057
            },
            {
                "idx": 3,
                "candidate": "I want to cancel an unreferenced refund request with the Adyen Payment API before it gets completed. Could you help me with that, using the tenderReference of the original refund request?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request with the Adyen Payment API before it gets completed. Could you help me with that, using the tenderReference of the original refund request?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4597415982242557
            },
            {
                "idx": 4,
                "candidate": "I want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Could you please help me with that by providing an example using the post-voidPendingRefund endpoint?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Could you please help me with that by providing an example using the post-voidPendingRefund endpoint?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4247288670897777
            },
            {
                "idx": 5,
                "candidate": "I want to cancel an unreferenced refund request before it's completed using the Adyen Payment API. Please help me with that by providing an example using the `post-voidPendingRefund` endpoint.",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before it's completed using the Adyen Payment API. Please help me with that by providing an example using the `post-voidPendingRefund` endpoint.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.3926870512566473
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I want to cancel an unreferenced refund request before it's completed using the Adyen Payment API. Please help me with that by providing an example using the `post-voidPendingRefund` endpoint."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://pal-test.adyen.com/pal/servlet/Payment/v30/voidPendingRefund',\n  headers: {Authorization: 'Basic REPLACE_BASIC_AUTH', 'content-type': 'application/json'},\n  body: {\n    additionalData: {\n      property1: 'string',\n      property2: 'string',\n      allow3DS2: 'string',\n      challengeWindowSize: '01',\n      executeThreeD: 'string',\n      mpiImplementationType: 'string',\n      scaExemption: 'string',\n      threeDSVersion: 'string'\n    },\n    merchantAccount: 'string',\n    modificationAmount: {currency: 'str', value: 0},\n    originalMerchantReference: 'string',\n    originalReference: 'string',\n    reference: 'string',\n    tenderReference: 'string',\n    uniqueTerminalId: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-voidPendingRefund",
        "framework": "adyen.com",
        "functionality": "Cancel an in-person refund",
        "api_arguments": {},
        "description": "This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).",
        "path": "/voidPendingRefund",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel an unreferenced refund request with Adyen Payment API using the tenderReference. How can I do that?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request with Adyen Payment API using the tenderReference. How can I do that?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4407861431235914
            },
            {
                "idx": 2,
                "candidate": "I want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Please help me with that by providing an example of how to use the endpoint post-voidPendingRefund.",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Please help me with that by providing an example of how to use the endpoint post-voidPendingRefund.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.41556125455918824
            },
            {
                "idx": 3,
                "candidate": "I want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Could you please help me with that by providing an example using the post-voidPendingRefund endpoint?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Could you please help me with that by providing an example using the post-voidPendingRefund endpoint?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4247288670897777
            },
            {
                "idx": 4,
                "candidate": "I'd like to cancel an unreferenced refund request I initiated earlier using the Adyen Payment API. Could you please help me with that by providing an example of how to use the post-voidPendingRefund endpoint?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel an unreferenced refund request I initiated earlier using the Adyen Payment API. Could you please help me with that by providing an example of how to use the post-voidPendingRefund endpoint?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.49233869166991745
            },
            {
                "idx": 5,
                "candidate": "I want to cancel an unreferenced refund request before completion using the Adyen Payment API. Please help me with this by providing an example of how to use the endpoint post-voidPendingRefund.",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before completion using the Adyen Payment API. Please help me with this by providing an example of how to use the endpoint post-voidPendingRefund.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.3775781658271961
            }
        ],
        "best_instruction": {
            "idx": 5,
            "candidate": "I want to cancel an unreferenced refund request before completion using the Adyen Payment API. Please help me with this by providing an example of how to use the endpoint post-voidPendingRefund."
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"pal-test.adyen.com\")\n\npayload = \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\"\n\nheaders = {\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/pal/servlet/Payment/v30/voidPendingRefund\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-voidPendingRefund",
        "framework": "adyen.com",
        "functionality": "Cancel an in-person refund",
        "api_arguments": {},
        "description": "This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).",
        "path": "/voidPendingRefund",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Could you help me with that by providing an example for the post-voidPendingRefund endpoint?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Could you help me with that by providing an example for the post-voidPendingRefund endpoint?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.42113698204936284
            },
            {
                "idx": 2,
                "candidate": "I'd like to cancel an unreferenced refund request with Adyen Payment API before it gets processed. Could you please help me with the correct usage of the post-voidPendingRefund endpoint?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel an unreferenced refund request with Adyen Payment API before it gets processed. Could you please help me with the correct usage of the post-voidPendingRefund endpoint?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.43111565429286697
            },
            {
                "idx": 3,
                "candidate": "I want to cancel an unreferenced refund request before completion using the Adyen Payment API. Please help me with that by providing the correct API call for this purpose. (Use the endpoint `post-voidPendingRefund`)",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before completion using the Adyen Payment API. Please help me with that by providing the correct API call for this purpose. (Use the endpoint `post-voidPendingRefund`)\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.37330593316518906
            },
            {
                "idx": 4,
                "candidate": "I want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Please help me with that by providing the correct call using the `post-voidPendingRefund` endpoint.",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Please help me with that by providing the correct call using the `post-voidPendingRefund` endpoint.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4385332761443281
            },
            {
                "idx": 5,
                "candidate": "I want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Could you please help me with the correct usage of the post-voidPendingRefund endpoint for this purpose?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Could you please help me with the correct usage of the post-voidPendingRefund endpoint for this purpose?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4584831596469445
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "I want to cancel an unreferenced refund request before completion using the Adyen Payment API. Please help me with that by providing the correct API call for this purpose. (Use the endpoint `post-voidPendingRefund`)"
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://pal-test.adyen.com/pal/servlet/Payment/v30/voidPendingRefund\"\n\n\tpayload := strings.NewReader(\"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-voidPendingRefund",
        "framework": "adyen.com",
        "functionality": "Cancel an in-person refund",
        "api_arguments": {},
        "description": "This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).",
        "path": "/voidPendingRefund",
        "method": "post",
        "lang": "go",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel an unreferenced refund request before it's completed using the Adyen Payment API. Could you please help me with the correct call for this using the tenderReference?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before it's completed using the Adyen Payment API. Could you please help me with the correct call for this using the tenderReference?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4367576200791522
            },
            {
                "idx": 2,
                "candidate": "I want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Could you help me with that, please? Here's the tenderReference for the refund I'd like to cancel.",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Could you help me with that, please? Here's the tenderReference for the refund I'd like to cancel.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.441665163091526
            },
            {
                "idx": 3,
                "candidate": "I want to cancel an unreferenced refund request before it's completed using the Adyen Payment API. Please help me with that by providing an example using the post-voidPendingRefund endpoint.",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before it's completed using the Adyen Payment API. Please help me with that by providing an example using the post-voidPendingRefund endpoint.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.3914795721749993
            },
            {
                "idx": 4,
                "candidate": "I want to cancel an unreferenced refund request using the Adyen Payment API before it gets processed. Could you please help me with that, by providing an example using the tenderReference?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request using the Adyen Payment API before it gets processed. Could you please help me with that, by providing an example using the tenderReference?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.47032733155991935
            },
            {
                "idx": 5,
                "candidate": "I want to cancel an unreferenced refund request with the Adyen Payment API before it gets processed. Please help me with that using the tenderReference or pspReference of the original refund request.",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request with the Adyen Payment API before it gets processed. Please help me with that using the tenderReference or pspReference of the original refund request.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4549252895909743
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "I want to cancel an unreferenced refund request before it's completed using the Adyen Payment API. Please help me with that by providing an example using the post-voidPendingRefund endpoint."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://pal-test.adyen.com/pal/servlet/Payment/v30/voidPendingRefund\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-voidPendingRefund",
        "framework": "adyen.com",
        "functionality": "Cancel an in-person refund",
        "api_arguments": {},
        "description": "This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).",
        "path": "/voidPendingRefund",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel an unreferenced refund request before completion using the Adyen Payment API. Could you please help me with that by providing an example of how to use the endpoint post-voidPendingRefund?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before completion using the Adyen Payment API. Could you please help me with that by providing an example of how to use the endpoint post-voidPendingRefund?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.3885132490999499
            },
            {
                "idx": 2,
                "candidate": "I want to cancel an unreferenced refund request with the Adyen Payment API before it gets processed. Could you please help me with that using the tenderReference or pspReference of the original refund request?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request with the Adyen Payment API before it gets processed. Could you please help me with that using the tenderReference or pspReference of the original refund request?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4835013591029201
            },
            {
                "idx": 3,
                "candidate": "I want to cancel an in-progress refund with reference [tenderReference] using the Adyen Payment API.",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an in-progress refund with reference [tenderReference] using the Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.49336275099669097
            },
            {
                "idx": 4,
                "candidate": "I want to cancel an unreferenced refund request for a previous transaction using the Adyen Payment API. Could you please help me with that by providing the correct API call for this functionality? (post-voidPendingRefund)",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request for a previous transaction using the Adyen Payment API. Could you please help me with that by providing the correct API call for this functionality? (post-voidPendingRefund)\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4169377061979152
            },
            {
                "idx": 5,
                "candidate": "I want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Could you please help me with that by providing an example for the post-voidPendingRefund endpoint?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before it gets processed using the Adyen Payment API. Could you please help me with that by providing an example for the post-voidPendingRefund endpoint?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4249134839231614
            }
        ],
        "best_instruction": {
            "idx": 1,
            "candidate": "I want to cancel an unreferenced refund request before completion using the Adyen Payment API. Could you please help me with that by providing an example of how to use the endpoint post-voidPendingRefund?"
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://pal-test.adyen.com/pal/servlet/Payment/v30/voidPendingRefund\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"additionalData\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\",\\\"allow3DS2\\\":\\\"string\\\",\\\"challengeWindowSize\\\":\\\"01\\\",\\\"executeThreeD\\\":\\\"string\\\",\\\"mpiImplementationType\\\":\\\"string\\\",\\\"scaExemption\\\":\\\"string\\\",\\\"threeDSVersion\\\":\\\"string\\\"},\\\"merchantAccount\\\":\\\"string\\\",\\\"modificationAmount\\\":{\\\"currency\\\":\\\"str\\\",\\\"value\\\":0},\\\"originalMerchantReference\\\":\\\"string\\\",\\\"originalReference\\\":\\\"string\\\",\\\"reference\\\":\\\"string\\\",\\\"tenderReference\\\":\\\"string\\\",\\\"uniqueTerminalId\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-voidPendingRefund",
        "framework": "adyen.com",
        "functionality": "Cancel an in-person refund",
        "api_arguments": {},
        "description": "This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).",
        "path": "/voidPendingRefund",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to cancel an unreferenced refund request using the Adyen Payment API before it gets processed. Could you please help me with the proper usage of the post-voidPendingRefund endpoint?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel an unreferenced refund request using the Adyen Payment API before it gets processed. Could you please help me with the proper usage of the post-voidPendingRefund endpoint?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4369754290662409
            },
            {
                "idx": 2,
                "candidate": "I'd like to cancel an unreferenced refund request using the Adyen Payment API before it gets processed. Could you please help me construct the request using the `post-voidPendingRefund` endpoint?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI'd like to cancel an unreferenced refund request using the Adyen Payment API before it gets processed. Could you please help me construct the request using the `post-voidPendingRefund` endpoint?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.47538659730651595
            },
            {
                "idx": 3,
                "candidate": "I want to cancel an unreferenced refund request before completion using the Adyen Payment API. Could you please help me with that by providing an example using the post-voidPendingRefund endpoint?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before completion using the Adyen Payment API. Could you please help me with that by providing an example using the post-voidPendingRefund endpoint?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.39478698845544735
            },
            {
                "idx": 4,
                "candidate": "I want to cancel an unreferenced refund request before it's completed using the Adyen Payment API. Please help me with that by providing an example using the `post-voidPendingRefund` endpoint.",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before it's completed using the Adyen Payment API. Please help me with that by providing an example using the `post-voidPendingRefund` endpoint.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.3926870512566473
            },
            {
                "idx": 5,
                "candidate": "I want to cancel an unreferenced refund request before it's completed using the Adyen Payment API. Please help me with that by providing an example using the `post-voidPendingRefund` endpoint.",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before it's completed using the Adyen Payment API. Please help me with that by providing an example using the `post-voidPendingRefund` endpoint.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.3926870512566473
            }
        ],
        "best_instruction": {
            "idx": 4,
            "candidate": "I want to cancel an unreferenced refund request before it's completed using the Adyen Payment API. Please help me with that by providing an example using the `post-voidPendingRefund` endpoint."
        }
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"additionalData\": [\n    \"property1\": \"string\",\n    \"property2\": \"string\",\n    \"allow3DS2\": \"string\",\n    \"challengeWindowSize\": \"01\",\n    \"executeThreeD\": \"string\",\n    \"mpiImplementationType\": \"string\",\n    \"scaExemption\": \"string\",\n    \"threeDSVersion\": \"string\"\n  ],\n  \"merchantAccount\": \"string\",\n  \"modificationAmount\": [\n    \"currency\": \"str\",\n    \"value\": 0\n  ],\n  \"originalMerchantReference\": \"string\",\n  \"originalReference\": \"string\",\n  \"reference\": \"string\",\n  \"tenderReference\": \"string\",\n  \"uniqueTerminalId\": \"string\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://pal-test.adyen.com/pal/servlet/Payment/v30/voidPendingRefund\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Adyen Payment API",
        "api_provider": "adyen.com",
        "endpoint": "post-voidPendingRefund",
        "framework": "adyen.com",
        "functionality": "Cancel an in-person refund",
        "api_arguments": {},
        "description": "This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).",
        "path": "/voidPendingRefund",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Modifications"
        ],
        "api_description": "A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.\n\nTo learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).\n\n## Authentication\nYou need an [API credential](https://docs.adyen.com/development-resources/api-credentials) to authenticate to the API.\n\nIf using an API key, add an `X-API-Key` header with the API key as the value, for example:\n\n ```\ncurl\n-H \"Content-Type: application/json\" \\\n-H \"X-API-Key: YOUR_API_KEY\" \\\n...\n```\n\nAlternatively, you can use the username and password to connect to the API using basic authentication, for example:\n\n```\ncurl\n-U \"ws@Company.YOUR_COMPANY_ACCOUNT\":\"YOUR_BASIC_AUTHENTICATION_PASSWORD\" \\\n-H \"Content-Type: application/json\" \\\n...\n```\n\n## Versioning\nPayments API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\nFor example:\n```\nhttps://pal-test.adyen.com/pal/servlet/Payment/v30/authorise\n```\n\n## Going live\n\nTo authenticate to the live endpoints, you need an [API credential](https://docs.adyen.com/development-resources/api-credentials) from your live Customer Area.\n\nThe live endpoint URLs contain a prefix which is unique to your company account:\n```\n\nhttps://{PREFIX}-pal-live.adyenpayments.com/pal/servlet/Payment/v30/authorise\n```\n\nGet your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to cancel an unreferenced refund request with the Adyen Payment API before it gets processed. Could you please help me with that using the tenderReference or pspReference of the original refund request?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request with the Adyen Payment API before it gets processed. Could you please help me with that using the tenderReference or pspReference of the original refund request?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4835013591029201
            },
            {
                "idx": 2,
                "candidate": "I want to cancel an unreferenced refund request with the Adyen Payment API before it gets processed. Please help me with that using the tenderReference or pspReference from the original refund request.",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request with the Adyen Payment API before it gets processed. Please help me with that using the tenderReference or pspReference from the original refund request.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.45875110746149583
            },
            {
                "idx": 3,
                "candidate": "I want to cancel an unreferenced refund request before completion using the Adyen Payment API. Please help me with this by providing an example using the `post-voidPendingRefund` endpoint.",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before completion using the Adyen Payment API. Please help me with this by providing an example using the `post-voidPendingRefund` endpoint.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.3888402370123573
            },
            {
                "idx": 4,
                "candidate": "I want to cancel an unreferenced refund request with Adyen Payment API, using the original tender reference. How can I do that?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request with Adyen Payment API, using the original tender reference. How can I do that?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4466461245909206
            },
            {
                "idx": 5,
                "candidate": "I want to cancel an unreferenced refund request before completion using the Adyen Payment API. Could you help me with that by providing an example using the `post-voidPendingRefund` endpoint?",
                "input_text": "Functionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "You will be given a user query for which an endpoint is useful.\nIn addition, you will be given the endpoint's identifier, the endpoint's functionality, the endpoint's description, and the name of the API this endpoint belongs to.\nYour job is to re-generate the endpoint's identifier, functionality, description, and API name based on the given user query input.\n\nBelow are some examples:\n\n###Input:\nGive me an example of how to capture an authorisation with the Adyen Payment API.\n###Output:\nFunctionality: Capture an authorisation\nDescription: Captures the authorisation hold on a payment, returning a unique reference for this request. Usually the full authorisation amount is captured, however it's also possible to capture a smaller amount, which results in cancelling the remaining authorisation balance.\n\nPayment methods that are captured automatically after authorisation don't need to be captured. However, submitting a capture request on these transactions will not result in double charges. If immediate or delayed auto-capture is enabled, calling the capture method is not neccessary.\n\nFor more information refer to [Capture](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/capture).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/captures`](https://docs.adyen.com/api-explorer/#/CheckoutService/v67/post/payments/{paymentPspReference}/captures) endpoint on Checkout API instead.\n\n\nEndpoint: post-capture\nAPI: Adyen Payment API\n\n###Input:\nPlease give me an example of how to use the endpoint post-voidPendingRefund from Adyen Payment API.\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API\n\n###Input:\nI need to cancels a payment if it has not been captured yet, or refunds it if it has already been captured with the Adyen Payment API. Please help me with that.\n###Output:\nFunctionality: Cancel or refund a payment\nDescription: Cancels a payment if it has not been captured yet, or refunds it if it has already been captured. This is useful when it is not certain if the payment has been captured or not (for example, when using auto-capture).\n\nDo not use this endpoint for payments that involve:\n * [Multiple partial captures](https://docs.adyen.com/online-payments/capture).\n * [Split data](https://docs.adyen.com/marketplaces-and-platforms/processing-payments#providing-split-information) either at time of payment or capture for Adyen for Platforms.\n\n Instead, check if the payment has been captured and make a corresponding [`/refund`](https://docs.adyen.com/api-explorer/#/Payment/refund) or [`/cancel`](https://docs.adyen.com/api-explorer/#/Payment/cancel) call.\n\nFor more information, refer to [Cancel or refund](https://docs.adyen.com/online-payments/classic-integrations/modify-payments/cancel-or-refund).\n\n> This endpoint is part of our [classic API integration](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce). If using a [newer integration](https://docs.adyen.com/online-payments), use the [`/payments/{paymentPspReference}/reversals`](https://docs.adyen.com/api-explorer/#/CheckoutService/payments/{paymentPspReference}/reversals) endpoint under Checkout API instead.\nEndpoint: post-cancelOrRefund\nAPI: Adyen Payment API\n\n\nHere is the actual task for you:\n\n###Input:\nI want to cancel an unreferenced refund request before completion using the Adyen Payment API. Could you help me with that by providing an example using the `post-voidPendingRefund` endpoint?\n###Output:\nFunctionality: Cancel an in-person refund\nDescription: This endpoint allows you to cancel an unreferenced refund request before it has been completed.\n\nIn your call, you can refer to the original refund request either by using the `tenderReference`, or the `pspReference`. We recommend implementing based on the `tenderReference`, as this is generated for both offline and online transactions.\n\nFor more information, refer to [Cancel an unreferenced refund](https://docs.adyen.com/point-of-sale/refund-payment/cancel-unreferenced).\nEndpoint: post-voidPendingRefund\nAPI: Adyen Payment API",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.3898578626710676
            }
        ],
        "best_instruction": {
            "idx": 3,
            "candidate": "I want to cancel an unreferenced refund request before completion using the Adyen Payment API. Please help me with this by providing an example using the `post-voidPendingRefund` endpoint."
        }
    }
]