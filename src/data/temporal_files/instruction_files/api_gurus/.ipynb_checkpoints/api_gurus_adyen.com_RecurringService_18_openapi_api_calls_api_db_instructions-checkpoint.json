[
    {
        "api_call": "curl --request POST \\\n  --url https://pal-test.adyen.com/pal/servlet/Recurring/v18/disable \\\n  --header 'content-type: application/json' \\\n  --data '{\"contract\":\"string\",\"merchantAccount\":\"string\",\"recurringDetailReference\":\"string\",\"shopperReference\":\"string\"}'",
        "api_name": "Adyen Recurring Service",
        "api_provider": "adyen.com",
        "endpoint": "",
        "framework": "adyen.com",
        "functionality": "Disables stored payment details.",
        "api_arguments": {},
        "description": "Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).",
        "path": "/disable",
        "method": "post",
        "lang": "cURL",
        "domain": [],
        "api_description": "Additional methods that allow you to manage payment details stored for recurring payments. For more information, refer to [Recurring payments](https://docs.adyen.com/developers/features/recurring-payments).",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How can I stop the recurring payments from a specific shopper's stored payment detail using the Adyen Recurring Service?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nHow can I stop the recurring payments from a specific shopper's stored payment detail using the Adyen Recurring Service?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8219637078172038
            },
            {
                "idx": 2,
                "candidate": "How do I stop automatic charges from a specific recurring payment detail of a shopper using the Adyen Recurring Service? Please help me disable that payment detail.",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nHow do I stop automatic charges from a specific recurring payment detail of a shopper using the Adyen Recurring Service? Please help me disable that payment detail.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8095119444050627
            },
            {
                "idx": 3,
                "candidate": "I want to stop automatically charging a shopper with the given recurring detail ID using the Adyen Recurring Service. Help me disable the stored payment detail associated with this ID.",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop automatically charging a shopper with the given recurring detail ID using the Adyen Recurring Service. Help me disable the stored payment detail associated with this ID.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.6612175995081657
            },
            {
                "idx": 4,
                "candidate": "I want to stop automatic charges for a shopper using their specific recurring detail ID. Could you help me disable the stored payment details associated with this ID using the Adyen Recurring Service?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop automatic charges for a shopper using their specific recurring detail ID. Could you help me disable the stored payment details associated with this ID using the Adyen Recurring Service?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7062116040239913
            },
            {
                "idx": 5,
                "candidate": "I'd like to stop automatic payments for a shopper using their recurring detail ID with the Adyen Recurring Service. Could you help me disable the stored payment detail associated with this ID?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to stop automatic payments for a shopper using their recurring detail ID with the Adyen Recurring Service. Could you help me disable the stored payment detail associated with this ID?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7176642935625711
            }
        ],
        "instruction_prompt": "Your task is to create a user query that effectively utilizes a specific API. The API's functionality, description, and name will be provided to you. Your query should be designed in a way that makes the best use of this API's unique capabilities. When crafting your query, focus on:\n\n1. **API Name Integration:** Clearly include the API's name in your query to ensure relevance.\n2. **Specificity:** Replace broad or vague terms with precise, concrete details relevant to the API's purpose.\n3. **Conciseness:** Keep your query as brief as possible while still fully conveying the needed information. Avoid unnecessary verbosity.\n4. **Excluding API Endpoint:** Do not include the API's endpoint in your query; focus only on the user's need and how the API fulfills it.\n\nCreate a query that a user might realistically use when interacting with the given API. Think about typical scenarios or problems that the API is designed to solve and formulate your query accordingly.\n\nExamples for practice:\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to disables stored payment details to stop charging a shopper with this particular recurring detail id with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n\nRemember, the goal is to demonstrate how a user would benefit from this specific API in a realistic scenario, using precise and clear language. Here is the actual task for you:\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\n",
        "best_instruction": {
            "idx": 3,
            "candidate": "I want to stop automatically charging a shopper with the given recurring detail ID using the Adyen Recurring Service. Help me disable the stored payment detail associated with this ID."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"contract\\\":\\\"string\\\",\\\"merchantAccount\\\":\\\"string\\\",\\\"recurringDetailReference\\\":\\\"string\\\",\\\"shopperReference\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://pal-test.adyen.com/pal/servlet/Recurring/v18/disable\")\n  .post(body)\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Adyen Recurring Service",
        "api_provider": "adyen.com",
        "endpoint": "",
        "framework": "adyen.com",
        "functionality": "Disables stored payment details.",
        "api_arguments": {},
        "description": "Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).",
        "path": "/disable",
        "method": "post",
        "lang": "Java",
        "domain": [],
        "api_description": "Additional methods that allow you to manage payment details stored for recurring payments. For more information, refer to [Recurring payments](https://docs.adyen.com/developers/features/recurring-payments).",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to stop automatic payments from a shopper's stored payment detail with the Adyen Recurring Service. Could you help me disable the stored detail with the given recurring detail ID?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop automatic payments from a shopper's stored payment detail with the Adyen Recurring Service. Could you help me disable the stored detail with the given recurring detail ID?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7140491149084507
            },
            {
                "idx": 2,
                "candidate": "I want to stop automatic charges to a shopper using a specific recurring detail ID. Can you help me disable the stored payment details associated with that ID using the Adyen Recurring Service?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop automatic charges to a shopper using a specific recurring detail ID. Can you help me disable the stored payment details associated with that ID using the Adyen Recurring Service?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7229013737988138
            },
            {
                "idx": 3,
                "candidate": "I want to stop automatically charging a shopper using a specific recurring detail ID with the Adyen Recurring Service. Can you help me disable the stored payment detail associated with that ID?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop automatically charging a shopper using a specific recurring detail ID with the Adyen Recurring Service. Can you help me disable the stored payment detail associated with that ID?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.6766988315656508
            },
            {
                "idx": 4,
                "candidate": "I want to stop automatically charging a specific shopper using their stored payment details with the Adyen Recurring Service. How do I disable the payment detail associated with their recurring ID?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop automatically charging a specific shopper using their stored payment details with the Adyen Recurring Service. How do I disable the payment detail associated with their recurring ID?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7486253289695748
            },
            {
                "idx": 5,
                "candidate": "To halt charges for a specific shopper's recurring detail using the Adyen Recurring Service, please help me construct a query to disable the stored payment details.",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nTo halt charges for a specific shopper's recurring detail using the Adyen Recurring Service, please help me construct a query to disable the stored payment details.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.619931769353489
            }
        ],
        "instruction_prompt": "Your task is to create a user query that effectively utilizes a specific API. The API's functionality, description, and name will be provided to you. Your query should be designed in a way that makes the best use of this API's unique capabilities. When crafting your query, focus on:\n\n1. **API Name Integration:** Clearly include the API's name in your query to ensure relevance.\n2. **Specificity:** Replace broad or vague terms with precise, concrete details relevant to the API's purpose.\n3. **Conciseness:** Keep your query as brief as possible while still fully conveying the needed information. Avoid unnecessary verbosity.\n4. **Excluding API Endpoint:** Do not include the API's endpoint in your query; focus only on the user's need and how the API fulfills it.\n\nCreate a query that a user might realistically use when interacting with the given API. Think about typical scenarios or problems that the API is designed to solve and formulate your query accordingly.\n\nExamples for practice:\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to disables stored payment details to stop charging a shopper with this particular recurring detail id with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n\nRemember, the goal is to demonstrate how a user would benefit from this specific API in a realistic scenario, using precise and clear language. Here is the actual task for you:\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\n",
        "best_instruction": {
            "idx": 5,
            "candidate": "To halt charges for a specific shopper's recurring detail using the Adyen Recurring Service, please help me construct a query to disable the stored payment details."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://pal-test.adyen.com/pal/servlet/Recurring/v18/disable',\n  headers: {'content-type': 'application/json'},\n  body: {\n    contract: 'string',\n    merchantAccount: 'string',\n    recurringDetailReference: 'string',\n    shopperReference: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Adyen Recurring Service",
        "api_provider": "adyen.com",
        "endpoint": "",
        "framework": "adyen.com",
        "functionality": "Disables stored payment details.",
        "api_arguments": {},
        "description": "Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).",
        "path": "/disable",
        "method": "post",
        "lang": "Node",
        "domain": [],
        "api_description": "Additional methods that allow you to manage payment details stored for recurring payments. For more information, refer to [Recurring payments](https://docs.adyen.com/developers/features/recurring-payments).",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to stop automatically charging a shopper associated with a specific recurring detail ID using the Adyen Recurring Service. Can you help me disable the stored payment details for this shopper?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop automatically charging a shopper associated with a specific recurring detail ID using the Adyen Recurring Service. Can you help me disable the stored payment details for this shopper?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7152038304753653
            },
            {
                "idx": 2,
                "candidate": "I'd like to stop automatic payments for a shopper using a specific recurring detail ID. How do I disable the stored payment details for this shopper with the Adyen Recurring Service?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to stop automatic payments for a shopper using a specific recurring detail ID. How do I disable the stored payment details for this shopper with the Adyen Recurring Service?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7696629316665661
            },
            {
                "idx": 3,
                "candidate": "I want to stop the recurring payments for a specific shopper using the Adyen Recurring Service. Could you help me disable the stored payment detail associated with this shopper's recurring detail ID?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop the recurring payments for a specific shopper using the Adyen Recurring Service. Could you help me disable the stored payment detail associated with this shopper's recurring detail ID?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7405480014981258
            },
            {
                "idx": 4,
                "candidate": "I want to stop automatic payments from being processed for a specific shopper using the Adyen Recurring Service. Can you help me disable the stored payment detail associated with their recurring detail ID?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop automatic payments from being processed for a specific shopper using the Adyen Recurring Service. Can you help me disable the stored payment detail associated with their recurring detail ID?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7698314375764219
            },
            {
                "idx": 5,
                "candidate": "I'd like to stop charging a shopper using a specific recurring detail ID with the Adyen Recurring Service. Could you help me disable the stored payment detail associated with that ID?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to stop charging a shopper using a specific recurring detail ID with the Adyen Recurring Service. Could you help me disable the stored payment detail associated with that ID?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.6499125099901267
            }
        ],
        "instruction_prompt": "Your task is to create a user query that effectively utilizes a specific API. The API's functionality, description, and name will be provided to you. Your query should be designed in a way that makes the best use of this API's unique capabilities. When crafting your query, focus on:\n\n1. **API Name Integration:** Clearly include the API's name in your query to ensure relevance.\n2. **Specificity:** Replace broad or vague terms with precise, concrete details relevant to the API's purpose.\n3. **Conciseness:** Keep your query as brief as possible while still fully conveying the needed information. Avoid unnecessary verbosity.\n4. **Excluding API Endpoint:** Do not include the API's endpoint in your query; focus only on the user's need and how the API fulfills it.\n\nCreate a query that a user might realistically use when interacting with the given API. Think about typical scenarios or problems that the API is designed to solve and formulate your query accordingly.\n\nExamples for practice:\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to disables stored payment details to stop charging a shopper with this particular recurring detail id with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n\nRemember, the goal is to demonstrate how a user would benefit from this specific API in a realistic scenario, using precise and clear language. Here is the actual task for you:\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\n",
        "best_instruction": {
            "idx": 5,
            "candidate": "I'd like to stop charging a shopper using a specific recurring detail ID with the Adyen Recurring Service. Could you help me disable the stored payment detail associated with that ID?"
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"pal-test.adyen.com\")\n\npayload = \"{\\\"contract\\\":\\\"string\\\",\\\"merchantAccount\\\":\\\"string\\\",\\\"recurringDetailReference\\\":\\\"string\\\",\\\"shopperReference\\\":\\\"string\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/pal/servlet/Recurring/v18/disable\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Adyen Recurring Service",
        "api_provider": "adyen.com",
        "endpoint": "",
        "framework": "adyen.com",
        "functionality": "Disables stored payment details.",
        "api_arguments": {},
        "description": "Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).",
        "path": "/disable",
        "method": "post",
        "lang": "Python",
        "domain": [],
        "api_description": "Additional methods that allow you to manage payment details stored for recurring payments. For more information, refer to [Recurring payments](https://docs.adyen.com/developers/features/recurring-payments).",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to stop automatic payments from a specific shopper with the Adyen Recurring Service. Could you help me disable the stored payment details associated with their recurring detail ID?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop automatic payments from a specific shopper with the Adyen Recurring Service. Could you help me disable the stored payment details associated with their recurring detail ID?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7594331759147709
            },
            {
                "idx": 2,
                "candidate": "I'd like to disable the recurring payment details associated with the given ID for a specific shopper using the Adyen Recurring Service. This action will prevent further recurring charges. Could you provide guidance on how to accomplish this?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to disable the recurring payment details associated with the given ID for a specific shopper using the Adyen Recurring Service. This action will prevent further recurring charges. Could you provide guidance on how to accomplish this?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7983382832369272
            },
            {
                "idx": 3,
                "candidate": "I want to prevent further automatic charges from a specific shopper's recurring detail using the Adyen Recurring Service. Can you help me disable this stored payment detail?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to prevent further automatic charges from a specific shopper's recurring detail using the Adyen Recurring Service. Can you help me disable this stored payment detail?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7236161904917854
            },
            {
                "idx": 4,
                "candidate": "I would like to stop automatic charging of a shopper using a specific recurring detail ID with the Adyen Recurring Service. Could you help me disable this stored payment detail?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI would like to stop automatic charging of a shopper using a specific recurring detail ID with the Adyen Recurring Service. Could you help me disable this stored payment detail?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.6850694634587837
            },
            {
                "idx": 5,
                "candidate": "I want to stop charging a shopper using a specific recurring payment detail with the Adyen Recurring Service. Help me disable the stored payment detail associated with that ID.",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop charging a shopper using a specific recurring payment detail with the Adyen Recurring Service. Help me disable the stored payment detail associated with that ID.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.6425280558743773
            }
        ],
        "instruction_prompt": "Your task is to create a user query that effectively utilizes a specific API. The API's functionality, description, and name will be provided to you. Your query should be designed in a way that makes the best use of this API's unique capabilities. When crafting your query, focus on:\n\n1. **API Name Integration:** Clearly include the API's name in your query to ensure relevance.\n2. **Specificity:** Replace broad or vague terms with precise, concrete details relevant to the API's purpose.\n3. **Conciseness:** Keep your query as brief as possible while still fully conveying the needed information. Avoid unnecessary verbosity.\n4. **Excluding API Endpoint:** Do not include the API's endpoint in your query; focus only on the user's need and how the API fulfills it.\n\nCreate a query that a user might realistically use when interacting with the given API. Think about typical scenarios or problems that the API is designed to solve and formulate your query accordingly.\n\nExamples for practice:\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to disables stored payment details to stop charging a shopper with this particular recurring detail id with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n\nRemember, the goal is to demonstrate how a user would benefit from this specific API in a realistic scenario, using precise and clear language. Here is the actual task for you:\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\n",
        "best_instruction": {
            "idx": 5,
            "candidate": "I want to stop charging a shopper using a specific recurring payment detail with the Adyen Recurring Service. Help me disable the stored payment detail associated with that ID."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://pal-test.adyen.com/pal/servlet/Recurring/v18/disable\"\n\n\tpayload := strings.NewReader(\"{\\\"contract\\\":\\\"string\\\",\\\"merchantAccount\\\":\\\"string\\\",\\\"recurringDetailReference\\\":\\\"string\\\",\\\"shopperReference\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Adyen Recurring Service",
        "api_provider": "adyen.com",
        "endpoint": "",
        "framework": "adyen.com",
        "functionality": "Disables stored payment details.",
        "api_arguments": {},
        "description": "Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).",
        "path": "/disable",
        "method": "post",
        "lang": "go",
        "domain": [],
        "api_description": "Additional methods that allow you to manage payment details stored for recurring payments. For more information, refer to [Recurring payments](https://docs.adyen.com/developers/features/recurring-payments).",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to stop charging a shopper with the specific recurring detail ID using the Adyen Recurring Service. Help me disable the stored payment details associated with this ID.",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop charging a shopper with the specific recurring detail ID using the Adyen Recurring Service. Help me disable the stored payment details associated with this ID.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.6438260910228366
            },
            {
                "idx": 2,
                "candidate": "I'd like to stop automatic charges for a specific shopper using Adyen Recurring Service. Could you help me disable the stored payment detail associated with the given recurring detail ID?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to stop automatic charges for a specific shopper using Adyen Recurring Service. Could you help me disable the stored payment detail associated with the given recurring detail ID?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7282240794106127
            },
            {
                "idx": 3,
                "candidate": "I want to stop charging a specific shopper's recurring payment using the Adyen Recurring Service. Help me disable the stored payment detail associated with the given recurring detail ID.",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop charging a specific shopper's recurring payment using the Adyen Recurring Service. Help me disable the stored payment detail associated with the given recurring detail ID.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.6583889149024426
            },
            {
                "idx": 4,
                "candidate": "I want to stop automated payments from a specific shopper's stored payment detail with Adyen Recurring Service. Can you help me disable this recurring detail ID?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop automated payments from a specific shopper's stored payment detail with Adyen Recurring Service. Can you help me disable this recurring detail ID?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7938946668839627
            },
            {
                "idx": 5,
                "candidate": "I want to stop charging a specific shopper's recurring payment using the Adyen Recurring Service. Help me disable the stored payment detail associated with the given recurring detail ID.",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop charging a specific shopper's recurring payment using the Adyen Recurring Service. Help me disable the stored payment detail associated with the given recurring detail ID.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.6583889149024426
            }
        ],
        "instruction_prompt": "Your task is to create a user query that effectively utilizes a specific API. The API's functionality, description, and name will be provided to you. Your query should be designed in a way that makes the best use of this API's unique capabilities. When crafting your query, focus on:\n\n1. **API Name Integration:** Clearly include the API's name in your query to ensure relevance.\n2. **Specificity:** Replace broad or vague terms with precise, concrete details relevant to the API's purpose.\n3. **Conciseness:** Keep your query as brief as possible while still fully conveying the needed information. Avoid unnecessary verbosity.\n4. **Excluding API Endpoint:** Do not include the API's endpoint in your query; focus only on the user's need and how the API fulfills it.\n\nCreate a query that a user might realistically use when interacting with the given API. Think about typical scenarios or problems that the API is designed to solve and formulate your query accordingly.\n\nExamples for practice:\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to disables stored payment details to stop charging a shopper with this particular recurring detail id with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n\nRemember, the goal is to demonstrate how a user would benefit from this specific API in a realistic scenario, using precise and clear language. Here is the actual task for you:\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\n",
        "best_instruction": {
            "idx": 1,
            "candidate": "I want to stop charging a shopper with the specific recurring detail ID using the Adyen Recurring Service. Help me disable the stored payment details associated with this ID."
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://pal-test.adyen.com/pal/servlet/Recurring/v18/disable\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"contract\\\":\\\"string\\\",\\\"merchantAccount\\\":\\\"string\\\",\\\"recurringDetailReference\\\":\\\"string\\\",\\\"shopperReference\\\":\\\"string\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Adyen Recurring Service",
        "api_provider": "adyen.com",
        "endpoint": "",
        "framework": "adyen.com",
        "functionality": "Disables stored payment details.",
        "api_arguments": {},
        "description": "Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).",
        "path": "/disable",
        "method": "post",
        "lang": "Ruby",
        "domain": [],
        "api_description": "Additional methods that allow you to manage payment details stored for recurring payments. For more information, refer to [Recurring payments](https://docs.adyen.com/developers/features/recurring-payments).",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to stop charging a shopper with a specific recurring detail ID using the Adyen Recurring Service. Help me disable the stored payment details associated with that ID.",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop charging a shopper with a specific recurring detail ID using the Adyen Recurring Service. Help me disable the stored payment details associated with that ID.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.6481408007703329
            },
            {
                "idx": 2,
                "candidate": "I'd like to stop automatic charges from a specific stored payment detail for a shopper using the Adyen Recurring Service. How can I disable this detail to prevent further billing?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to stop automatic charges from a specific stored payment detail for a shopper using the Adyen Recurring Service. How can I disable this detail to prevent further billing?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7783963994425973
            },
            {
                "idx": 3,
                "candidate": "I want to stop automatic payments for a specific shopper using their recurring detail ID. Help me disable the stored payment details associated with that ID using the Adyen Recurring Service.",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop automatic payments for a specific shopper using their recurring detail ID. Help me disable the stored payment details associated with that ID using the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7450383455119504
            },
            {
                "idx": 4,
                "candidate": "I want to stop charging a shopper with the given recurring detail ID using the Adyen Recurring Service. How do I disable the stored payment details associated with this ID?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop charging a shopper with the given recurring detail ID using the Adyen Recurring Service. How do I disable the stored payment details associated with this ID?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.664820094587393
            },
            {
                "idx": 5,
                "candidate": "To stop charging a specific shopper with a recurring payment detail in Adyen Recurring Service, I'd like to disable that stored payment detail. How do I go about doing this?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nTo stop charging a specific shopper with a recurring payment detail in Adyen Recurring Service, I'd like to disable that stored payment detail. How do I go about doing this?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.6395915662690386
            }
        ],
        "instruction_prompt": "Your task is to create a user query that effectively utilizes a specific API. The API's functionality, description, and name will be provided to you. Your query should be designed in a way that makes the best use of this API's unique capabilities. When crafting your query, focus on:\n\n1. **API Name Integration:** Clearly include the API's name in your query to ensure relevance.\n2. **Specificity:** Replace broad or vague terms with precise, concrete details relevant to the API's purpose.\n3. **Conciseness:** Keep your query as brief as possible while still fully conveying the needed information. Avoid unnecessary verbosity.\n4. **Excluding API Endpoint:** Do not include the API's endpoint in your query; focus only on the user's need and how the API fulfills it.\n\nCreate a query that a user might realistically use when interacting with the given API. Think about typical scenarios or problems that the API is designed to solve and formulate your query accordingly.\n\nExamples for practice:\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to disables stored payment details to stop charging a shopper with this particular recurring detail id with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n\nRemember, the goal is to demonstrate how a user would benefit from this specific API in a realistic scenario, using precise and clear language. Here is the actual task for you:\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\n",
        "best_instruction": {
            "idx": 5,
            "candidate": "To stop charging a specific shopper with a recurring payment detail in Adyen Recurring Service, I'd like to disable that stored payment detail. How do I go about doing this?"
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://pal-test.adyen.com/pal/servlet/Recurring/v18/disable\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"contract\\\":\\\"string\\\",\\\"merchantAccount\\\":\\\"string\\\",\\\"recurringDetailReference\\\":\\\"string\\\",\\\"shopperReference\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Adyen Recurring Service",
        "api_provider": "adyen.com",
        "endpoint": "",
        "framework": "adyen.com",
        "functionality": "Disables stored payment details.",
        "api_arguments": {},
        "description": "Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).",
        "path": "/disable",
        "method": "post",
        "lang": "PHP",
        "domain": [],
        "api_description": "Additional methods that allow you to manage payment details stored for recurring payments. For more information, refer to [Recurring payments](https://docs.adyen.com/developers/features/recurring-payments).",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to stop the automatic charges for a specific shopper using their recurring detail ID. Can you help me disable the stored payment details associated with this ID through the Adyen Recurring Service API?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop the automatic charges for a specific shopper using their recurring detail ID. Can you help me disable the stored payment details associated with this ID through the Adyen Recurring Service API?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7208015804965366
            },
            {
                "idx": 2,
                "candidate": "I want to stop automatic payments from a specific shopper's stored payment detail using the Adyen Recurring Service. Help me disable the payment detail associated with the given recurring ID.",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop automatic payments from a specific shopper's stored payment detail using the Adyen Recurring Service. Help me disable the payment detail associated with the given recurring ID.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.8008669270275373
            },
            {
                "idx": 3,
                "candidate": "I want to stop automatic charges to a shopper using a specific recurring detail ID. How can I disable the stored payment detail with Adyen Recurring Service?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop automatic charges to a shopper using a specific recurring detail ID. How can I disable the stored payment detail with Adyen Recurring Service?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.6979322850243088
            },
            {
                "idx": 4,
                "candidate": "I want to stop automatic payments from a shopper using a specific recurring detail ID. Can you guide me on how to disable this stored payment detail with the Adyen Recurring Service?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop automatic payments from a shopper using a specific recurring detail ID. Can you guide me on how to disable this stored payment detail with the Adyen Recurring Service?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7275876152903196
            },
            {
                "idx": 5,
                "candidate": "I want to stop charging a shopper with a specific recurring payment detail ID. How do I disable the stored payment detail using the Adyen Recurring Service API?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop charging a shopper with a specific recurring payment detail ID. How do I disable the stored payment detail using the Adyen Recurring Service API?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.6264163033106416
            }
        ],
        "instruction_prompt": "Your task is to create a user query that effectively utilizes a specific API. The API's functionality, description, and name will be provided to you. Your query should be designed in a way that makes the best use of this API's unique capabilities. When crafting your query, focus on:\n\n1. **API Name Integration:** Clearly include the API's name in your query to ensure relevance.\n2. **Specificity:** Replace broad or vague terms with precise, concrete details relevant to the API's purpose.\n3. **Conciseness:** Keep your query as brief as possible while still fully conveying the needed information. Avoid unnecessary verbosity.\n4. **Excluding API Endpoint:** Do not include the API's endpoint in your query; focus only on the user's need and how the API fulfills it.\n\nCreate a query that a user might realistically use when interacting with the given API. Think about typical scenarios or problems that the API is designed to solve and formulate your query accordingly.\n\nExamples for practice:\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to disables stored payment details to stop charging a shopper with this particular recurring detail id with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n\nRemember, the goal is to demonstrate how a user would benefit from this specific API in a realistic scenario, using precise and clear language. Here is the actual task for you:\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\n",
        "best_instruction": {
            "idx": 5,
            "candidate": "I want to stop charging a shopper with a specific recurring payment detail ID. How do I disable the stored payment detail using the Adyen Recurring Service API?"
        }
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\"content-type\": \"application/json\"]\nlet parameters = [\n  \"contract\": \"string\",\n  \"merchantAccount\": \"string\",\n  \"recurringDetailReference\": \"string\",\n  \"shopperReference\": \"string\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://pal-test.adyen.com/pal/servlet/Recurring/v18/disable\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Adyen Recurring Service",
        "api_provider": "adyen.com",
        "endpoint": "",
        "framework": "adyen.com",
        "functionality": "Disables stored payment details.",
        "api_arguments": {},
        "description": "Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).",
        "path": "/disable",
        "method": "post",
        "lang": "swift",
        "domain": [],
        "api_description": "Additional methods that allow you to manage payment details stored for recurring payments. For more information, refer to [Recurring payments](https://docs.adyen.com/developers/features/recurring-payments).",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to stop charging a specific shopper using their recurring detail ID with the Adyen Recurring Service. Can you help me disable those stored payment details?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to stop charging a specific shopper using their recurring detail ID with the Adyen Recurring Service. Can you help me disable those stored payment details?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.6557819932111199
            },
            {
                "idx": 2,
                "candidate": "I want to stop automatic payments from a specific shopper's stored payment detail using the Adyen Recurring Service. Can you help me disable this payment detail with the given recurring detail ID?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop automatic payments from a specific shopper's stored payment detail using the Adyen Recurring Service. Can you help me disable this payment detail with the given recurring detail ID?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7582486806196971
            },
            {
                "idx": 3,
                "candidate": "I want to stop automatically charging a shopper using their specific recurring detail ID with the Adyen Recurring Service. Can you help me disable this stored payment detail?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to stop automatically charging a shopper using their specific recurring detail ID with the Adyen Recurring Service. Can you help me disable this stored payment detail?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.6594783129300955
            },
            {
                "idx": 4,
                "candidate": "I'd like to stop charging a specific shopper using their stored payment detail with Adyen Recurring Service. How do I disable this recurring detail to ensure further charges are not processed?",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to stop charging a specific shopper using their stored payment detail with Adyen Recurring Service. How do I disable this recurring detail to ensure further charges are not processed?\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.7149007483457551
            },
            {
                "idx": 5,
                "candidate": "How do I stop charging a shopper with a specific recurring detail ID using the Adyen Recurring Service? Please help me disable the stored payment details associated with this ID.",
                "input_text": "Functionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nHow do I stop charging a shopper with a specific recurring detail ID using the Adyen Recurring Service? Please help me disable the stored payment details associated with this ID.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.6480115640172034
            }
        ],
        "instruction_prompt": "Your task is to create a user query that effectively utilizes a specific API. The API's functionality, description, and name will be provided to you. Your query should be designed in a way that makes the best use of this API's unique capabilities. When crafting your query, focus on:\n\n1. **API Name Integration:** Clearly include the API's name in your query to ensure relevance.\n2. **Specificity:** Replace broad or vague terms with precise, concrete details relevant to the API's purpose.\n3. **Conciseness:** Keep your query as brief as possible while still fully conveying the needed information. Avoid unnecessary verbosity.\n4. **Excluding API Endpoint:** Do not include the API's endpoint in your query; focus only on the user's need and how the API fulfills it.\n\nCreate a query that a user might realistically use when interacting with the given API. Think about typical scenarios or problems that the API is designed to solve and formulate your query accordingly.\n\nExamples for practice:\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to disables stored payment details to stop charging a shopper with this particular recurring detail id with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n\nRemember, the goal is to demonstrate how a user would benefit from this specific API in a realistic scenario, using precise and clear language. Here is the actual task for you:\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\n",
        "best_instruction": {
            "idx": 5,
            "candidate": "How do I stop charging a shopper with a specific recurring detail ID using the Adyen Recurring Service? Please help me disable the stored payment details associated with this ID."
        }
    },
    {
        "api_call": "curl --request POST \\\n  --url https://pal-test.adyen.com/pal/servlet/Recurring/v18/listRecurringDetails \\\n  --header 'content-type: application/json' \\\n  --data '{\"merchantAccount\":\"string\",\"recurring\":{\"contract\":\"ONECLICK\",\"recurringDetailName\":\"string\"},\"shopperReference\":\"string\"}'",
        "api_name": "Adyen Recurring Service",
        "api_provider": "adyen.com",
        "endpoint": "",
        "framework": "adyen.com",
        "functionality": "Retrieves stored payment details for a shopper.",
        "api_arguments": {},
        "description": "Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).",
        "path": "/listRecurringDetails",
        "method": "post",
        "lang": "cURL",
        "domain": [],
        "api_description": "Additional methods that allow you to manage payment details stored for recurring payments. For more information, refer to [Recurring payments](https://docs.adyen.com/developers/features/recurring-payments).",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How can I get the stored payment information for a particular shopper using the Adyen Recurring Service? This API will provide me with the recurring detail summary that I can use for charging the shopper in a regular authorization request.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nHow can I get the stored payment information for a particular shopper using the Adyen Recurring Service? This API will provide me with the recurring detail summary that I can use for charging the shopper in a regular authorization request.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.43601332184625957
            },
            {
                "idx": 2,
                "candidate": "I'd like to retrieve the stored payment details for a specific shopper using the Adyen Recurring Service. If the shopper has any available payment details on record, please provide me with a summary of those details so I can present them for authorization and charging purposes.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to retrieve the stored payment details for a specific shopper using the Adyen Recurring Service. If the shopper has any available payment details on record, please provide me with a summary of those details so I can present them for authorization and charging purposes.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4150093255486769
            },
            {
                "idx": 3,
                "candidate": "I'd like to view the stored payment details for a specific shopper using the Adyen Recurring Service. If there are any available, I can use the recurring detail ID to process a regular authorization request and charge the shopper. Please help me retrieve this information.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to view the stored payment details for a specific shopper using the Adyen Recurring Service. If there are any available, I can use the recurring detail ID to process a regular authorization request and charge the shopper. Please help me retrieve this information.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4225283094080267
            },
            {
                "idx": 4,
                "candidate": "To view a shopper's previously saved payment details for making a repeat charge using the Adyen Recurring Service, please help me with that.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nTo view a shopper's previously saved payment details for making a repeat charge using the Adyen Recurring Service, please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.42800971801284865
            },
            {
                "idx": 5,
                "candidate": "I'd like to view the previously saved payment information of a specific shopper with the Adyen Recurring Service, if any exists. kindly help me achieve that.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to view the previously saved payment information of a specific shopper with the Adyen Recurring Service, if any exists. kindly help me achieve that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4365226915506688
            }
        ],
        "instruction_prompt": "Your task is to create a user query that effectively utilizes a specific API. The API's functionality, description, and name will be provided to you. Your query should be designed in a way that makes the best use of this API's unique capabilities. When crafting your query, focus on:\n\n1. **API Name Integration:** Clearly include the API's name in your query to ensure relevance.\n2. **Specificity:** Replace broad or vague terms with precise, concrete details relevant to the API's purpose.\n3. **Conciseness:** Keep your query as brief as possible while still fully conveying the needed information. Avoid unnecessary verbosity.\n4. **Excluding API Endpoint:** Do not include the API's endpoint in your query; focus only on the user's need and how the API fulfills it.\n\nCreate a query that a user might realistically use when interacting with the given API. Think about typical scenarios or problems that the API is designed to solve and formulate your query accordingly.\n\nExamples for practice:\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to disables stored payment details to stop charging a shopper with this particular recurring detail id with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n\nRemember, the goal is to demonstrate how a user would benefit from this specific API in a realistic scenario, using precise and clear language. Here is the actual task for you:\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\n",
        "best_instruction": {
            "idx": 2,
            "candidate": "I'd like to retrieve the stored payment details for a specific shopper using the Adyen Recurring Service. If the shopper has any available payment details on record, please provide me with a summary of those details so I can present them for authorization and charging purposes."
        }
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"merchantAccount\\\":\\\"string\\\",\\\"recurring\\\":{\\\"contract\\\":\\\"ONECLICK\\\",\\\"recurringDetailName\\\":\\\"string\\\"},\\\"shopperReference\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://pal-test.adyen.com/pal/servlet/Recurring/v18/listRecurringDetails\")\n  .post(body)\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Adyen Recurring Service",
        "api_provider": "adyen.com",
        "endpoint": "",
        "framework": "adyen.com",
        "functionality": "Retrieves stored payment details for a shopper.",
        "api_arguments": {},
        "description": "Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).",
        "path": "/listRecurringDetails",
        "method": "post",
        "lang": "Java",
        "domain": [],
        "api_description": "Additional methods that allow you to manage payment details stored for recurring payments. For more information, refer to [Recurring payments](https://docs.adyen.com/developers/features/recurring-payments).",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "To view a shopper's previously stored payment details using the Adyen Recurring Service API, please provide the shopper's unique identifier. With this information, we'll be able to fetch the stored payment details, which include the payment method type, last four digits of the card number, and expiration date. These details can be utilized for making a new charge using the recurring detail ID. If necessary, the full details can also be retrieved for further verification.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nTo view a shopper's previously stored payment details using the Adyen Recurring Service API, please provide the shopper's unique identifier. With this information, we'll be able to fetch the stored payment details, which include the payment method type, last four digits of the card number, and expiration date. These details can be utilized for making a new charge using the recurring detail ID. If necessary, the full details can also be retrieved for further verification.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5337279673371287
            },
            {
                "idx": 2,
                "candidate": "I'd like to retrieve the stored payment details for a specific shopper using the Adyen Recurring Service API. This will provide me with any available payment details that can be used to charge the shopper, along with a summary for their reference. Could you help me accomplish this task?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to retrieve the stored payment details for a specific shopper using the Adyen Recurring Service API. This will provide me with any available payment details that can be used to charge the shopper, along with a summary for their reference. Could you help me accomplish this task?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4151489501192272
            },
            {
                "idx": 3,
                "candidate": "I'd like to retrieve a shopper's stored payment details from Adyen Recurring Service. If there are any available, I can use the recurring detail ID to process a regular authorisation request and charge them accordingly. Kindly help me with this request.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to retrieve a shopper's stored payment details from Adyen Recurring Service. If there are any available, I can use the recurring detail ID to process a regular authorisation request and charge them accordingly. Kindly help me with this request.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.3955273561480977
            },
            {
                "idx": 4,
                "candidate": "How do I obtain a shopper's previously saved Payment Method Summaries using the Adyen Recurring Service API?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nHow do I obtain a shopper's previously saved Payment Method Summaries using the Adyen Recurring Service API?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5613265596551545
            },
            {
                "idx": 5,
                "candidate": "I'd like to request the Adyen Recurring Service to provide me with the stored payment details for a specific shopper. If there are any available, I will be given a summary of the payment detail along with the recurring detail ID. This information will allow me to process a charge using a regular authorization request, making the shopping experience smoother for the customer.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to request the Adyen Recurring Service to provide me with the stored payment details for a specific shopper. If there are any available, I will be given a summary of the payment detail along with the recurring detail ID. This information will allow me to process a charge using a regular authorization request, making the shopping experience smoother for the customer.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.45084594749252876
            }
        ],
        "instruction_prompt": "Your task is to create a user query that effectively utilizes a specific API. The API's functionality, description, and name will be provided to you. Your query should be designed in a way that makes the best use of this API's unique capabilities. When crafting your query, focus on:\n\n1. **API Name Integration:** Clearly include the API's name in your query to ensure relevance.\n2. **Specificity:** Replace broad or vague terms with precise, concrete details relevant to the API's purpose.\n3. **Conciseness:** Keep your query as brief as possible while still fully conveying the needed information. Avoid unnecessary verbosity.\n4. **Excluding API Endpoint:** Do not include the API's endpoint in your query; focus only on the user's need and how the API fulfills it.\n\nCreate a query that a user might realistically use when interacting with the given API. Think about typical scenarios or problems that the API is designed to solve and formulate your query accordingly.\n\nExamples for practice:\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to disables stored payment details to stop charging a shopper with this particular recurring detail id with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n\nRemember, the goal is to demonstrate how a user would benefit from this specific API in a realistic scenario, using precise and clear language. Here is the actual task for you:\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\n",
        "best_instruction": {
            "idx": 3,
            "candidate": "I'd like to retrieve a shopper's stored payment details from Adyen Recurring Service. If there are any available, I can use the recurring detail ID to process a regular authorisation request and charge them accordingly. Kindly help me with this request."
        }
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://pal-test.adyen.com/pal/servlet/Recurring/v18/listRecurringDetails',\n  headers: {'content-type': 'application/json'},\n  body: {\n    merchantAccount: 'string',\n    recurring: {contract: 'ONECLICK', recurringDetailName: 'string'},\n    shopperReference: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Adyen Recurring Service",
        "api_provider": "adyen.com",
        "endpoint": "",
        "framework": "adyen.com",
        "functionality": "Retrieves stored payment details for a shopper.",
        "api_arguments": {},
        "description": "Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).",
        "path": "/listRecurringDetails",
        "method": "post",
        "lang": "Node",
        "domain": [],
        "api_description": "Additional methods that allow you to manage payment details stored for recurring payments. For more information, refer to [Recurring payments](https://docs.adyen.com/developers/features/recurring-payments).",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How do I retrieve the previously saved payment details of a specific shopper from the Adyen Recurring Service for potential charges?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nHow do I retrieve the previously saved payment details of a specific shopper from the Adyen Recurring Service for potential charges?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4551088225075151
            },
            {
                "idx": 2,
                "candidate": "How do I fetch the previously saved payment details of a shopper from Adyen Recurring Service for charging them in a new transaction?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nHow do I fetch the previously saved payment details of a shopper from Adyen Recurring Service for charging them in a new transaction?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4797376986280687
            },
            {
                "idx": 3,
                "candidate": "I'd like to know how to retrieve the stored payment information for a particular shopper using the Adyen Recurring Service API. This will allow me to display the relevant payment details to the shopper for their review before initiating a charge.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to know how to retrieve the stored payment information for a particular shopper using the Adyen Recurring Service API. This will allow me to display the relevant payment details to the shopper for their review before initiating a charge.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.47141309232551476
            },
            {
                "idx": 4,
                "candidate": "I'd like to obtain the stored payment information for a specific shopper using the Adyen Recurring Service API. Could you please help me retrieve the available payment details along with their summaries for charging the shopper later?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to obtain the stored payment information for a specific shopper using the Adyen Recurring Service API. Could you please help me retrieve the available payment details along with their summaries for charging the shopper later?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.47073781771403406
            },
            {
                "idx": 5,
                "candidate": "I'd like to view the stored payment details for a specific shopper in our system, if any exist. With the Adyen Recurring Service, I can easily retrieve this information. Could you help me craft a query to do this?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to view the stored payment details for a specific shopper in our system, if any exist. With the Adyen Recurring Service, I can easily retrieve this information. Could you help me craft a query to do this?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.3801214345039184
            }
        ],
        "instruction_prompt": "Your task is to create a user query that effectively utilizes a specific API. The API's functionality, description, and name will be provided to you. Your query should be designed in a way that makes the best use of this API's unique capabilities. When crafting your query, focus on:\n\n1. **API Name Integration:** Clearly include the API's name in your query to ensure relevance.\n2. **Specificity:** Replace broad or vague terms with precise, concrete details relevant to the API's purpose.\n3. **Conciseness:** Keep your query as brief as possible while still fully conveying the needed information. Avoid unnecessary verbosity.\n4. **Excluding API Endpoint:** Do not include the API's endpoint in your query; focus only on the user's need and how the API fulfills it.\n\nCreate a query that a user might realistically use when interacting with the given API. Think about typical scenarios or problems that the API is designed to solve and formulate your query accordingly.\n\nExamples for practice:\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to disables stored payment details to stop charging a shopper with this particular recurring detail id with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n\nRemember, the goal is to demonstrate how a user would benefit from this specific API in a realistic scenario, using precise and clear language. Here is the actual task for you:\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\n",
        "best_instruction": {
            "idx": 5,
            "candidate": "I'd like to view the stored payment details for a specific shopper in our system, if any exist. With the Adyen Recurring Service, I can easily retrieve this information. Could you help me craft a query to do this?"
        }
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"pal-test.adyen.com\")\n\npayload = \"{\\\"merchantAccount\\\":\\\"string\\\",\\\"recurring\\\":{\\\"contract\\\":\\\"ONECLICK\\\",\\\"recurringDetailName\\\":\\\"string\\\"},\\\"shopperReference\\\":\\\"string\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/pal/servlet/Recurring/v18/listRecurringDetails\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Adyen Recurring Service",
        "api_provider": "adyen.com",
        "endpoint": "",
        "framework": "adyen.com",
        "functionality": "Retrieves stored payment details for a shopper.",
        "api_arguments": {},
        "description": "Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).",
        "path": "/listRecurringDetails",
        "method": "post",
        "lang": "Python",
        "domain": [],
        "api_description": "Additional methods that allow you to manage payment details stored for recurring payments. For more information, refer to [Recurring payments](https://docs.adyen.com/developers/features/recurring-payments).",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to know how to obtain a shopper's stored payment information using the Adyen Recurring Service API. Could you please help me retrieve the available details, including the recurring detail ID and a summary of the payment method, for charging the shopper in the future?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to know how to obtain a shopper's stored payment information using the Adyen Recurring Service API. Could you please help me retrieve the available details, including the recurring detail ID and a summary of the payment method, for charging the shopper in the future?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4847007272448948
            },
            {
                "idx": 2,
                "candidate": "I'd like to request the Adyen Recurring Service to provide me with the stored payment details for a specific shopper. These details will be presented to the shopper for their reference during the checkout process. If the shopper has any previously saved payment methods, please return their relevant information including the recurring detail ID, which can be used for charging.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to request the Adyen Recurring Service to provide me with the stored payment details for a specific shopper. These details will be presented to the shopper for their reference during the checkout process. If the shopper has any previously saved payment methods, please return their relevant information including the recurring detail ID, which can be used for charging.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4673107334864132
            },
            {
                "idx": 3,
                "candidate": "I'd like to request the stored payment details for a specific shopper using the Adyen Recurring Service API. If any details are available, I'd like to receive a summary of the payment detail that I can present to the shopper for authorization during a transaction.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to request the stored payment details for a specific shopper using the Adyen Recurring Service API. If any details are available, I'd like to receive a summary of the payment detail that I can present to the shopper for authorization during a transaction.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4505886150188659
            },
            {
                "idx": 4,
                "candidate": "I want to view the saved payment information for a specific shopper using the Adyen Recurring Service. Could you please help me retrieve that information, along with a summary of the payment detail, for successful transactions in the future?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to view the saved payment information for a specific shopper using the Adyen Recurring Service. Could you please help me retrieve that information, along with a summary of the payment detail, for successful transactions in the future?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5264944638200393
            },
            {
                "idx": 5,
                "candidate": "How do I fetch the previously saved payment information for a specific shopper using the Adyen Recurring Service? This data will allow me to make charging that particular shopper more efficient, as I can use the recurring detail ID in my regular authorization request. Can you help me retrieve this information?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nHow do I fetch the previously saved payment information for a specific shopper using the Adyen Recurring Service? This data will allow me to make charging that particular shopper more efficient, as I can use the recurring detail ID in my regular authorization request. Can you help me retrieve this information?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4525386612179429
            }
        ],
        "instruction_prompt": "Your task is to create a user query that effectively utilizes a specific API. The API's functionality, description, and name will be provided to you. Your query should be designed in a way that makes the best use of this API's unique capabilities. When crafting your query, focus on:\n\n1. **API Name Integration:** Clearly include the API's name in your query to ensure relevance.\n2. **Specificity:** Replace broad or vague terms with precise, concrete details relevant to the API's purpose.\n3. **Conciseness:** Keep your query as brief as possible while still fully conveying the needed information. Avoid unnecessary verbosity.\n4. **Excluding API Endpoint:** Do not include the API's endpoint in your query; focus only on the user's need and how the API fulfills it.\n\nCreate a query that a user might realistically use when interacting with the given API. Think about typical scenarios or problems that the API is designed to solve and formulate your query accordingly.\n\nExamples for practice:\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to disables stored payment details to stop charging a shopper with this particular recurring detail id with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n\nRemember, the goal is to demonstrate how a user would benefit from this specific API in a realistic scenario, using precise and clear language. Here is the actual task for you:\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\n",
        "best_instruction": {
            "idx": 3,
            "candidate": "I'd like to request the stored payment details for a specific shopper using the Adyen Recurring Service API. If any details are available, I'd like to receive a summary of the payment detail that I can present to the shopper for authorization during a transaction."
        }
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://pal-test.adyen.com/pal/servlet/Recurring/v18/listRecurringDetails\"\n\n\tpayload := strings.NewReader(\"{\\\"merchantAccount\\\":\\\"string\\\",\\\"recurring\\\":{\\\"contract\\\":\\\"ONECLICK\\\",\\\"recurringDetailName\\\":\\\"string\\\"},\\\"shopperReference\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Adyen Recurring Service",
        "api_provider": "adyen.com",
        "endpoint": "",
        "framework": "adyen.com",
        "functionality": "Retrieves stored payment details for a shopper.",
        "api_arguments": {},
        "description": "Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).",
        "path": "/listRecurringDetails",
        "method": "post",
        "lang": "go",
        "domain": [],
        "api_description": "Additional methods that allow you to manage payment details stored for recurring payments. For more information, refer to [Recurring payments](https://docs.adyen.com/developers/features/recurring-payments).",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "How can I get a list of the shopper's stored payment details using the Adyen Recurring Service API? These details will allow me to charge the shopper by using their recurring detail ID in a regular authorisation request. I would like to present the payment detail summary to the shopper for confirmation.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nHow can I get a list of the shopper's stored payment details using the Adyen Recurring Service API? These details will allow me to charge the shopper by using their recurring detail ID in a regular authorisation request. I would like to present the payment detail summary to the shopper for confirmation.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.42976902030073544
            },
            {
                "idx": 2,
                "candidate": "I'd like to get a list of the stored payment details for a specific shopper using the Adyen Recurring Service. This will provide me with any available details that can be used to authorize a new charge. The returned summary of the payment detail will help me present the relevant information to the shopper. Can you assist me with executing this query?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to get a list of the stored payment details for a specific shopper using the Adyen Recurring Service. This will provide me with any available details that can be used to authorize a new charge. The returned summary of the payment detail will help me present the relevant information to the shopper. Can you assist me with executing this query?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.420759691502018
            },
            {
                "idx": 3,
                "candidate": "I want to view the previously saved payment methods for a specific shopper using the Adyen Recurring Service. Could you help me retrieve this information?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to view the previously saved payment methods for a specific shopper using the Adyen Recurring Service. Could you help me retrieve this information?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.46401789212336486
            },
            {
                "idx": 4,
                "candidate": "I'd like to retrieve the stored payment information for a specific shopper using the Adyen Recurring Service API. This will provide me with the necessary details to process a regular payment authorization and charge the shopper accordingly. Can you help me execute this request?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to retrieve the stored payment information for a specific shopper using the Adyen Recurring Service API. This will provide me with the necessary details to process a regular payment authorization and charge the shopper accordingly. Can you help me execute this request?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4300478363014964
            },
            {
                "idx": 5,
                "candidate": "I'd like to get the stored payment details for a specific shopper with the Adyen Recurring Service. This will help me determine which payment method is on file for this customer and present them with the relevant information for a transaction. Please guide me on how to retrieve these details.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to get the stored payment details for a specific shopper with the Adyen Recurring Service. This will help me determine which payment method is on file for this customer and present them with the relevant information for a transaction. Please guide me on how to retrieve these details.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4529803406192521
            }
        ],
        "instruction_prompt": "Your task is to create a user query that effectively utilizes a specific API. The API's functionality, description, and name will be provided to you. Your query should be designed in a way that makes the best use of this API's unique capabilities. When crafting your query, focus on:\n\n1. **API Name Integration:** Clearly include the API's name in your query to ensure relevance.\n2. **Specificity:** Replace broad or vague terms with precise, concrete details relevant to the API's purpose.\n3. **Conciseness:** Keep your query as brief as possible while still fully conveying the needed information. Avoid unnecessary verbosity.\n4. **Excluding API Endpoint:** Do not include the API's endpoint in your query; focus only on the user's need and how the API fulfills it.\n\nCreate a query that a user might realistically use when interacting with the given API. Think about typical scenarios or problems that the API is designed to solve and formulate your query accordingly.\n\nExamples for practice:\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to disables stored payment details to stop charging a shopper with this particular recurring detail id with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n\nRemember, the goal is to demonstrate how a user would benefit from this specific API in a realistic scenario, using precise and clear language. Here is the actual task for you:\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\n",
        "best_instruction": {
            "idx": 2,
            "candidate": "I'd like to get a list of the stored payment details for a specific shopper using the Adyen Recurring Service. This will provide me with any available details that can be used to authorize a new charge. The returned summary of the payment detail will help me present the relevant information to the shopper. Can you assist me with executing this query?"
        }
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://pal-test.adyen.com/pal/servlet/Recurring/v18/listRecurringDetails\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"merchantAccount\\\":\\\"string\\\",\\\"recurring\\\":{\\\"contract\\\":\\\"ONECLICK\\\",\\\"recurringDetailName\\\":\\\"string\\\"},\\\"shopperReference\\\":\\\"string\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Adyen Recurring Service",
        "api_provider": "adyen.com",
        "endpoint": "",
        "framework": "adyen.com",
        "functionality": "Retrieves stored payment details for a shopper.",
        "api_arguments": {},
        "description": "Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).",
        "path": "/listRecurringDetails",
        "method": "post",
        "lang": "Ruby",
        "domain": [],
        "api_description": "Additional methods that allow you to manage payment details stored for recurring payments. For more information, refer to [Recurring payments](https://docs.adyen.com/developers/features/recurring-payments).",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I want to view the previously saved payment details of a specific shopper for use in processing their recurring payments with the Adyen Recurring Service. Could you help me retrieve that information?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI want to view the previously saved payment details of a specific shopper for use in processing their recurring payments with the Adyen Recurring Service. Could you help me retrieve that information?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4634138020675582
            },
            {
                "idx": 2,
                "candidate": "I'd like to view the stored payment details for a specific shopper using the Adyen Recurring Service. If there is any available information, please provide a summary of the payment detail along with the recurring detail ID that can be used for charging the shopper.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to view the stored payment details for a specific shopper using the Adyen Recurring Service. If there is any available information, please provide a summary of the payment detail along with the recurring detail ID that can be used for charging the shopper.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4474329900468332
            },
            {
                "idx": 3,
                "candidate": "How do I obtain a shopper's previously stored payment details from Adyen Recurring Service for charging them in a future transaction?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nHow do I obtain a shopper's previously stored payment details from Adyen Recurring Service for charging them in a future transaction?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4370551199356855
            },
            {
                "idx": 4,
                "candidate": "I'd like to know how I can retrieve a shopper's previously saved payment details from the Adyen Recurring Service for charging purposes.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to know how I can retrieve a shopper's previously saved payment details from the Adyen Recurring Service for charging purposes.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.43614433772754085
            },
            {
                "idx": 5,
                "candidate": "As a helpful assistant, I'd be happy to help you retrieve the stored payment details for a specific shopper using the Adyen Recurring Service API. This functionality allows you to list the stored payment details for a shopper, if any are available. The recurring detail ID can then be utilized in a regular authorisation request to charge the shopper. By requesting the stored payment details, you can ensure that you have the most up-to-date and accurate information when processing the transaction. If you provide me with the shopper's details, I can help you craft the API call to retrieve the stored payment information.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nAs a helpful assistant, I'd be happy to help you retrieve the stored payment details for a specific shopper using the Adyen Recurring Service API. This functionality allows you to list the stored payment details for a shopper, if any are available. The recurring detail ID can then be utilized in a regular authorisation request to charge the shopper. By requesting the stored payment details, you can ensure that you have the most up-to-date and accurate information when processing the transaction. If you provide me with the shopper's details, I can help you craft the API call to retrieve the stored payment information.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.39981704094942616
            }
        ],
        "instruction_prompt": "Your task is to create a user query that effectively utilizes a specific API. The API's functionality, description, and name will be provided to you. Your query should be designed in a way that makes the best use of this API's unique capabilities. When crafting your query, focus on:\n\n1. **API Name Integration:** Clearly include the API's name in your query to ensure relevance.\n2. **Specificity:** Replace broad or vague terms with precise, concrete details relevant to the API's purpose.\n3. **Conciseness:** Keep your query as brief as possible while still fully conveying the needed information. Avoid unnecessary verbosity.\n4. **Excluding API Endpoint:** Do not include the API's endpoint in your query; focus only on the user's need and how the API fulfills it.\n\nCreate a query that a user might realistically use when interacting with the given API. Think about typical scenarios or problems that the API is designed to solve and formulate your query accordingly.\n\nExamples for practice:\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to disables stored payment details to stop charging a shopper with this particular recurring detail id with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n\nRemember, the goal is to demonstrate how a user would benefit from this specific API in a realistic scenario, using precise and clear language. Here is the actual task for you:\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\n",
        "best_instruction": {
            "idx": 5,
            "candidate": "As a helpful assistant, I'd be happy to help you retrieve the stored payment details for a specific shopper using the Adyen Recurring Service API. This functionality allows you to list the stored payment details for a shopper, if any are available. The recurring detail ID can then be utilized in a regular authorisation request to charge the shopper. By requesting the stored payment details, you can ensure that you have the most up-to-date and accurate information when processing the transaction. If you provide me with the shopper's details, I can help you craft the API call to retrieve the stored payment information."
        }
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://pal-test.adyen.com/pal/servlet/Recurring/v18/listRecurringDetails\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"merchantAccount\\\":\\\"string\\\",\\\"recurring\\\":{\\\"contract\\\":\\\"ONECLICK\\\",\\\"recurringDetailName\\\":\\\"string\\\"},\\\"shopperReference\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Adyen Recurring Service",
        "api_provider": "adyen.com",
        "endpoint": "",
        "framework": "adyen.com",
        "functionality": "Retrieves stored payment details for a shopper.",
        "api_arguments": {},
        "description": "Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).",
        "path": "/listRecurringDetails",
        "method": "post",
        "lang": "PHP",
        "domain": [],
        "api_description": "Additional methods that allow you to manage payment details stored for recurring payments. For more information, refer to [Recurring payments](https://docs.adyen.com/developers/features/recurring-payments).",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to check if there are any previously stored payment details for a specific shopper in the Adyen Recurring Service. If there are, I would like to retrieve a summary of the payment detail along with the recurring detail ID, so I can use it to process a new charge. Can you help me with that?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to check if there are any previously stored payment details for a specific shopper in the Adyen Recurring Service. If there are, I would like to retrieve a summary of the payment detail along with the recurring detail ID, so I can use it to process a new charge. Can you help me with that?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.49019654415595854
            },
            {
                "idx": 2,
                "candidate": "To view the previously saved payment details of a specific shopper and obtain a summary of the payment method for charging them, please utilize the Adyen Recurring Service's \"Retrieve stored details\" functionality. I would appreciate your assistance in implementing this API call.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nTo view the previously saved payment details of a specific shopper and obtain a summary of the payment method for charging them, please utilize the Adyen Recurring Service's \"Retrieve stored details\" functionality. I would appreciate your assistance in implementing this API call.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.44340877185845456
            },
            {
                "idx": 3,
                "candidate": "In what way can I obtain the previously saved payment information for a specific shopper using the Adyen Recurring Service? This information will allow me to process charges efficiently and accurately, as I will have the necessary detail ID to include in a regular authorization request.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nIn what way can I obtain the previously saved payment information for a specific shopper using the Adyen Recurring Service? This information will allow me to process charges efficiently and accurately, as I will have the necessary detail ID to include in a regular authorization request.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.43911496911690107
            },
            {
                "idx": 4,
                "candidate": "How do I get a list of the saved payment methods for a specific shopper with Adyen Recurring Service? These methods can be utilized to charge the customer for recurring payments. Please provide the necessary details for this request.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nHow do I get a list of the saved payment methods for a specific shopper with Adyen Recurring Service? These methods can be utilized to charge the customer for recurring payments. Please provide the necessary details for this request.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5297090912280065
            },
            {
                "idx": 5,
                "candidate": "How do I fetch a shopper's saved payment information, if any, for use in making a new charge with the Adyen Recurring Service?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nHow do I fetch a shopper's saved payment information, if any, for use in making a new charge with the Adyen Recurring Service?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.44302802752699705
            }
        ],
        "instruction_prompt": "Your task is to create a user query that effectively utilizes a specific API. The API's functionality, description, and name will be provided to you. Your query should be designed in a way that makes the best use of this API's unique capabilities. When crafting your query, focus on:\n\n1. **API Name Integration:** Clearly include the API's name in your query to ensure relevance.\n2. **Specificity:** Replace broad or vague terms with precise, concrete details relevant to the API's purpose.\n3. **Conciseness:** Keep your query as brief as possible while still fully conveying the needed information. Avoid unnecessary verbosity.\n4. **Excluding API Endpoint:** Do not include the API's endpoint in your query; focus only on the user's need and how the API fulfills it.\n\nCreate a query that a user might realistically use when interacting with the given API. Think about typical scenarios or problems that the API is designed to solve and formulate your query accordingly.\n\nExamples for practice:\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to disables stored payment details to stop charging a shopper with this particular recurring detail id with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n\nRemember, the goal is to demonstrate how a user would benefit from this specific API in a realistic scenario, using precise and clear language. Here is the actual task for you:\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\n",
        "best_instruction": {
            "idx": 3,
            "candidate": "In what way can I obtain the previously saved payment information for a specific shopper using the Adyen Recurring Service? This information will allow me to process charges efficiently and accurately, as I will have the necessary detail ID to include in a regular authorization request."
        }
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\"content-type\": \"application/json\"]\nlet parameters = [\n  \"merchantAccount\": \"string\",\n  \"recurring\": [\n    \"contract\": \"ONECLICK\",\n    \"recurringDetailName\": \"string\"\n  ],\n  \"shopperReference\": \"string\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://pal-test.adyen.com/pal/servlet/Recurring/v18/listRecurringDetails\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Adyen Recurring Service",
        "api_provider": "adyen.com",
        "endpoint": "",
        "framework": "adyen.com",
        "functionality": "Retrieves stored payment details for a shopper.",
        "api_arguments": {},
        "description": "Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).",
        "path": "/listRecurringDetails",
        "method": "post",
        "lang": "swift",
        "domain": [],
        "api_description": "Additional methods that allow you to manage payment details stored for recurring payments. For more information, refer to [Recurring payments](https://docs.adyen.com/developers/features/recurring-payments).",
        "api_license": "",
        "instruction_candidates": [
            {
                "idx": 1,
                "candidate": "I'd like to know how to retrieve the stored payment details for a specific shopper using the Adyen Recurring Service API. This information will be presented to the shopper before processing a new transaction.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nI'd like to know how to retrieve the stored payment details for a specific shopper using the Adyen Recurring Service API. This information will be presented to the shopper before processing a new transaction.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.4637365519833654
            },
            {
                "idx": 2,
                "candidate": "\"Help me obtain a shopper's previously saved payment details using the Adyen Recurring Service API.\"",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\n\"Help me obtain a shopper's previously saved payment details using the Adyen Recurring Service API.\"\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.42818257848006486
            },
            {
                "idx": 3,
                "candidate": "How do I effectively use the Adyen Recurring Service API to present a shopper with their previously stored payment details for consideration during a transaction?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nHow do I effectively use the Adyen Recurring Service API to present a shopper with their previously stored payment details for consideration during a transaction?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.5789203634483783
            },
            {
                "idx": 4,
                "candidate": "How do I obtain a shopper's previously stored payment details from the Adyen Recurring Service to facilitate a charge and present the summary to them?",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nHow do I obtain a shopper's previously stored payment details from the Adyen Recurring Service to facilitate a charge and present the summary to them?\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.42738034960801213
            },
            {
                "idx": 5,
                "candidate": "How can I get the stored payment details for a shopper from the Adyen Recurring Service? This information will allow me to charge the shopper using a recurring detail ID, and I would like a summary of the payment detail for presentation purposes.",
                "input_text": "Functionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "gen_tokens_mean": 0.0,
                "back_trans_input": "Your task involves a reverse-engineering process where you will analyze a user query to infer specific details about an API endpoint. Based on the given user query, you are expected to:\n\n1. **Identify the Endpoint's Identifier:** Derive the endpoint identifier that aligns with the functionality implied by the user query.\n2. **Determine Endpoint Functionality:** Interpret the user query to understand and describe the functionality of the endpoint.\n3. **Describe the Endpoint:** Provide a detailed description of the endpoint based on the needs and context presented in the user query.\n4. **Specify the API Name:** Identify and state the name of the API to which this endpoint belongs, as suggested by the user query.\n\nYour response should clearly articulate these four elements (identifier, functionality, description, API name) in a manner that reflects an accurate understanding of the user query. Consider the query as a real-world scenario or problem that the endpoint is designed to address.\n\nExamples for practice:\n\n###Input:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to know how to disables stored payment details with the Adyen Recurring Service.\n###Output:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n###Input:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n\n\nThe goal is to showcase your ability to connect a user's needs with the appropriate API endpoint, demonstrating an understanding of how the endpoint’s features align with user requirements. Your response should be precise, insightful, and reflective of the query's implications.\nHere is the actual task for you:\n\n###Input:\nHow can I get the stored payment details for a shopper from the Adyen Recurring Service? This information will allow me to charge the shopper using a recurring detail ID, and I would like a summary of the payment detail for presentation purposes.\n###Output:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service",
                "back_trans_gen_text": "empty",
                "back_trans_input_tokens_mean": -0.39790060156554247
            }
        ],
        "instruction_prompt": "Your task is to create a user query that effectively utilizes a specific API. The API's functionality, description, and name will be provided to you. Your query should be designed in a way that makes the best use of this API's unique capabilities. When crafting your query, focus on:\n\n1. **API Name Integration:** Clearly include the API's name in your query to ensure relevance.\n2. **Specificity:** Replace broad or vague terms with precise, concrete details relevant to the API's purpose.\n3. **Conciseness:** Keep your query as brief as possible while still fully conveying the needed information. Avoid unnecessary verbosity.\n4. **Excluding API Endpoint:** Do not include the API's endpoint in your query; focus only on the user's need and how the API fulfills it.\n\nCreate a query that a user might realistically use when interacting with the given API. Think about typical scenarios or problems that the API is designed to solve and formulate your query accordingly.\n\nExamples for practice:\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to lists the stored payment details for a shopper, if there are any available with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Disables stored payment details.\nDescription: Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\nFor more information, refer to [Disable stored details](https://docs.adyen.com/developers/features/recurring-payments/disable-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nI need to disables stored payment details to stop charging a shopper with this particular recurring detail id with the Adyen Recurring Service. Please help me with that.\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\nPlease tell me how to retrieves stored payment details for a shopper with the Adyen Recurring Service.\n\nRemember, the goal is to demonstrate how a user would benefit from this specific API in a realistic scenario, using precise and clear language. Here is the actual task for you:\n\n###Input:\nFunctionality: Retrieves stored payment details for a shopper.\nDescription: Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\nFor more information, refer to [Retrieve stored details](https://docs.adyen.com/developers/features/recurring-payments/retrieve-stored-details).\nEndpoint: \nAPI: Adyen Recurring Service\n###Output:\n",
        "best_instruction": {
            "idx": 5,
            "candidate": "How can I get the stored payment details for a shopper from the Adyen Recurring Service? This information will allow me to charge the shopper using a recurring detail ID, and I would like a summary of the payment detail for presentation purposes."
        }
    }
]