[
    {
        "api_call": "curl --request GET \\\n  --url 'https://rest.ably.io/channels?format=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&prefix=SOME_STRING_VALUE&by=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfAllChannels",
        "framework": "ably.io",
        "functionality": "Enumerate all active channels of the application",
        "api_arguments": {},
        "description": "Enumerate all active channels of the application",
        "path": "/channels",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/channels?format=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&prefix=SOME_STRING_VALUE&by=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfAllChannels",
        "framework": "ably.io",
        "functionality": "Enumerate all active channels of the application",
        "api_arguments": {},
        "description": "Enumerate all active channels of the application",
        "path": "/channels",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://rest.ably.io/channels',\n  qs: {\n    format: 'SOME_STRING_VALUE',\n    limit: 'SOME_INTEGER_VALUE',\n    prefix: 'SOME_STRING_VALUE',\n    by: 'SOME_STRING_VALUE'\n  },\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfAllChannels",
        "framework": "ably.io",
        "functionality": "Enumerate all active channels of the application",
        "api_arguments": {},
        "description": "Enumerate all active channels of the application",
        "path": "/channels",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"GET\", \"/channels?format=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&prefix=SOME_STRING_VALUE&by=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfAllChannels",
        "framework": "ably.io",
        "functionality": "Enumerate all active channels of the application",
        "api_arguments": {},
        "description": "Enumerate all active channels of the application",
        "path": "/channels",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/channels?format=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&prefix=SOME_STRING_VALUE&by=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfAllChannels",
        "framework": "ably.io",
        "functionality": "Enumerate all active channels of the application",
        "api_arguments": {},
        "description": "Enumerate all active channels of the application",
        "path": "/channels",
        "method": "get",
        "lang": "go",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/channels?format=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&prefix=SOME_STRING_VALUE&by=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfAllChannels",
        "framework": "ably.io",
        "functionality": "Enumerate all active channels of the application",
        "api_arguments": {},
        "description": "Enumerate all active channels of the application",
        "path": "/channels",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/channels?format=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&prefix=SOME_STRING_VALUE&by=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfAllChannels",
        "framework": "ably.io",
        "functionality": "Enumerate all active channels of the application",
        "api_arguments": {},
        "description": "Enumerate all active channels of the application",
        "path": "/channels",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/channels?format=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&prefix=SOME_STRING_VALUE&by=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfAllChannels",
        "framework": "ably.io",
        "functionality": "Enumerate all active channels of the application",
        "api_arguments": {},
        "description": "Enumerate all active channels of the application",
        "path": "/channels",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/channels?format=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&prefix=SOME_STRING_VALUE&by=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfAllChannels",
        "framework": "ably.io",
        "functionality": "Enumerate all active channels of the application",
        "api_arguments": {},
        "description": "Enumerate all active channels of the application",
        "path": "/channels",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://rest.ably.io/channels?format=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&prefix=SOME_STRING_VALUE&by=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfAllChannels",
        "framework": "ably.io",
        "functionality": "Enumerate all active channels of the application",
        "api_arguments": {},
        "description": "Enumerate all active channels of the application",
        "path": "/channels",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url 'https://rest.ably.io/channels/%7Bchannel_id%7D?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfChannel",
        "framework": "ably.io",
        "functionality": "Get metadata of a channel",
        "api_arguments": {},
        "description": "Get metadata of a channel",
        "path": "/channels/{channel_id}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/channels/%7Bchannel_id%7D?format=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfChannel",
        "framework": "ably.io",
        "functionality": "Get metadata of a channel",
        "api_arguments": {},
        "description": "Get metadata of a channel",
        "path": "/channels/{channel_id}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://rest.ably.io/channels/%7Bchannel_id%7D',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfChannel",
        "framework": "ably.io",
        "functionality": "Get metadata of a channel",
        "api_arguments": {},
        "description": "Get metadata of a channel",
        "path": "/channels/{channel_id}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"GET\", \"/channels/%7Bchannel_id%7D?format=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfChannel",
        "framework": "ably.io",
        "functionality": "Get metadata of a channel",
        "api_arguments": {},
        "description": "Get metadata of a channel",
        "path": "/channels/{channel_id}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/channels/%7Bchannel_id%7D?format=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfChannel",
        "framework": "ably.io",
        "functionality": "Get metadata of a channel",
        "api_arguments": {},
        "description": "Get metadata of a channel",
        "path": "/channels/{channel_id}",
        "method": "get",
        "lang": "go",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/channels/%7Bchannel_id%7D?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfChannel",
        "framework": "ably.io",
        "functionality": "Get metadata of a channel",
        "api_arguments": {},
        "description": "Get metadata of a channel",
        "path": "/channels/{channel_id}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/channels/%7Bchannel_id%7D?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfChannel",
        "framework": "ably.io",
        "functionality": "Get metadata of a channel",
        "api_arguments": {},
        "description": "Get metadata of a channel",
        "path": "/channels/{channel_id}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/channels/%7Bchannel_id%7D?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfChannel",
        "framework": "ably.io",
        "functionality": "Get metadata of a channel",
        "api_arguments": {},
        "description": "Get metadata of a channel",
        "path": "/channels/{channel_id}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/channels/%7Bchannel_id%7D?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfChannel",
        "framework": "ably.io",
        "functionality": "Get metadata of a channel",
        "api_arguments": {},
        "description": "Get metadata of a channel",
        "path": "/channels/{channel_id}",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://rest.ably.io/channels/%7Bchannel_id%7D?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMetadataOfChannel",
        "framework": "ably.io",
        "functionality": "Get metadata of a channel",
        "api_arguments": {},
        "description": "Get metadata of a channel",
        "path": "/channels/{channel_id}",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url 'https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMessagesByChannel",
        "framework": "ably.io",
        "functionality": "Get message history for a channel",
        "api_arguments": {},
        "description": "Get message history for a channel",
        "path": "/channels/{channel_id}/messages",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMessagesByChannel",
        "framework": "ably.io",
        "functionality": "Get message history for a channel",
        "api_arguments": {},
        "description": "Get message history for a channel",
        "path": "/channels/{channel_id}/messages",
        "method": "get",
        "lang": "Java",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://rest.ably.io/channels/%7Bchannel_id%7D/messages',\n  qs: {\n    format: 'SOME_STRING_VALUE',\n    start: 'SOME_STRING_VALUE',\n    limit: 'SOME_INTEGER_VALUE',\n    end: 'SOME_STRING_VALUE',\n    direction: 'SOME_STRING_VALUE'\n  },\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMessagesByChannel",
        "framework": "ably.io",
        "functionality": "Get message history for a channel",
        "api_arguments": {},
        "description": "Get message history for a channel",
        "path": "/channels/{channel_id}/messages",
        "method": "get",
        "lang": "Node",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"GET\", \"/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMessagesByChannel",
        "framework": "ably.io",
        "functionality": "Get message history for a channel",
        "api_arguments": {},
        "description": "Get message history for a channel",
        "path": "/channels/{channel_id}/messages",
        "method": "get",
        "lang": "Python",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMessagesByChannel",
        "framework": "ably.io",
        "functionality": "Get message history for a channel",
        "api_arguments": {},
        "description": "Get message history for a channel",
        "path": "/channels/{channel_id}/messages",
        "method": "get",
        "lang": "go",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMessagesByChannel",
        "framework": "ably.io",
        "functionality": "Get message history for a channel",
        "api_arguments": {},
        "description": "Get message history for a channel",
        "path": "/channels/{channel_id}/messages",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMessagesByChannel",
        "framework": "ably.io",
        "functionality": "Get message history for a channel",
        "api_arguments": {},
        "description": "Get message history for a channel",
        "path": "/channels/{channel_id}/messages",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMessagesByChannel",
        "framework": "ably.io",
        "functionality": "Get message history for a channel",
        "api_arguments": {},
        "description": "Get message history for a channel",
        "path": "/channels/{channel_id}/messages",
        "method": "get",
        "lang": "swift",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMessagesByChannel",
        "framework": "ably.io",
        "functionality": "Get message history for a channel",
        "api_arguments": {},
        "description": "Get message history for a channel",
        "path": "/channels/{channel_id}/messages",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getMessagesByChannel",
        "framework": "ably.io",
        "functionality": "Get message history for a channel",
        "api_arguments": {},
        "description": "Get message history for a channel",
        "path": "/channels/{channel_id}/messages",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request POST \\\n  --url 'https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"clientId\":\"string\",\"connectionId\":\"string\",\"data\":\"string\",\"encoding\":\"string\",\"extras\":{\"push\":{\"apns\":{\"notification\":{\"body\":\"string\",\"collapseKey\":\"string\",\"icon\":\"string\",\"sound\":\"string\",\"title\":\"string\"}},\"data\":\"string\",\"fcm\":{\"notification\":{\"body\":\"string\",\"collapseKey\":\"string\",\"icon\":\"string\",\"sound\":\"string\",\"title\":\"string\"}},\"notification\":{\"body\":\"string\",\"collapseKey\":\"string\",\"icon\":\"string\",\"sound\":\"string\",\"title\":\"string\"},\"web\":{\"notification\":{\"body\":\"string\",\"collapseKey\":\"string\",\"icon\":\"string\",\"sound\":\"string\",\"title\":\"string\"}}}},\"name\":\"string\"}'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"clientId\\\":\\\"string\\\",\\\"connectionId\\\":\\\"string\\\",\\\"data\\\":\\\"string\\\",\\\"encoding\\\":\\\"string\\\",\\\"extras\\\":{\\\"push\\\":{\\\"apns\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"data\\\":\\\"string\\\",\\\"fcm\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"},\\\"web\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}}}},\\\"name\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE\")\n  .post(body)\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://rest.ably.io/channels/%7Bchannel_id%7D/messages',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH',\n    'content-type': 'application/json'\n  },\n  body: {\n    clientId: 'string',\n    connectionId: 'string',\n    data: 'string',\n    encoding: 'string',\n    extras: {\n      push: {\n        apns: {\n          notification: {\n            body: 'string',\n            collapseKey: 'string',\n            icon: 'string',\n            sound: 'string',\n            title: 'string'\n          }\n        },\n        data: 'string',\n        fcm: {\n          notification: {\n            body: 'string',\n            collapseKey: 'string',\n            icon: 'string',\n            sound: 'string',\n            title: 'string'\n          }\n        },\n        notification: {\n          body: 'string',\n          collapseKey: 'string',\n          icon: 'string',\n          sound: 'string',\n          title: 'string'\n        },\n        web: {\n          notification: {\n            body: 'string',\n            collapseKey: 'string',\n            icon: 'string',\n            sound: 'string',\n            title: 'string'\n          }\n        }\n      }\n    },\n    name: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\npayload = \"{\\\"clientId\\\":\\\"string\\\",\\\"connectionId\\\":\\\"string\\\",\\\"data\\\":\\\"string\\\",\\\"encoding\\\":\\\"string\\\",\\\"extras\\\":{\\\"push\\\":{\\\"apns\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"data\\\":\\\"string\\\",\\\"fcm\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"},\\\"web\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}}}},\\\"name\\\":\\\"string\\\"}\"\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE\"\n\n\tpayload := strings.NewReader(\"{\\\"clientId\\\":\\\"string\\\",\\\"connectionId\\\":\\\"string\\\",\\\"data\\\":\\\"string\\\",\\\"encoding\\\":\\\"string\\\",\\\"extras\\\":{\\\"push\\\":{\\\"apns\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"data\\\":\\\"string\\\",\\\"fcm\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"},\\\"web\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}}}},\\\"name\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "go",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"clientId\\\":\\\"string\\\",\\\"connectionId\\\":\\\"string\\\",\\\"data\\\":\\\"string\\\",\\\"encoding\\\":\\\"string\\\",\\\"extras\\\":{\\\"push\\\":{\\\"apns\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"data\\\":\\\"string\\\",\\\"fcm\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"},\\\"web\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}}}},\\\"name\\\":\\\"string\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"clientId\\\":\\\"string\\\",\\\"connectionId\\\":\\\"string\\\",\\\"data\\\":\\\"string\\\",\\\"encoding\\\":\\\"string\\\",\\\"extras\\\":{\\\"push\\\":{\\\"apns\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"data\\\":\\\"string\\\",\\\"fcm\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"},\\\"web\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}}}},\\\"name\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"clientId\": \"string\",\n  \"connectionId\": \"string\",\n  \"data\": \"string\",\n  \"encoding\": \"string\",\n  \"extras\": [\"push\": [\n      \"apns\": [\"notification\": [\n          \"body\": \"string\",\n          \"collapseKey\": \"string\",\n          \"icon\": \"string\",\n          \"sound\": \"string\",\n          \"title\": \"string\"\n        ]],\n      \"data\": \"string\",\n      \"fcm\": [\"notification\": [\n          \"body\": \"string\",\n          \"collapseKey\": \"string\",\n          \"icon\": \"string\",\n          \"sound\": \"string\",\n          \"title\": \"string\"\n        ]],\n      \"notification\": [\n        \"body\": \"string\",\n        \"collapseKey\": \"string\",\n        \"icon\": \"string\",\n        \"sound\": \"string\",\n        \"title\": \"string\"\n      ],\n      \"web\": [\"notification\": [\n          \"body\": \"string\",\n          \"collapseKey\": \"string\",\n          \"icon\": \"string\",\n          \"sound\": \"string\",\n          \"title\": \"string\"\n        ]]\n    ]],\n  \"name\": \"string\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\nheaders = curl_slist_append(headers, \"content-type: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"clientId\\\":\\\"string\\\",\\\"connectionId\\\":\\\"string\\\",\\\"data\\\":\\\"string\\\",\\\"encoding\\\":\\\"string\\\",\\\"extras\\\":{\\\"push\\\":{\\\"apns\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"data\\\":\\\"string\\\",\\\"fcm\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"},\\\"web\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}}}},\\\"name\\\":\\\"string\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "libcurl",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = JSON.stringify({\n  \"clientId\": \"string\",\n  \"connectionId\": \"string\",\n  \"data\": \"string\",\n  \"encoding\": \"string\",\n  \"extras\": {\n    \"push\": {\n      \"apns\": {\n        \"notification\": {\n          \"body\": \"string\",\n          \"collapseKey\": \"string\",\n          \"icon\": \"string\",\n          \"sound\": \"string\",\n          \"title\": \"string\"\n        }\n      },\n      \"data\": \"string\",\n      \"fcm\": {\n        \"notification\": {\n          \"body\": \"string\",\n          \"collapseKey\": \"string\",\n          \"icon\": \"string\",\n          \"sound\": \"string\",\n          \"title\": \"string\"\n        }\n      },\n      \"notification\": {\n        \"body\": \"string\",\n        \"collapseKey\": \"string\",\n        \"icon\": \"string\",\n        \"sound\": \"string\",\n        \"title\": \"string\"\n      },\n      \"web\": {\n        \"notification\": {\n          \"body\": \"string\",\n          \"collapseKey\": \"string\",\n          \"icon\": \"string\",\n          \"sound\": \"string\",\n          \"title\": \"string\"\n        }\n      }\n    }\n  },\n  \"name\": \"string\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "javascript xhr",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request POST \\\n  --url 'https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --data clientId=string \\\n  --data connectionId=string \\\n  --data data=string \\\n  --data encoding=string \\\n  --data 'extras=%5Bobject+Object%5D' \\\n  --data name=string",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/x-www-form-urlencoded\");\nRequestBody body = RequestBody.create(mediaType, \"clientId=string&connectionId=string&data=string&encoding=string&extras=%255Bobject%2BObject%255D&name=string\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE\")\n  .post(body)\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://rest.ably.io/channels/%7Bchannel_id%7D/messages',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH',\n    'content-type': 'application/x-www-form-urlencoded'\n  },\n  form: {\n    clientId: 'string',\n    connectionId: 'string',\n    data: 'string',\n    encoding: 'string',\n    extras: '%5Bobject+Object%5D',\n    name: 'string'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\npayload = \"clientId=string&connectionId=string&data=string&encoding=string&extras=%255Bobject%2BObject%255D&name=string\"\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"POST\", \"/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE\"\n\n\tpayload := strings.NewReader(\"clientId=string&connectionId=string&data=string&encoding=string&extras=%255Bobject%2BObject%255D&name=string\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "go",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\nrequest.body = \"clientId=string&connectionId=string&data=string&encoding=string&extras=%255Bobject%2BObject%255D&name=string\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"clientId=string&connectionId=string&data=string&encoding=string&extras=%255Bobject%2BObject%255D&name=string\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet postData = NSMutableData(data: \"clientId=string\".data(using: String.Encoding.utf8)!)\npostData.append(\"&connectionId=string\".data(using: String.Encoding.utf8)!)\npostData.append(\"&data=string\".data(using: String.Encoding.utf8)!)\npostData.append(\"&encoding=string\".data(using: String.Encoding.utf8)!)\npostData.append(\"&extras=%5Bobject+Object%5D\".data(using: String.Encoding.utf8)!)\npostData.append(\"&name=string\".data(using: String.Encoding.utf8)!)\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"clientId=string&connectionId=string&data=string&encoding=string&extras=%255Bobject%2BObject%255D&name=string\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "libcurl",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = \"clientId=string&connectionId=string&data=string&encoding=string&extras=%255Bobject%2BObject%255D&name=string\";\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://rest.ably.io/channels/%7Bchannel_id%7D/messages?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishMessagesToChannel",
        "framework": "ably.io",
        "functionality": "Publish a message to a channel",
        "api_arguments": {},
        "description": "Publish a message to the specified channel",
        "path": "/channels/{channel_id}/messages",
        "method": "post",
        "lang": "javascript xhr",
        "domain": [
            "Publishing"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url 'https://rest.ably.io/channels/%7Bchannel_id%7D/presence?format=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&connectionId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/channels/%7Bchannel_id%7D/presence?format=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&connectionId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\")\n  .get()\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://rest.ably.io/channels/%7Bchannel_id%7D/presence',\n  qs: {\n    format: 'SOME_STRING_VALUE',\n    clientId: 'SOME_STRING_VALUE',\n    connectionId: 'SOME_STRING_VALUE',\n    limit: 'SOME_INTEGER_VALUE'\n  },\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"GET\", \"/channels/%7Bchannel_id%7D/presence?format=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&connectionId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/channels/%7Bchannel_id%7D/presence?format=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&connectionId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence",
        "method": "get",
        "lang": "go",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/channels/%7Bchannel_id%7D/presence?format=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&connectionId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/channels/%7Bchannel_id%7D/presence?format=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&connectionId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/channels/%7Bchannel_id%7D/presence?format=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&connectionId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/channels/%7Bchannel_id%7D/presence?format=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&connectionId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://rest.ably.io/channels/%7Bchannel_id%7D/presence?format=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&connectionId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Status"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url 'https://rest.ably.io/channels/%7Bchannel_id%7D/presence/history?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceHistoryOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence history of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence/history",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/channels/%7Bchannel_id%7D/presence/history?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceHistoryOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence history of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence/history",
        "method": "get",
        "lang": "Java",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://rest.ably.io/channels/%7Bchannel_id%7D/presence/history',\n  qs: {\n    format: 'SOME_STRING_VALUE',\n    start: 'SOME_STRING_VALUE',\n    limit: 'SOME_INTEGER_VALUE',\n    end: 'SOME_STRING_VALUE',\n    direction: 'SOME_STRING_VALUE'\n  },\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceHistoryOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence history of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence/history",
        "method": "get",
        "lang": "Node",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"GET\", \"/channels/%7Bchannel_id%7D/presence/history?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceHistoryOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence history of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence/history",
        "method": "get",
        "lang": "Python",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/channels/%7Bchannel_id%7D/presence/history?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceHistoryOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence history of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence/history",
        "method": "get",
        "lang": "go",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/channels/%7Bchannel_id%7D/presence/history?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceHistoryOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence history of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence/history",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/channels/%7Bchannel_id%7D/presence/history?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceHistoryOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence history of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence/history",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/channels/%7Bchannel_id%7D/presence/history?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceHistoryOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence history of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence/history",
        "method": "get",
        "lang": "swift",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/channels/%7Bchannel_id%7D/presence/history?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceHistoryOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence history of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence/history",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://rest.ably.io/channels/%7Bchannel_id%7D/presence/history?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPresenceHistoryOfChannel",
        "framework": "ably.io",
        "functionality": "Get presence history of a channel",
        "api_arguments": {},
        "description": "Get presence on a channel",
        "path": "/channels/{channel_id}/presence/history",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "History"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request POST \\\n  --url 'https://rest.ably.io/keys/%7BkeyName%7D/requestToken?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"capability\":{\"channel1\":[\"publish\",\"subscribe\"]},\"clientId\":\"string\",\"keyName\":\"xVLyHw.LMJZxw\",\"nonce\":\"string\",\"timestamp\":0}'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "requestAccessToken",
        "framework": "ably.io",
        "functionality": "Request an access token",
        "api_arguments": {},
        "description": "This is the means by which clients obtain access tokens to use the service. You can see how to construct an Ably TokenRequest in the [Ably TokenRequest spec](https://www.ably.io/documentation/rest-api/token-request-spec) documentation, although we recommend you use an Ably SDK rather to create a TokenRequest, as the construction of a TokenRequest is complex. The resulting token response object contains the token properties as defined in Ably TokenRequest spec. Authentication is not required if using a Signed TokenRequest.",
        "path": "/keys/{keyName}/requestToken",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Authentication"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"capability\\\":{\\\"channel1\\\":[\\\"publish\\\",\\\"subscribe\\\"]},\\\"clientId\\\":\\\"string\\\",\\\"keyName\\\":\\\"xVLyHw.LMJZxw\\\",\\\"nonce\\\":\\\"string\\\",\\\"timestamp\\\":0}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/keys/%7BkeyName%7D/requestToken?format=SOME_STRING_VALUE\")\n  .post(body)\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "requestAccessToken",
        "framework": "ably.io",
        "functionality": "Request an access token",
        "api_arguments": {},
        "description": "This is the means by which clients obtain access tokens to use the service. You can see how to construct an Ably TokenRequest in the [Ably TokenRequest spec](https://www.ably.io/documentation/rest-api/token-request-spec) documentation, although we recommend you use an Ably SDK rather to create a TokenRequest, as the construction of a TokenRequest is complex. The resulting token response object contains the token properties as defined in Ably TokenRequest spec. Authentication is not required if using a Signed TokenRequest.",
        "path": "/keys/{keyName}/requestToken",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Authentication"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://rest.ably.io/keys/%7BkeyName%7D/requestToken',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH',\n    'content-type': 'application/json'\n  },\n  body: {\n    capability: {channel1: ['publish', 'subscribe']},\n    clientId: 'string',\n    keyName: 'xVLyHw.LMJZxw',\n    nonce: 'string',\n    timestamp: 0\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "requestAccessToken",
        "framework": "ably.io",
        "functionality": "Request an access token",
        "api_arguments": {},
        "description": "This is the means by which clients obtain access tokens to use the service. You can see how to construct an Ably TokenRequest in the [Ably TokenRequest spec](https://www.ably.io/documentation/rest-api/token-request-spec) documentation, although we recommend you use an Ably SDK rather to create a TokenRequest, as the construction of a TokenRequest is complex. The resulting token response object contains the token properties as defined in Ably TokenRequest spec. Authentication is not required if using a Signed TokenRequest.",
        "path": "/keys/{keyName}/requestToken",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Authentication"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\npayload = \"{\\\"capability\\\":{\\\"channel1\\\":[\\\"publish\\\",\\\"subscribe\\\"]},\\\"clientId\\\":\\\"string\\\",\\\"keyName\\\":\\\"xVLyHw.LMJZxw\\\",\\\"nonce\\\":\\\"string\\\",\\\"timestamp\\\":0}\"\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/keys/%7BkeyName%7D/requestToken?format=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "requestAccessToken",
        "framework": "ably.io",
        "functionality": "Request an access token",
        "api_arguments": {},
        "description": "This is the means by which clients obtain access tokens to use the service. You can see how to construct an Ably TokenRequest in the [Ably TokenRequest spec](https://www.ably.io/documentation/rest-api/token-request-spec) documentation, although we recommend you use an Ably SDK rather to create a TokenRequest, as the construction of a TokenRequest is complex. The resulting token response object contains the token properties as defined in Ably TokenRequest spec. Authentication is not required if using a Signed TokenRequest.",
        "path": "/keys/{keyName}/requestToken",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Authentication"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/keys/%7BkeyName%7D/requestToken?format=SOME_STRING_VALUE\"\n\n\tpayload := strings.NewReader(\"{\\\"capability\\\":{\\\"channel1\\\":[\\\"publish\\\",\\\"subscribe\\\"]},\\\"clientId\\\":\\\"string\\\",\\\"keyName\\\":\\\"xVLyHw.LMJZxw\\\",\\\"nonce\\\":\\\"string\\\",\\\"timestamp\\\":0}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "requestAccessToken",
        "framework": "ably.io",
        "functionality": "Request an access token",
        "api_arguments": {},
        "description": "This is the means by which clients obtain access tokens to use the service. You can see how to construct an Ably TokenRequest in the [Ably TokenRequest spec](https://www.ably.io/documentation/rest-api/token-request-spec) documentation, although we recommend you use an Ably SDK rather to create a TokenRequest, as the construction of a TokenRequest is complex. The resulting token response object contains the token properties as defined in Ably TokenRequest spec. Authentication is not required if using a Signed TokenRequest.",
        "path": "/keys/{keyName}/requestToken",
        "method": "post",
        "lang": "go",
        "domain": [
            "Authentication"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/keys/%7BkeyName%7D/requestToken?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"capability\\\":{\\\"channel1\\\":[\\\"publish\\\",\\\"subscribe\\\"]},\\\"clientId\\\":\\\"string\\\",\\\"keyName\\\":\\\"xVLyHw.LMJZxw\\\",\\\"nonce\\\":\\\"string\\\",\\\"timestamp\\\":0}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "requestAccessToken",
        "framework": "ably.io",
        "functionality": "Request an access token",
        "api_arguments": {},
        "description": "This is the means by which clients obtain access tokens to use the service. You can see how to construct an Ably TokenRequest in the [Ably TokenRequest spec](https://www.ably.io/documentation/rest-api/token-request-spec) documentation, although we recommend you use an Ably SDK rather to create a TokenRequest, as the construction of a TokenRequest is complex. The resulting token response object contains the token properties as defined in Ably TokenRequest spec. Authentication is not required if using a Signed TokenRequest.",
        "path": "/keys/{keyName}/requestToken",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Authentication"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/keys/%7BkeyName%7D/requestToken?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"capability\\\":{\\\"channel1\\\":[\\\"publish\\\",\\\"subscribe\\\"]},\\\"clientId\\\":\\\"string\\\",\\\"keyName\\\":\\\"xVLyHw.LMJZxw\\\",\\\"nonce\\\":\\\"string\\\",\\\"timestamp\\\":0}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "requestAccessToken",
        "framework": "ably.io",
        "functionality": "Request an access token",
        "api_arguments": {},
        "description": "This is the means by which clients obtain access tokens to use the service. You can see how to construct an Ably TokenRequest in the [Ably TokenRequest spec](https://www.ably.io/documentation/rest-api/token-request-spec) documentation, although we recommend you use an Ably SDK rather to create a TokenRequest, as the construction of a TokenRequest is complex. The resulting token response object contains the token properties as defined in Ably TokenRequest spec. Authentication is not required if using a Signed TokenRequest.",
        "path": "/keys/{keyName}/requestToken",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Authentication"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"capability\": [\"channel1\": [\"publish\", \"subscribe\"]],\n  \"clientId\": \"string\",\n  \"keyName\": \"xVLyHw.LMJZxw\",\n  \"nonce\": \"string\",\n  \"timestamp\": 0\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/keys/%7BkeyName%7D/requestToken?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "requestAccessToken",
        "framework": "ably.io",
        "functionality": "Request an access token",
        "api_arguments": {},
        "description": "This is the means by which clients obtain access tokens to use the service. You can see how to construct an Ably TokenRequest in the [Ably TokenRequest spec](https://www.ably.io/documentation/rest-api/token-request-spec) documentation, although we recommend you use an Ably SDK rather to create a TokenRequest, as the construction of a TokenRequest is complex. The resulting token response object contains the token properties as defined in Ably TokenRequest spec. Authentication is not required if using a Signed TokenRequest.",
        "path": "/keys/{keyName}/requestToken",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Authentication"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/keys/%7BkeyName%7D/requestToken?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\nheaders = curl_slist_append(headers, \"content-type: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"capability\\\":{\\\"channel1\\\":[\\\"publish\\\",\\\"subscribe\\\"]},\\\"clientId\\\":\\\"string\\\",\\\"keyName\\\":\\\"xVLyHw.LMJZxw\\\",\\\"nonce\\\":\\\"string\\\",\\\"timestamp\\\":0}\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "requestAccessToken",
        "framework": "ably.io",
        "functionality": "Request an access token",
        "api_arguments": {},
        "description": "This is the means by which clients obtain access tokens to use the service. You can see how to construct an Ably TokenRequest in the [Ably TokenRequest spec](https://www.ably.io/documentation/rest-api/token-request-spec) documentation, although we recommend you use an Ably SDK rather to create a TokenRequest, as the construction of a TokenRequest is complex. The resulting token response object contains the token properties as defined in Ably TokenRequest spec. Authentication is not required if using a Signed TokenRequest.",
        "path": "/keys/{keyName}/requestToken",
        "method": "post",
        "lang": "libcurl",
        "domain": [
            "Authentication"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = JSON.stringify({\n  \"capability\": {\n    \"channel1\": [\n      \"publish\",\n      \"subscribe\"\n    ]\n  },\n  \"clientId\": \"string\",\n  \"keyName\": \"xVLyHw.LMJZxw\",\n  \"nonce\": \"string\",\n  \"timestamp\": 0\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://rest.ably.io/keys/%7BkeyName%7D/requestToken?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "requestAccessToken",
        "framework": "ably.io",
        "functionality": "Request an access token",
        "api_arguments": {},
        "description": "This is the means by which clients obtain access tokens to use the service. You can see how to construct an Ably TokenRequest in the [Ably TokenRequest spec](https://www.ably.io/documentation/rest-api/token-request-spec) documentation, although we recommend you use an Ably SDK rather to create a TokenRequest, as the construction of a TokenRequest is complex. The resulting token response object contains the token properties as defined in Ably TokenRequest spec. Authentication is not required if using a Signed TokenRequest.",
        "path": "/keys/{keyName}/requestToken",
        "method": "post",
        "lang": "javascript xhr",
        "domain": [
            "Authentication"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request DELETE \\\n  --url 'https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "deletePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Delete a registered device's update token",
        "api_arguments": {},
        "description": "Delete a device details object.",
        "path": "/push/channelSubscriptions",
        "method": "delete",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE\")\n  .delete(null)\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "deletePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Delete a registered device's update token",
        "api_arguments": {},
        "description": "Delete a device details object.",
        "path": "/push/channelSubscriptions",
        "method": "delete",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://rest.ably.io/push/channelSubscriptions',\n  qs: {\n    format: 'SOME_STRING_VALUE',\n    channel: 'SOME_STRING_VALUE',\n    deviceId: 'SOME_STRING_VALUE',\n    clientId: 'SOME_STRING_VALUE'\n  },\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "deletePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Delete a registered device's update token",
        "api_arguments": {},
        "description": "Delete a device details object.",
        "path": "/push/channelSubscriptions",
        "method": "delete",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"DELETE\", \"/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "deletePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Delete a registered device's update token",
        "api_arguments": {},
        "description": "Delete a device details object.",
        "path": "/push/channelSubscriptions",
        "method": "delete",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "deletePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Delete a registered device's update token",
        "api_arguments": {},
        "description": "Delete a device details object.",
        "path": "/push/channelSubscriptions",
        "method": "delete",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "deletePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Delete a registered device's update token",
        "api_arguments": {},
        "description": "Delete a device details object.",
        "path": "/push/channelSubscriptions",
        "method": "delete",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "deletePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Delete a registered device's update token",
        "api_arguments": {},
        "description": "Delete a device details object.",
        "path": "/push/channelSubscriptions",
        "method": "delete",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "deletePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Delete a registered device's update token",
        "api_arguments": {},
        "description": "Delete a device details object.",
        "path": "/push/channelSubscriptions",
        "method": "delete",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "deletePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Delete a registered device's update token",
        "api_arguments": {},
        "description": "Delete a device details object.",
        "path": "/push/channelSubscriptions",
        "method": "delete",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "deletePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Delete a registered device's update token",
        "api_arguments": {},
        "description": "Delete a device details object.",
        "path": "/push/channelSubscriptions",
        "method": "delete",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url 'https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushSubscriptionsOnChannels",
        "framework": "ably.io",
        "functionality": "List channel subscriptions",
        "api_arguments": {},
        "description": "Get a list of push notification subscriptions to channels.",
        "path": "/push/channelSubscriptions",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\")\n  .get()\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushSubscriptionsOnChannels",
        "framework": "ably.io",
        "functionality": "List channel subscriptions",
        "api_arguments": {},
        "description": "Get a list of push notification subscriptions to channels.",
        "path": "/push/channelSubscriptions",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://rest.ably.io/push/channelSubscriptions',\n  qs: {\n    format: 'SOME_STRING_VALUE',\n    channel: 'SOME_STRING_VALUE',\n    deviceId: 'SOME_STRING_VALUE',\n    clientId: 'SOME_STRING_VALUE',\n    limit: 'SOME_INTEGER_VALUE'\n  },\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushSubscriptionsOnChannels",
        "framework": "ably.io",
        "functionality": "List channel subscriptions",
        "api_arguments": {},
        "description": "Get a list of push notification subscriptions to channels.",
        "path": "/push/channelSubscriptions",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"GET\", \"/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushSubscriptionsOnChannels",
        "framework": "ably.io",
        "functionality": "List channel subscriptions",
        "api_arguments": {},
        "description": "Get a list of push notification subscriptions to channels.",
        "path": "/push/channelSubscriptions",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushSubscriptionsOnChannels",
        "framework": "ably.io",
        "functionality": "List channel subscriptions",
        "api_arguments": {},
        "description": "Get a list of push notification subscriptions to channels.",
        "path": "/push/channelSubscriptions",
        "method": "get",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushSubscriptionsOnChannels",
        "framework": "ably.io",
        "functionality": "List channel subscriptions",
        "api_arguments": {},
        "description": "Get a list of push notification subscriptions to channels.",
        "path": "/push/channelSubscriptions",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushSubscriptionsOnChannels",
        "framework": "ably.io",
        "functionality": "List channel subscriptions",
        "api_arguments": {},
        "description": "Get a list of push notification subscriptions to channels.",
        "path": "/push/channelSubscriptions",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushSubscriptionsOnChannels",
        "framework": "ably.io",
        "functionality": "List channel subscriptions",
        "api_arguments": {},
        "description": "Get a list of push notification subscriptions to channels.",
        "path": "/push/channelSubscriptions",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushSubscriptionsOnChannels",
        "framework": "ably.io",
        "functionality": "List channel subscriptions",
        "api_arguments": {},
        "description": "Get a list of push notification subscriptions to channels.",
        "path": "/push/channelSubscriptions",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE&channel=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushSubscriptionsOnChannels",
        "framework": "ably.io",
        "functionality": "List channel subscriptions",
        "api_arguments": {},
        "description": "Get a list of push notification subscriptions to channels.",
        "path": "/push/channelSubscriptions",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request POST \\\n  --url 'https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"channel\":\"string\",\"deviceId\":\"string\"}'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"channel\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE\")\n  .post(body)\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://rest.ably.io/push/channelSubscriptions',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH',\n    'content-type': 'application/json'\n  },\n  body: {channel: 'string', deviceId: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\npayload = \"{\\\"channel\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\"}\"\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/push/channelSubscriptions?format=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE\"\n\n\tpayload := strings.NewReader(\"{\\\"channel\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"channel\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"channel\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\"}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"channel\": \"string\",\n  \"deviceId\": \"string\"\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\nheaders = curl_slist_append(headers, \"content-type: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"channel\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = JSON.stringify({\n  \"channel\": \"string\",\n  \"deviceId\": \"string\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request POST \\\n  --url 'https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --data channel=string \\\n  --data deviceId=string",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/x-www-form-urlencoded\");\nRequestBody body = RequestBody.create(mediaType, \"channel=string&deviceId=string\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE\")\n  .post(body)\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://rest.ably.io/push/channelSubscriptions',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH',\n    'content-type': 'application/x-www-form-urlencoded'\n  },\n  form: {channel: 'string', deviceId: 'string'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\npayload = \"channel=string&deviceId=string\"\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"POST\", \"/push/channelSubscriptions?format=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE\"\n\n\tpayload := strings.NewReader(\"channel=string&deviceId=string\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\nrequest.body = \"channel=string&deviceId=string\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"channel=string&deviceId=string\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet postData = NSMutableData(data: \"channel=string\".data(using: String.Encoding.utf8)!)\npostData.append(\"&deviceId=string\".data(using: String.Encoding.utf8)!)\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"channel=string&deviceId=string\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = \"channel=string&deviceId=string\";\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://rest.ably.io/push/channelSubscriptions?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "subscribePushDeviceToChannel",
        "framework": "ably.io",
        "functionality": "Subscribe a device to a channel",
        "api_arguments": {},
        "description": "Subscribe either a single device or all devices associated with a client ID to receive push notifications from messages sent to a channel.",
        "path": "/push/channelSubscriptions",
        "method": "post",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url 'https://rest.ably.io/push/channels?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getChannelsWithPushSubscribers",
        "framework": "ably.io",
        "functionality": "List all channels with at least one subscribed device",
        "api_arguments": {},
        "description": "Returns a paginated response of channel names.",
        "path": "/push/channels",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/channels?format=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getChannelsWithPushSubscribers",
        "framework": "ably.io",
        "functionality": "List all channels with at least one subscribed device",
        "api_arguments": {},
        "description": "Returns a paginated response of channel names.",
        "path": "/push/channels",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://rest.ably.io/push/channels',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getChannelsWithPushSubscribers",
        "framework": "ably.io",
        "functionality": "List all channels with at least one subscribed device",
        "api_arguments": {},
        "description": "Returns a paginated response of channel names.",
        "path": "/push/channels",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"GET\", \"/push/channels?format=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getChannelsWithPushSubscribers",
        "framework": "ably.io",
        "functionality": "List all channels with at least one subscribed device",
        "api_arguments": {},
        "description": "Returns a paginated response of channel names.",
        "path": "/push/channels",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/channels?format=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getChannelsWithPushSubscribers",
        "framework": "ably.io",
        "functionality": "List all channels with at least one subscribed device",
        "api_arguments": {},
        "description": "Returns a paginated response of channel names.",
        "path": "/push/channels",
        "method": "get",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/channels?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getChannelsWithPushSubscribers",
        "framework": "ably.io",
        "functionality": "List all channels with at least one subscribed device",
        "api_arguments": {},
        "description": "Returns a paginated response of channel names.",
        "path": "/push/channels",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/channels?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getChannelsWithPushSubscribers",
        "framework": "ably.io",
        "functionality": "List all channels with at least one subscribed device",
        "api_arguments": {},
        "description": "Returns a paginated response of channel names.",
        "path": "/push/channels",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/channels?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getChannelsWithPushSubscribers",
        "framework": "ably.io",
        "functionality": "List all channels with at least one subscribed device",
        "api_arguments": {},
        "description": "Returns a paginated response of channel names.",
        "path": "/push/channels",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/channels?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getChannelsWithPushSubscribers",
        "framework": "ably.io",
        "functionality": "List all channels with at least one subscribed device",
        "api_arguments": {},
        "description": "Returns a paginated response of channel names.",
        "path": "/push/channels",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://rest.ably.io/push/channels?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getChannelsWithPushSubscribers",
        "framework": "ably.io",
        "functionality": "List all channels with at least one subscribed device",
        "api_arguments": {},
        "description": "Returns a paginated response of channel names.",
        "path": "/push/channels",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request DELETE \\\n  --url 'https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterAllPushDevices",
        "framework": "ably.io",
        "functionality": "Unregister matching devices for push notifications",
        "api_arguments": {},
        "description": "Unregisters devices. All their subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations",
        "method": "delete",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE\")\n  .delete(null)\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterAllPushDevices",
        "framework": "ably.io",
        "functionality": "Unregister matching devices for push notifications",
        "api_arguments": {},
        "description": "Unregisters devices. All their subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations",
        "method": "delete",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://rest.ably.io/push/deviceRegistrations',\n  qs: {\n    format: 'SOME_STRING_VALUE',\n    deviceId: 'SOME_STRING_VALUE',\n    clientId: 'SOME_STRING_VALUE'\n  },\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterAllPushDevices",
        "framework": "ably.io",
        "functionality": "Unregister matching devices for push notifications",
        "api_arguments": {},
        "description": "Unregisters devices. All their subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations",
        "method": "delete",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"DELETE\", \"/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterAllPushDevices",
        "framework": "ably.io",
        "functionality": "Unregister matching devices for push notifications",
        "api_arguments": {},
        "description": "Unregisters devices. All their subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations",
        "method": "delete",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterAllPushDevices",
        "framework": "ably.io",
        "functionality": "Unregister matching devices for push notifications",
        "api_arguments": {},
        "description": "Unregisters devices. All their subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations",
        "method": "delete",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterAllPushDevices",
        "framework": "ably.io",
        "functionality": "Unregister matching devices for push notifications",
        "api_arguments": {},
        "description": "Unregisters devices. All their subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations",
        "method": "delete",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterAllPushDevices",
        "framework": "ably.io",
        "functionality": "Unregister matching devices for push notifications",
        "api_arguments": {},
        "description": "Unregisters devices. All their subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations",
        "method": "delete",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterAllPushDevices",
        "framework": "ably.io",
        "functionality": "Unregister matching devices for push notifications",
        "api_arguments": {},
        "description": "Unregisters devices. All their subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations",
        "method": "delete",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterAllPushDevices",
        "framework": "ably.io",
        "functionality": "Unregister matching devices for push notifications",
        "api_arguments": {},
        "description": "Unregisters devices. All their subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations",
        "method": "delete",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterAllPushDevices",
        "framework": "ably.io",
        "functionality": "Unregister matching devices for push notifications",
        "api_arguments": {},
        "description": "Unregisters devices. All their subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations",
        "method": "delete",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url 'https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getRegisteredPushDevices",
        "framework": "ably.io",
        "functionality": "List devices registered for receiving push notifications",
        "api_arguments": {},
        "description": "List of device details of devices registed for push notifications.",
        "path": "/push/deviceRegistrations",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\")\n  .get()\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getRegisteredPushDevices",
        "framework": "ably.io",
        "functionality": "List devices registered for receiving push notifications",
        "api_arguments": {},
        "description": "List of device details of devices registed for push notifications.",
        "path": "/push/deviceRegistrations",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://rest.ably.io/push/deviceRegistrations',\n  qs: {\n    format: 'SOME_STRING_VALUE',\n    deviceId: 'SOME_STRING_VALUE',\n    clientId: 'SOME_STRING_VALUE',\n    limit: 'SOME_INTEGER_VALUE'\n  },\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getRegisteredPushDevices",
        "framework": "ably.io",
        "functionality": "List devices registered for receiving push notifications",
        "api_arguments": {},
        "description": "List of device details of devices registed for push notifications.",
        "path": "/push/deviceRegistrations",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"GET\", \"/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getRegisteredPushDevices",
        "framework": "ably.io",
        "functionality": "List devices registered for receiving push notifications",
        "api_arguments": {},
        "description": "List of device details of devices registed for push notifications.",
        "path": "/push/deviceRegistrations",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getRegisteredPushDevices",
        "framework": "ably.io",
        "functionality": "List devices registered for receiving push notifications",
        "api_arguments": {},
        "description": "List of device details of devices registed for push notifications.",
        "path": "/push/deviceRegistrations",
        "method": "get",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getRegisteredPushDevices",
        "framework": "ably.io",
        "functionality": "List devices registered for receiving push notifications",
        "api_arguments": {},
        "description": "List of device details of devices registed for push notifications.",
        "path": "/push/deviceRegistrations",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getRegisteredPushDevices",
        "framework": "ably.io",
        "functionality": "List devices registered for receiving push notifications",
        "api_arguments": {},
        "description": "List of device details of devices registed for push notifications.",
        "path": "/push/deviceRegistrations",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getRegisteredPushDevices",
        "framework": "ably.io",
        "functionality": "List devices registered for receiving push notifications",
        "api_arguments": {},
        "description": "List of device details of devices registed for push notifications.",
        "path": "/push/deviceRegistrations",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getRegisteredPushDevices",
        "framework": "ably.io",
        "functionality": "List devices registered for receiving push notifications",
        "api_arguments": {},
        "description": "List of device details of devices registed for push notifications.",
        "path": "/push/deviceRegistrations",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE&deviceId=SOME_STRING_VALUE&clientId=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getRegisteredPushDevices",
        "framework": "ably.io",
        "functionality": "List devices registered for receiving push notifications",
        "api_arguments": {},
        "description": "List of device details of devices registed for push notifications.",
        "path": "/push/deviceRegistrations",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request POST \\\n  --url 'https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"clientId\":\"string\",\"deviceSecret\":\"string\",\"formFactor\":\"phone\",\"id\":\"string\",\"metadata\":{},\"platform\":\"ios\",\"push.recipient\":{\"clientId\":\"string\",\"deviceId\":\"string\",\"deviceToken\":\"string\",\"registrationToken\":\"string\",\"transportType\":\"apns\"}}'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "registerPushDevice",
        "framework": "ably.io",
        "functionality": "Register a device for receiving push notifications",
        "api_arguments": {},
        "description": "Register a device’s details, including the information necessary to deliver push notifications to it. Requires \"push-admin\" capability.",
        "path": "/push/deviceRegistrations",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE\")\n  .post(body)\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "registerPushDevice",
        "framework": "ably.io",
        "functionality": "Register a device for receiving push notifications",
        "api_arguments": {},
        "description": "Register a device’s details, including the information necessary to deliver push notifications to it. Requires \"push-admin\" capability.",
        "path": "/push/deviceRegistrations",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://rest.ably.io/push/deviceRegistrations',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH',\n    'content-type': 'application/json'\n  },\n  body: {\n    clientId: 'string',\n    deviceSecret: 'string',\n    formFactor: 'phone',\n    id: 'string',\n    metadata: {},\n    platform: 'ios',\n    'push.recipient': {\n      clientId: 'string',\n      deviceId: 'string',\n      deviceToken: 'string',\n      registrationToken: 'string',\n      transportType: 'apns'\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "registerPushDevice",
        "framework": "ably.io",
        "functionality": "Register a device for receiving push notifications",
        "api_arguments": {},
        "description": "Register a device’s details, including the information necessary to deliver push notifications to it. Requires \"push-admin\" capability.",
        "path": "/push/deviceRegistrations",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\npayload = \"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\"\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/push/deviceRegistrations?format=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "registerPushDevice",
        "framework": "ably.io",
        "functionality": "Register a device for receiving push notifications",
        "api_arguments": {},
        "description": "Register a device’s details, including the information necessary to deliver push notifications to it. Requires \"push-admin\" capability.",
        "path": "/push/deviceRegistrations",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE\"\n\n\tpayload := strings.NewReader(\"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "registerPushDevice",
        "framework": "ably.io",
        "functionality": "Register a device for receiving push notifications",
        "api_arguments": {},
        "description": "Register a device’s details, including the information necessary to deliver push notifications to it. Requires \"push-admin\" capability.",
        "path": "/push/deviceRegistrations",
        "method": "post",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "registerPushDevice",
        "framework": "ably.io",
        "functionality": "Register a device for receiving push notifications",
        "api_arguments": {},
        "description": "Register a device’s details, including the information necessary to deliver push notifications to it. Requires \"push-admin\" capability.",
        "path": "/push/deviceRegistrations",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "registerPushDevice",
        "framework": "ably.io",
        "functionality": "Register a device for receiving push notifications",
        "api_arguments": {},
        "description": "Register a device’s details, including the information necessary to deliver push notifications to it. Requires \"push-admin\" capability.",
        "path": "/push/deviceRegistrations",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"clientId\": \"string\",\n  \"deviceSecret\": \"string\",\n  \"formFactor\": \"phone\",\n  \"id\": \"string\",\n  \"metadata\": [],\n  \"platform\": \"ios\",\n  \"push.recipient\": [\n    \"clientId\": \"string\",\n    \"deviceId\": \"string\",\n    \"deviceToken\": \"string\",\n    \"registrationToken\": \"string\",\n    \"transportType\": \"apns\"\n  ]\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "registerPushDevice",
        "framework": "ably.io",
        "functionality": "Register a device for receiving push notifications",
        "api_arguments": {},
        "description": "Register a device’s details, including the information necessary to deliver push notifications to it. Requires \"push-admin\" capability.",
        "path": "/push/deviceRegistrations",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\nheaders = curl_slist_append(headers, \"content-type: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "registerPushDevice",
        "framework": "ably.io",
        "functionality": "Register a device for receiving push notifications",
        "api_arguments": {},
        "description": "Register a device’s details, including the information necessary to deliver push notifications to it. Requires \"push-admin\" capability.",
        "path": "/push/deviceRegistrations",
        "method": "post",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = JSON.stringify({\n  \"clientId\": \"string\",\n  \"deviceSecret\": \"string\",\n  \"formFactor\": \"phone\",\n  \"id\": \"string\",\n  \"metadata\": {},\n  \"platform\": \"ios\",\n  \"push.recipient\": {\n    \"clientId\": \"string\",\n    \"deviceId\": \"string\",\n    \"deviceToken\": \"string\",\n    \"registrationToken\": \"string\",\n    \"transportType\": \"apns\"\n  }\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://rest.ably.io/push/deviceRegistrations?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "registerPushDevice",
        "framework": "ably.io",
        "functionality": "Register a device for receiving push notifications",
        "api_arguments": {},
        "description": "Register a device’s details, including the information necessary to deliver push notifications to it. Requires \"push-admin\" capability.",
        "path": "/push/deviceRegistrations",
        "method": "post",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request DELETE \\\n  --url 'https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterPushDevice",
        "framework": "ably.io",
        "functionality": "Unregister a single device for push notifications",
        "api_arguments": {},
        "description": "Unregisters a single device by its device ID. All its subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "delete",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")\n  .delete(null)\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterPushDevice",
        "framework": "ably.io",
        "functionality": "Unregister a single device for push notifications",
        "api_arguments": {},
        "description": "Unregisters a single device by its device ID. All its subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "delete",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterPushDevice",
        "framework": "ably.io",
        "functionality": "Unregister a single device for push notifications",
        "api_arguments": {},
        "description": "Unregisters a single device by its device ID. All its subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "delete",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"DELETE\", \"/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterPushDevice",
        "framework": "ably.io",
        "functionality": "Unregister a single device for push notifications",
        "api_arguments": {},
        "description": "Unregisters a single device by its device ID. All its subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "delete",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterPushDevice",
        "framework": "ably.io",
        "functionality": "Unregister a single device for push notifications",
        "api_arguments": {},
        "description": "Unregisters a single device by its device ID. All its subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "delete",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterPushDevice",
        "framework": "ably.io",
        "functionality": "Unregister a single device for push notifications",
        "api_arguments": {},
        "description": "Unregisters a single device by its device ID. All its subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "delete",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterPushDevice",
        "framework": "ably.io",
        "functionality": "Unregister a single device for push notifications",
        "api_arguments": {},
        "description": "Unregisters a single device by its device ID. All its subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "delete",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterPushDevice",
        "framework": "ably.io",
        "functionality": "Unregister a single device for push notifications",
        "api_arguments": {},
        "description": "Unregisters a single device by its device ID. All its subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "delete",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterPushDevice",
        "framework": "ably.io",
        "functionality": "Unregister a single device for push notifications",
        "api_arguments": {},
        "description": "Unregisters a single device by its device ID. All its subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "delete",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "unregisterPushDevice",
        "framework": "ably.io",
        "functionality": "Unregister a single device for push notifications",
        "api_arguments": {},
        "description": "Unregisters a single device by its device ID. All its subscriptions for receiving push notifications through channels will also be deleted.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "delete",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url 'https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Get a device registration",
        "api_arguments": {},
        "description": "Get the full details of a device.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Get a device registration",
        "api_arguments": {},
        "description": "Get the full details of a device.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Get a device registration",
        "api_arguments": {},
        "description": "Get the full details of a device.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"GET\", \"/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Get a device registration",
        "api_arguments": {},
        "description": "Get the full details of a device.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Get a device registration",
        "api_arguments": {},
        "description": "Get the full details of a device.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "get",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Get a device registration",
        "api_arguments": {},
        "description": "Get the full details of a device.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Get a device registration",
        "api_arguments": {},
        "description": "Get the full details of a device.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Get a device registration",
        "api_arguments": {},
        "description": "Get the full details of a device.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Get a device registration",
        "api_arguments": {},
        "description": "Get the full details of a device.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Get a device registration",
        "api_arguments": {},
        "description": "Get the full details of a device.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request PATCH \\\n  --url 'https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"clientId\":\"string\",\"deviceSecret\":\"string\",\"formFactor\":\"phone\",\"id\":\"string\",\"metadata\":{},\"platform\":\"ios\",\"push.recipient\":{\"clientId\":\"string\",\"deviceId\":\"string\",\"deviceToken\":\"string\",\"registrationToken\":\"string\",\"transportType\":\"apns\"}}'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")\n  .patch(body)\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH',\n    'content-type': 'application/json'\n  },\n  body: {\n    clientId: 'string',\n    deviceSecret: 'string',\n    formFactor: 'phone',\n    id: 'string',\n    metadata: {},\n    platform: 'ios',\n    'push.recipient': {\n      clientId: 'string',\n      deviceId: 'string',\n      deviceToken: 'string',\n      registrationToken: 'string',\n      transportType: 'apns'\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\npayload = \"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\"\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"PATCH\", \"/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\"\n\n\tpayload := strings.NewReader(\"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"clientId\": \"string\",\n  \"deviceSecret\": \"string\",\n  \"formFactor\": \"phone\",\n  \"id\": \"string\",\n  \"metadata\": [],\n  \"platform\": \"ios\",\n  \"push.recipient\": [\n    \"clientId\": \"string\",\n    \"deviceId\": \"string\",\n    \"deviceToken\": \"string\",\n    \"registrationToken\": \"string\",\n    \"transportType\": \"apns\"\n  ]\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\nheaders = curl_slist_append(headers, \"content-type: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = JSON.stringify({\n  \"clientId\": \"string\",\n  \"deviceSecret\": \"string\",\n  \"formFactor\": \"phone\",\n  \"id\": \"string\",\n  \"metadata\": {},\n  \"platform\": \"ios\",\n  \"push.recipient\": {\n    \"clientId\": \"string\",\n    \"deviceId\": \"string\",\n    \"deviceToken\": \"string\",\n    \"registrationToken\": \"string\",\n    \"transportType\": \"apns\"\n  }\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request PATCH \\\n  --url 'https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --data clientId=string \\\n  --data deviceSecret=string \\\n  --data formFactor=phone \\\n  --data id=string \\\n  --data 'metadata=%5Bobject+Object%5D' \\\n  --data platform=ios \\\n  --data 'push.recipient=%5Bobject+Object%5D'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/x-www-form-urlencoded\");\nRequestBody body = RequestBody.create(mediaType, \"clientId=string&deviceSecret=string&formFactor=phone&id=string&metadata=%255Bobject%2BObject%255D&platform=ios&push.recipient=%255Bobject%2BObject%255D\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")\n  .patch(body)\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH',\n    'content-type': 'application/x-www-form-urlencoded'\n  },\n  form: {\n    clientId: 'string',\n    deviceSecret: 'string',\n    formFactor: 'phone',\n    id: 'string',\n    metadata: '%5Bobject+Object%5D',\n    platform: 'ios',\n    'push.recipient': '%5Bobject+Object%5D'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\npayload = \"clientId=string&deviceSecret=string&formFactor=phone&id=string&metadata=%255Bobject%2BObject%255D&platform=ios&push.recipient=%255Bobject%2BObject%255D\"\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"PATCH\", \"/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\"\n\n\tpayload := strings.NewReader(\"clientId=string&deviceSecret=string&formFactor=phone&id=string&metadata=%255Bobject%2BObject%255D&platform=ios&push.recipient=%255Bobject%2BObject%255D\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\nrequest.body = \"clientId=string&deviceSecret=string&formFactor=phone&id=string&metadata=%255Bobject%2BObject%255D&platform=ios&push.recipient=%255Bobject%2BObject%255D\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"clientId=string&deviceSecret=string&formFactor=phone&id=string&metadata=%255Bobject%2BObject%255D&platform=ios&push.recipient=%255Bobject%2BObject%255D\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet postData = NSMutableData(data: \"clientId=string\".data(using: String.Encoding.utf8)!)\npostData.append(\"&deviceSecret=string\".data(using: String.Encoding.utf8)!)\npostData.append(\"&formFactor=phone\".data(using: String.Encoding.utf8)!)\npostData.append(\"&id=string\".data(using: String.Encoding.utf8)!)\npostData.append(\"&metadata=%5Bobject+Object%5D\".data(using: String.Encoding.utf8)!)\npostData.append(\"&platform=ios\".data(using: String.Encoding.utf8)!)\npostData.append(\"&push.recipient=%5Bobject+Object%5D\".data(using: String.Encoding.utf8)!)\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"clientId=string&deviceSecret=string&formFactor=phone&id=string&metadata=%255Bobject%2BObject%255D&platform=ios&push.recipient=%255Bobject%2BObject%255D\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = \"clientId=string&deviceSecret=string&formFactor=phone&id=string&metadata=%255Bobject%2BObject%255D&platform=ios&push.recipient=%255Bobject%2BObject%255D\";\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "patchPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Specific attributes of an existing registration can be updated. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "patch",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request PUT \\\n  --url 'https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"clientId\":\"string\",\"deviceSecret\":\"string\",\"formFactor\":\"phone\",\"id\":\"string\",\"metadata\":{},\"platform\":\"ios\",\"push.recipient\":{\"clientId\":\"string\",\"deviceId\":\"string\",\"deviceToken\":\"string\",\"registrationToken\":\"string\",\"transportType\":\"apns\"}}'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")\n  .put(body)\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH',\n    'content-type': 'application/json'\n  },\n  body: {\n    clientId: 'string',\n    deviceSecret: 'string',\n    formFactor: 'phone',\n    id: 'string',\n    metadata: {},\n    platform: 'ios',\n    'push.recipient': {\n      clientId: 'string',\n      deviceId: 'string',\n      deviceToken: 'string',\n      registrationToken: 'string',\n      transportType: 'apns'\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\npayload = \"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\"\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"PUT\", \"/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\"\n\n\tpayload := strings.NewReader(\"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_POSTFIELDS => \"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"clientId\": \"string\",\n  \"deviceSecret\": \"string\",\n  \"formFactor\": \"phone\",\n  \"id\": \"string\",\n  \"metadata\": [],\n  \"platform\": \"ios\",\n  \"push.recipient\": [\n    \"clientId\": \"string\",\n    \"deviceId\": \"string\",\n    \"deviceToken\": \"string\",\n    \"registrationToken\": \"string\",\n    \"transportType\": \"apns\"\n  ]\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"PUT\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PUT\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\nheaders = curl_slist_append(headers, \"content-type: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"clientId\\\":\\\"string\\\",\\\"deviceSecret\\\":\\\"string\\\",\\\"formFactor\\\":\\\"phone\\\",\\\"id\\\":\\\"string\\\",\\\"metadata\\\":{},\\\"platform\\\":\\\"ios\\\",\\\"push.recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = JSON.stringify({\n  \"clientId\": \"string\",\n  \"deviceSecret\": \"string\",\n  \"formFactor\": \"phone\",\n  \"id\": \"string\",\n  \"metadata\": {},\n  \"platform\": \"ios\",\n  \"push.recipient\": {\n    \"clientId\": \"string\",\n    \"deviceId\": \"string\",\n    \"deviceToken\": \"string\",\n    \"registrationToken\": \"string\",\n    \"transportType\": \"apns\"\n  }\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request PUT \\\n  --url 'https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --data clientId=string \\\n  --data deviceSecret=string \\\n  --data formFactor=phone \\\n  --data id=string \\\n  --data 'metadata=%5Bobject+Object%5D' \\\n  --data platform=ios \\\n  --data 'push.recipient=%5Bobject+Object%5D'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/x-www-form-urlencoded\");\nRequestBody body = RequestBody.create(mediaType, \"clientId=string&deviceSecret=string&formFactor=phone&id=string&metadata=%255Bobject%2BObject%255D&platform=ios&push.recipient=%255Bobject%2BObject%255D\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")\n  .put(body)\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH',\n    'content-type': 'application/x-www-form-urlencoded'\n  },\n  form: {\n    clientId: 'string',\n    deviceSecret: 'string',\n    formFactor: 'phone',\n    id: 'string',\n    metadata: '%5Bobject+Object%5D',\n    platform: 'ios',\n    'push.recipient': '%5Bobject+Object%5D'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\npayload = \"clientId=string&deviceSecret=string&formFactor=phone&id=string&metadata=%255Bobject%2BObject%255D&platform=ios&push.recipient=%255Bobject%2BObject%255D\"\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"PUT\", \"/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\"\n\n\tpayload := strings.NewReader(\"clientId=string&deviceSecret=string&formFactor=phone&id=string&metadata=%255Bobject%2BObject%255D&platform=ios&push.recipient=%255Bobject%2BObject%255D\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\nrequest.body = \"clientId=string&deviceSecret=string&formFactor=phone&id=string&metadata=%255Bobject%2BObject%255D&platform=ios&push.recipient=%255Bobject%2BObject%255D\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_POSTFIELDS => \"clientId=string&deviceSecret=string&formFactor=phone&id=string&metadata=%255Bobject%2BObject%255D&platform=ios&push.recipient=%255Bobject%2BObject%255D\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet postData = NSMutableData(data: \"clientId=string\".data(using: String.Encoding.utf8)!)\npostData.append(\"&deviceSecret=string\".data(using: String.Encoding.utf8)!)\npostData.append(\"&formFactor=phone\".data(using: String.Encoding.utf8)!)\npostData.append(\"&id=string\".data(using: String.Encoding.utf8)!)\npostData.append(\"&metadata=%5Bobject+Object%5D\".data(using: String.Encoding.utf8)!)\npostData.append(\"&platform=ios\".data(using: String.Encoding.utf8)!)\npostData.append(\"&push.recipient=%5Bobject+Object%5D\".data(using: String.Encoding.utf8)!)\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"PUT\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PUT\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"clientId=string&deviceSecret=string&formFactor=phone&id=string&metadata=%255Bobject%2BObject%255D&platform=ios&push.recipient=%255Bobject%2BObject%255D\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = \"clientId=string&deviceSecret=string&formFactor=phone&id=string&metadata=%255Bobject%2BObject%255D&platform=ios&push.recipient=%255Bobject%2BObject%255D\";\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "putPushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Update a device registration",
        "api_arguments": {},
        "description": "Device registrations can be upserted (the existing registration is replaced entirely) with a PUT operation. Only clientId, metadata and push.recipient are mutable.",
        "path": "/push/deviceRegistrations/{device_id}",
        "method": "put",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url 'https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D/resetUpdateToken?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "updatePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Reset a registered device's update token",
        "api_arguments": {},
        "description": "Gets an updated device details object.",
        "path": "/push/deviceRegistrations/{device_id}/resetUpdateToken",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D/resetUpdateToken?format=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "updatePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Reset a registered device's update token",
        "api_arguments": {},
        "description": "Gets an updated device details object.",
        "path": "/push/deviceRegistrations/{device_id}/resetUpdateToken",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D/resetUpdateToken',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "updatePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Reset a registered device's update token",
        "api_arguments": {},
        "description": "Gets an updated device details object.",
        "path": "/push/deviceRegistrations/{device_id}/resetUpdateToken",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"GET\", \"/push/deviceRegistrations/%7Bdevice_id%7D/resetUpdateToken?format=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "updatePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Reset a registered device's update token",
        "api_arguments": {},
        "description": "Gets an updated device details object.",
        "path": "/push/deviceRegistrations/{device_id}/resetUpdateToken",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D/resetUpdateToken?format=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "updatePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Reset a registered device's update token",
        "api_arguments": {},
        "description": "Gets an updated device details object.",
        "path": "/push/deviceRegistrations/{device_id}/resetUpdateToken",
        "method": "get",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D/resetUpdateToken?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "updatePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Reset a registered device's update token",
        "api_arguments": {},
        "description": "Gets an updated device details object.",
        "path": "/push/deviceRegistrations/{device_id}/resetUpdateToken",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D/resetUpdateToken?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "updatePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Reset a registered device's update token",
        "api_arguments": {},
        "description": "Gets an updated device details object.",
        "path": "/push/deviceRegistrations/{device_id}/resetUpdateToken",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D/resetUpdateToken?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "updatePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Reset a registered device's update token",
        "api_arguments": {},
        "description": "Gets an updated device details object.",
        "path": "/push/deviceRegistrations/{device_id}/resetUpdateToken",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D/resetUpdateToken?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "updatePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Reset a registered device's update token",
        "api_arguments": {},
        "description": "Gets an updated device details object.",
        "path": "/push/deviceRegistrations/{device_id}/resetUpdateToken",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://rest.ably.io/push/deviceRegistrations/%7Bdevice_id%7D/resetUpdateToken?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "updatePushDeviceDetails",
        "framework": "ably.io",
        "functionality": "Reset a registered device's update token",
        "api_arguments": {},
        "description": "Gets an updated device details object.",
        "path": "/push/deviceRegistrations/{device_id}/resetUpdateToken",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request POST \\\n  --url 'https://rest.ably.io/push/publish?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"push\":{\"apns\":{\"notification\":{\"body\":\"string\",\"collapseKey\":\"string\",\"icon\":\"string\",\"sound\":\"string\",\"title\":\"string\"}},\"data\":\"string\",\"fcm\":{\"notification\":{\"body\":\"string\",\"collapseKey\":\"string\",\"icon\":\"string\",\"sound\":\"string\",\"title\":\"string\"}},\"notification\":{\"body\":\"string\",\"collapseKey\":\"string\",\"icon\":\"string\",\"sound\":\"string\",\"title\":\"string\"},\"web\":{\"notification\":{\"body\":\"string\",\"collapseKey\":\"string\",\"icon\":\"string\",\"sound\":\"string\",\"title\":\"string\"}}},\"recipient\":{\"clientId\":\"string\",\"deviceId\":\"string\",\"deviceToken\":\"string\",\"registrationToken\":\"string\",\"transportType\":\"apns\"}}'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"push\\\":{\\\"apns\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"data\\\":\\\"string\\\",\\\"fcm\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"},\\\"web\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}}},\\\"recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/publish?format=SOME_STRING_VALUE\")\n  .post(body)\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://rest.ably.io/push/publish',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH',\n    'content-type': 'application/json'\n  },\n  body: {\n    push: {\n      apns: {\n        notification: {\n          body: 'string',\n          collapseKey: 'string',\n          icon: 'string',\n          sound: 'string',\n          title: 'string'\n        }\n      },\n      data: 'string',\n      fcm: {\n        notification: {\n          body: 'string',\n          collapseKey: 'string',\n          icon: 'string',\n          sound: 'string',\n          title: 'string'\n        }\n      },\n      notification: {\n        body: 'string',\n        collapseKey: 'string',\n        icon: 'string',\n        sound: 'string',\n        title: 'string'\n      },\n      web: {\n        notification: {\n          body: 'string',\n          collapseKey: 'string',\n          icon: 'string',\n          sound: 'string',\n          title: 'string'\n        }\n      }\n    },\n    recipient: {\n      clientId: 'string',\n      deviceId: 'string',\n      deviceToken: 'string',\n      registrationToken: 'string',\n      transportType: 'apns'\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\npayload = \"{\\\"push\\\":{\\\"apns\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"data\\\":\\\"string\\\",\\\"fcm\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"},\\\"web\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}}},\\\"recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\"\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/push/publish?format=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/publish?format=SOME_STRING_VALUE\"\n\n\tpayload := strings.NewReader(\"{\\\"push\\\":{\\\"apns\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"data\\\":\\\"string\\\",\\\"fcm\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"},\\\"web\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}}},\\\"recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/publish?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"push\\\":{\\\"apns\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"data\\\":\\\"string\\\",\\\"fcm\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"},\\\"web\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}}},\\\"recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/publish?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"push\\\":{\\\"apns\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"data\\\":\\\"string\\\",\\\"fcm\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"},\\\"web\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}}},\\\"recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"push\": [\n    \"apns\": [\"notification\": [\n        \"body\": \"string\",\n        \"collapseKey\": \"string\",\n        \"icon\": \"string\",\n        \"sound\": \"string\",\n        \"title\": \"string\"\n      ]],\n    \"data\": \"string\",\n    \"fcm\": [\"notification\": [\n        \"body\": \"string\",\n        \"collapseKey\": \"string\",\n        \"icon\": \"string\",\n        \"sound\": \"string\",\n        \"title\": \"string\"\n      ]],\n    \"notification\": [\n      \"body\": \"string\",\n      \"collapseKey\": \"string\",\n      \"icon\": \"string\",\n      \"sound\": \"string\",\n      \"title\": \"string\"\n    ],\n    \"web\": [\"notification\": [\n        \"body\": \"string\",\n        \"collapseKey\": \"string\",\n        \"icon\": \"string\",\n        \"sound\": \"string\",\n        \"title\": \"string\"\n      ]]\n  ],\n  \"recipient\": [\n    \"clientId\": \"string\",\n    \"deviceId\": \"string\",\n    \"deviceToken\": \"string\",\n    \"registrationToken\": \"string\",\n    \"transportType\": \"apns\"\n  ]\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/publish?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/publish?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\nheaders = curl_slist_append(headers, \"content-type: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"push\\\":{\\\"apns\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"data\\\":\\\"string\\\",\\\"fcm\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}},\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"},\\\"web\\\":{\\\"notification\\\":{\\\"body\\\":\\\"string\\\",\\\"collapseKey\\\":\\\"string\\\",\\\"icon\\\":\\\"string\\\",\\\"sound\\\":\\\"string\\\",\\\"title\\\":\\\"string\\\"}}},\\\"recipient\\\":{\\\"clientId\\\":\\\"string\\\",\\\"deviceId\\\":\\\"string\\\",\\\"deviceToken\\\":\\\"string\\\",\\\"registrationToken\\\":\\\"string\\\",\\\"transportType\\\":\\\"apns\\\"}}\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = JSON.stringify({\n  \"push\": {\n    \"apns\": {\n      \"notification\": {\n        \"body\": \"string\",\n        \"collapseKey\": \"string\",\n        \"icon\": \"string\",\n        \"sound\": \"string\",\n        \"title\": \"string\"\n      }\n    },\n    \"data\": \"string\",\n    \"fcm\": {\n      \"notification\": {\n        \"body\": \"string\",\n        \"collapseKey\": \"string\",\n        \"icon\": \"string\",\n        \"sound\": \"string\",\n        \"title\": \"string\"\n      }\n    },\n    \"notification\": {\n      \"body\": \"string\",\n      \"collapseKey\": \"string\",\n      \"icon\": \"string\",\n      \"sound\": \"string\",\n      \"title\": \"string\"\n    },\n    \"web\": {\n      \"notification\": {\n        \"body\": \"string\",\n        \"collapseKey\": \"string\",\n        \"icon\": \"string\",\n        \"sound\": \"string\",\n        \"title\": \"string\"\n      }\n    }\n  },\n  \"recipient\": {\n    \"clientId\": \"string\",\n    \"deviceId\": \"string\",\n    \"deviceToken\": \"string\",\n    \"registrationToken\": \"string\",\n    \"transportType\": \"apns\"\n  }\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://rest.ably.io/push/publish?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request POST \\\n  --url 'https://rest.ably.io/push/publish?format=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --data 'push=%5Bobject+Object%5D' \\\n  --data 'recipient=%5Bobject+Object%5D'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/x-www-form-urlencoded\");\nRequestBody body = RequestBody.create(mediaType, \"push=%255Bobject%2BObject%255D&recipient=%255Bobject%2BObject%255D\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/push/publish?format=SOME_STRING_VALUE\")\n  .post(body)\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://rest.ably.io/push/publish',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH',\n    'content-type': 'application/x-www-form-urlencoded'\n  },\n  form: {push: '%5Bobject+Object%5D', recipient: '%5Bobject+Object%5D'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\npayload = \"push=%255Bobject%2BObject%255D&recipient=%255Bobject%2BObject%255D\"\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"POST\", \"/push/publish?format=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/push/publish?format=SOME_STRING_VALUE\"\n\n\tpayload := strings.NewReader(\"push=%255Bobject%2BObject%255D&recipient=%255Bobject%2BObject%255D\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "go",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/push/publish?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\nrequest.body = \"push=%255Bobject%2BObject%255D&recipient=%255Bobject%2BObject%255D\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/push/publish?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"push=%255Bobject%2BObject%255D&recipient=%255Bobject%2BObject%255D\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet postData = NSMutableData(data: \"push=%5Bobject+Object%5D\".data(using: String.Encoding.utf8)!)\npostData.append(\"&recipient=%5Bobject+Object%5D\".data(using: String.Encoding.utf8)!)\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/push/publish?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/push/publish?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"push=%255Bobject%2BObject%255D&recipient=%255Bobject%2BObject%255D\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "libcurl",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = \"push=%255Bobject%2BObject%255D&recipient=%255Bobject%2BObject%255D\";\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://rest.ably.io/push/publish?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "publishPushNotificationToDevices",
        "framework": "ably.io",
        "functionality": "Publish a push notification to device(s)",
        "api_arguments": {},
        "description": "A convenience endpoint to deliver a push notification payload to a single device or set of devices identified by their client identifier.",
        "path": "/push/publish",
        "method": "post",
        "lang": "javascript xhr",
        "domain": [
            "Push"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url 'https://rest.ably.io/stats?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE&unit=SOME_STRING_VALUE' \\\n  --header 'Authorization: Basic REPLACE_BASIC_AUTH' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getStats",
        "framework": "ably.io",
        "functionality": "Retrieve usage statistics for an application",
        "api_arguments": {},
        "description": "The Ably system can be queried to obtain usage statistics for a given application, and results are provided aggregated across all channels in use in the application in the specified period. Stats may be used to track usage against account quotas.",
        "path": "/stats",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/stats?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE&unit=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .addHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getStats",
        "framework": "ably.io",
        "functionality": "Retrieve usage statistics for an application",
        "api_arguments": {},
        "description": "The Ably system can be queried to obtain usage statistics for a given application, and results are provided aggregated across all channels in use in the application in the specified period. Stats may be used to track usage against account quotas.",
        "path": "/stats",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://rest.ably.io/stats',\n  qs: {\n    format: 'SOME_STRING_VALUE',\n    start: 'SOME_STRING_VALUE',\n    limit: 'SOME_INTEGER_VALUE',\n    end: 'SOME_STRING_VALUE',\n    direction: 'SOME_STRING_VALUE',\n    unit: 'SOME_STRING_VALUE'\n  },\n  headers: {\n    'X-Ably-Version': 'SOME_STRING_VALUE',\n    Authorization: 'Basic REPLACE_BASIC_AUTH'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getStats",
        "framework": "ably.io",
        "functionality": "Retrieve usage statistics for an application",
        "api_arguments": {},
        "description": "The Ably system can be queried to obtain usage statistics for a given application, and results are provided aggregated across all channels in use in the application in the specified period. Stats may be used to track usage against account quotas.",
        "path": "/stats",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\nheaders = {\n    'X-Ably-Version': \"SOME_STRING_VALUE\",\n    'Authorization': \"Basic REPLACE_BASIC_AUTH\"\n    }\n\nconn.request(\"GET\", \"/stats?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE&unit=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getStats",
        "framework": "ably.io",
        "functionality": "Retrieve usage statistics for an application",
        "api_arguments": {},
        "description": "The Ably system can be queried to obtain usage statistics for a given application, and results are provided aggregated across all channels in use in the application in the specified period. Stats may be used to track usage against account quotas.",
        "path": "/stats",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/stats?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE&unit=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getStats",
        "framework": "ably.io",
        "functionality": "Retrieve usage statistics for an application",
        "api_arguments": {},
        "description": "The Ably system can be queried to obtain usage statistics for a given application, and results are provided aggregated across all channels in use in the application in the specified period. Stats may be used to track usage against account quotas.",
        "path": "/stats",
        "method": "get",
        "lang": "go",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/stats?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE&unit=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\nrequest[\"Authorization\"] = 'Basic REPLACE_BASIC_AUTH'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getStats",
        "framework": "ably.io",
        "functionality": "Retrieve usage statistics for an application",
        "api_arguments": {},
        "description": "The Ably system can be queried to obtain usage statistics for a given application, and results are provided aggregated across all channels in use in the application in the specified period. Stats may be used to track usage against account quotas.",
        "path": "/stats",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/stats?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE&unit=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Basic REPLACE_BASIC_AUTH\",\n    \"X-Ably-Version: SOME_STRING_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getStats",
        "framework": "ably.io",
        "functionality": "Retrieve usage statistics for an application",
        "api_arguments": {},
        "description": "The Ably system can be queried to obtain usage statistics for a given application, and results are provided aggregated across all channels in use in the application in the specified period. Stats may be used to track usage against account quotas.",
        "path": "/stats",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"X-Ably-Version\": \"SOME_STRING_VALUE\",\n  \"Authorization\": \"Basic REPLACE_BASIC_AUTH\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/stats?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE&unit=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getStats",
        "framework": "ably.io",
        "functionality": "Retrieve usage statistics for an application",
        "api_arguments": {},
        "description": "The Ably system can be queried to obtain usage statistics for a given application, and results are provided aggregated across all channels in use in the application in the specified period. Stats may be used to track usage against account quotas.",
        "path": "/stats",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/stats?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE&unit=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\nheaders = curl_slist_append(headers, \"Authorization: Basic REPLACE_BASIC_AUTH\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getStats",
        "framework": "ably.io",
        "functionality": "Retrieve usage statistics for an application",
        "api_arguments": {},
        "description": "The Ably system can be queried to obtain usage statistics for a given application, and results are provided aggregated across all channels in use in the application in the specified period. Stats may be used to track usage against account quotas.",
        "path": "/stats",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://rest.ably.io/stats?format=SOME_STRING_VALUE&start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&end=SOME_STRING_VALUE&direction=SOME_STRING_VALUE&unit=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getStats",
        "framework": "ably.io",
        "functionality": "Retrieve usage statistics for an application",
        "api_arguments": {},
        "description": "The Ably system can be queried to obtain usage statistics for a given application, and results are provided aggregated across all channels in use in the application in the specified period. Stats may be used to track usage against account quotas.",
        "path": "/stats",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url 'https://rest.ably.io/time?format=SOME_STRING_VALUE' \\\n  --header 'X-Ably-Version: SOME_STRING_VALUE'",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getTime",
        "framework": "ably.io",
        "functionality": "Get the service time",
        "api_arguments": {},
        "description": "This returns the service time in milliseconds since the epoch.",
        "path": "/time",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://rest.ably.io/time?format=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getTime",
        "framework": "ably.io",
        "functionality": "Get the service time",
        "api_arguments": {},
        "description": "This returns the service time in milliseconds since the epoch.",
        "path": "/time",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://rest.ably.io/time',\n  qs: {format: 'SOME_STRING_VALUE'},\n  headers: {'X-Ably-Version': 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getTime",
        "framework": "ably.io",
        "functionality": "Get the service time",
        "api_arguments": {},
        "description": "This returns the service time in milliseconds since the epoch.",
        "path": "/time",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPSConnection(\"rest.ably.io\")\n\nheaders = { 'X-Ably-Version': \"SOME_STRING_VALUE\" }\n\nconn.request(\"GET\", \"/time?format=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getTime",
        "framework": "ably.io",
        "functionality": "Get the service time",
        "api_arguments": {},
        "description": "This returns the service time in milliseconds since the epoch.",
        "path": "/time",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://rest.ably.io/time?format=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"X-Ably-Version\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getTime",
        "framework": "ably.io",
        "functionality": "Get the service time",
        "api_arguments": {},
        "description": "This returns the service time in milliseconds since the epoch.",
        "path": "/time",
        "method": "get",
        "lang": "go",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://rest.ably.io/time?format=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"X-Ably-Version\"] = 'SOME_STRING_VALUE'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getTime",
        "framework": "ably.io",
        "functionality": "Get the service time",
        "api_arguments": {},
        "description": "This returns the service time in milliseconds since the epoch.",
        "path": "/time",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://rest.ably.io/time?format=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"X-Ably-Version: SOME_STRING_VALUE\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getTime",
        "framework": "ably.io",
        "functionality": "Get the service time",
        "api_arguments": {},
        "description": "This returns the service time in milliseconds since the epoch.",
        "path": "/time",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\"X-Ably-Version\": \"SOME_STRING_VALUE\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://rest.ably.io/time?format=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getTime",
        "framework": "ably.io",
        "functionality": "Get the service time",
        "api_arguments": {},
        "description": "This returns the service time in milliseconds since the epoch.",
        "path": "/time",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://rest.ably.io/time?format=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"X-Ably-Version: SOME_STRING_VALUE\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getTime",
        "framework": "ably.io",
        "functionality": "Get the service time",
        "api_arguments": {},
        "description": "This returns the service time in milliseconds since the epoch.",
        "path": "/time",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://rest.ably.io/time?format=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"X-Ably-Version\", \"SOME_STRING_VALUE\");\n\nxhr.send(data);",
        "api_name": "Platform API",
        "api_provider": "ably.io",
        "endpoint": "getTime",
        "framework": "ably.io",
        "functionality": "Get the service time",
        "api_arguments": {},
        "description": "This returns the service time in milliseconds since the epoch.",
        "path": "/time",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Stats"
        ],
        "api_description": "The [REST API specification](https://www.ably.io/documentation/rest-api) for Ably.",
        "api_license": ""
    }
]