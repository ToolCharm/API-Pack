[
    {
        "api_call": "curl --request GET \\\n  --url 'http://1password.local/activity?limit=10&offset=50' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetApiActivity",
        "framework": "1password.local",
        "functionality": "Retrieve a list of API Requests that have been made.",
        "api_arguments": {},
        "description": "",
        "path": "/activity",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Activity"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://1password.local/activity?limit=10&offset=50\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetApiActivity",
        "framework": "1password.local",
        "functionality": "Retrieve a list of API Requests that have been made.",
        "api_arguments": {},
        "description": "",
        "path": "/activity",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Activity"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://1password.local/activity',\n  qs: {limit: '10', offset: '50'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetApiActivity",
        "framework": "1password.local",
        "functionality": "Retrieve a list of API Requests that have been made.",
        "api_arguments": {},
        "description": "",
        "path": "/activity",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Activity"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPConnection(\"1password.local\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/activity?limit=10&offset=50\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetApiActivity",
        "framework": "1password.local",
        "functionality": "Retrieve a list of API Requests that have been made.",
        "api_arguments": {},
        "description": "",
        "path": "/activity",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Activity"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://1password.local/activity?limit=10&offset=50\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetApiActivity",
        "framework": "1password.local",
        "functionality": "Retrieve a list of API Requests that have been made.",
        "api_arguments": {},
        "description": "",
        "path": "/activity",
        "method": "get",
        "lang": "go",
        "domain": [
            "Activity"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://1password.local/activity?limit=10&offset=50\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Authorization\"] = 'Bearer REPLACE_BEARER_TOKEN'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetApiActivity",
        "framework": "1password.local",
        "functionality": "Retrieve a list of API Requests that have been made.",
        "api_arguments": {},
        "description": "",
        "path": "/activity",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Activity"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://1password.local/activity?limit=10&offset=50\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetApiActivity",
        "framework": "1password.local",
        "functionality": "Retrieve a list of API Requests that have been made.",
        "api_arguments": {},
        "description": "",
        "path": "/activity",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Activity"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"http://1password.local/activity?limit=10&offset=50\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetApiActivity",
        "framework": "1password.local",
        "functionality": "Retrieve a list of API Requests that have been made.",
        "api_arguments": {},
        "description": "",
        "path": "/activity",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Activity"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://1password.local/activity?limit=10&offset=50\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"Authorization: Bearer REPLACE_BEARER_TOKEN\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetApiActivity",
        "framework": "1password.local",
        "functionality": "Retrieve a list of API Requests that have been made.",
        "api_arguments": {},
        "description": "",
        "path": "/activity",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Activity"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"http://1password.local/activity?limit=10&offset=50\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetApiActivity",
        "framework": "1password.local",
        "functionality": "Retrieve a list of API Requests that have been made.",
        "api_arguments": {},
        "description": "",
        "path": "/activity",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Activity"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url http://localhost:8080/health",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetServerHealth",
        "framework": "1password.local",
        "functionality": "Get state of the server and its dependencies.",
        "api_arguments": {},
        "description": "",
        "path": "/health",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://localhost:8080/health\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetServerHealth",
        "framework": "1password.local",
        "functionality": "Get state of the server and its dependencies.",
        "api_arguments": {},
        "description": "",
        "path": "/health",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://localhost:8080/health'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetServerHealth",
        "framework": "1password.local",
        "functionality": "Get state of the server and its dependencies.",
        "api_arguments": {},
        "description": "",
        "path": "/health",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8080\")\n\nconn.request(\"GET\", \"/health\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetServerHealth",
        "framework": "1password.local",
        "functionality": "Get state of the server and its dependencies.",
        "api_arguments": {},
        "description": "",
        "path": "/health",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://localhost:8080/health\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetServerHealth",
        "framework": "1password.local",
        "functionality": "Get state of the server and its dependencies.",
        "api_arguments": {},
        "description": "",
        "path": "/health",
        "method": "get",
        "lang": "go",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://localhost:8080/health\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetServerHealth",
        "framework": "1password.local",
        "functionality": "Get state of the server and its dependencies.",
        "api_arguments": {},
        "description": "",
        "path": "/health",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8080\",\n  CURLOPT_URL => \"http://localhost:8080/health\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetServerHealth",
        "framework": "1password.local",
        "functionality": "Get state of the server and its dependencies.",
        "api_arguments": {},
        "description": "",
        "path": "/health",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"http://localhost:8080/health\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetServerHealth",
        "framework": "1password.local",
        "functionality": "Get state of the server and its dependencies.",
        "api_arguments": {},
        "description": "",
        "path": "/health",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://localhost:8080/health\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetServerHealth",
        "framework": "1password.local",
        "functionality": "Get state of the server and its dependencies.",
        "api_arguments": {},
        "description": "",
        "path": "/health",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"http://localhost:8080/health\");\n\nxhr.send(data);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetServerHealth",
        "framework": "1password.local",
        "functionality": "Get state of the server and its dependencies.",
        "api_arguments": {},
        "description": "",
        "path": "/health",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url http://localhost:8080/heartbeat",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetHeartbeat",
        "framework": "1password.local",
        "functionality": "Ping the server for liveness",
        "api_arguments": {},
        "description": "",
        "path": "/heartbeat",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://localhost:8080/heartbeat\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetHeartbeat",
        "framework": "1password.local",
        "functionality": "Ping the server for liveness",
        "api_arguments": {},
        "description": "",
        "path": "/heartbeat",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://localhost:8080/heartbeat'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetHeartbeat",
        "framework": "1password.local",
        "functionality": "Ping the server for liveness",
        "api_arguments": {},
        "description": "",
        "path": "/heartbeat",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8080\")\n\nconn.request(\"GET\", \"/heartbeat\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetHeartbeat",
        "framework": "1password.local",
        "functionality": "Ping the server for liveness",
        "api_arguments": {},
        "description": "",
        "path": "/heartbeat",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://localhost:8080/heartbeat\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetHeartbeat",
        "framework": "1password.local",
        "functionality": "Ping the server for liveness",
        "api_arguments": {},
        "description": "",
        "path": "/heartbeat",
        "method": "get",
        "lang": "go",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://localhost:8080/heartbeat\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetHeartbeat",
        "framework": "1password.local",
        "functionality": "Ping the server for liveness",
        "api_arguments": {},
        "description": "",
        "path": "/heartbeat",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8080\",\n  CURLOPT_URL => \"http://localhost:8080/heartbeat\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetHeartbeat",
        "framework": "1password.local",
        "functionality": "Ping the server for liveness",
        "api_arguments": {},
        "description": "",
        "path": "/heartbeat",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"http://localhost:8080/heartbeat\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetHeartbeat",
        "framework": "1password.local",
        "functionality": "Ping the server for liveness",
        "api_arguments": {},
        "description": "",
        "path": "/heartbeat",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://localhost:8080/heartbeat\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetHeartbeat",
        "framework": "1password.local",
        "functionality": "Ping the server for liveness",
        "api_arguments": {},
        "description": "",
        "path": "/heartbeat",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"http://localhost:8080/heartbeat\");\n\nxhr.send(data);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetHeartbeat",
        "framework": "1password.local",
        "functionality": "Ping the server for liveness",
        "api_arguments": {},
        "description": "",
        "path": "/heartbeat",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Health"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url http://localhost:8080/metrics",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetPrometheusMetrics",
        "framework": "1password.local",
        "functionality": "Query server for exposed Prometheus metrics",
        "api_arguments": {},
        "description": "See Prometheus documentation for a complete data model.",
        "path": "/metrics",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Metrics"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://localhost:8080/metrics\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetPrometheusMetrics",
        "framework": "1password.local",
        "functionality": "Query server for exposed Prometheus metrics",
        "api_arguments": {},
        "description": "See Prometheus documentation for a complete data model.",
        "path": "/metrics",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Metrics"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {method: 'GET', url: 'http://localhost:8080/metrics'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetPrometheusMetrics",
        "framework": "1password.local",
        "functionality": "Query server for exposed Prometheus metrics",
        "api_arguments": {},
        "description": "See Prometheus documentation for a complete data model.",
        "path": "/metrics",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Metrics"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8080\")\n\nconn.request(\"GET\", \"/metrics\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetPrometheusMetrics",
        "framework": "1password.local",
        "functionality": "Query server for exposed Prometheus metrics",
        "api_arguments": {},
        "description": "See Prometheus documentation for a complete data model.",
        "path": "/metrics",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Metrics"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://localhost:8080/metrics\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetPrometheusMetrics",
        "framework": "1password.local",
        "functionality": "Query server for exposed Prometheus metrics",
        "api_arguments": {},
        "description": "See Prometheus documentation for a complete data model.",
        "path": "/metrics",
        "method": "get",
        "lang": "go",
        "domain": [
            "Metrics"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://localhost:8080/metrics\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetPrometheusMetrics",
        "framework": "1password.local",
        "functionality": "Query server for exposed Prometheus metrics",
        "api_arguments": {},
        "description": "See Prometheus documentation for a complete data model.",
        "path": "/metrics",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Metrics"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_PORT => \"8080\",\n  CURLOPT_URL => \"http://localhost:8080/metrics\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetPrometheusMetrics",
        "framework": "1password.local",
        "functionality": "Query server for exposed Prometheus metrics",
        "api_arguments": {},
        "description": "See Prometheus documentation for a complete data model.",
        "path": "/metrics",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Metrics"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"http://localhost:8080/metrics\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetPrometheusMetrics",
        "framework": "1password.local",
        "functionality": "Query server for exposed Prometheus metrics",
        "api_arguments": {},
        "description": "See Prometheus documentation for a complete data model.",
        "path": "/metrics",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Metrics"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://localhost:8080/metrics\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetPrometheusMetrics",
        "framework": "1password.local",
        "functionality": "Query server for exposed Prometheus metrics",
        "api_arguments": {},
        "description": "See Prometheus documentation for a complete data model.",
        "path": "/metrics",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Metrics"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"http://localhost:8080/metrics\");\n\nxhr.send(data);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetPrometheusMetrics",
        "framework": "1password.local",
        "functionality": "Query server for exposed Prometheus metrics",
        "api_arguments": {},
        "description": "See Prometheus documentation for a complete data model.",
        "path": "/metrics",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Metrics"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url 'http://1password.local/vaults?filter=name%20eq%20%22Some%20Vault%20Name%22' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaults",
        "framework": "1password.local",
        "functionality": "Get all Vaults",
        "api_arguments": {},
        "description": "",
        "path": "/vaults",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://1password.local/vaults?filter=name%20eq%20%22Some%20Vault%20Name%22\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaults",
        "framework": "1password.local",
        "functionality": "Get all Vaults",
        "api_arguments": {},
        "description": "",
        "path": "/vaults",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://1password.local/vaults',\n  qs: {filter: 'name eq \"Some Vault Name\"'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaults",
        "framework": "1password.local",
        "functionality": "Get all Vaults",
        "api_arguments": {},
        "description": "",
        "path": "/vaults",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPConnection(\"1password.local\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/vaults?filter=name%20eq%20%22Some%20Vault%20Name%22\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaults",
        "framework": "1password.local",
        "functionality": "Get all Vaults",
        "api_arguments": {},
        "description": "",
        "path": "/vaults",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://1password.local/vaults?filter=name%20eq%20%22Some%20Vault%20Name%22\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaults",
        "framework": "1password.local",
        "functionality": "Get all Vaults",
        "api_arguments": {},
        "description": "",
        "path": "/vaults",
        "method": "get",
        "lang": "go",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://1password.local/vaults?filter=name%20eq%20%22Some%20Vault%20Name%22\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Authorization\"] = 'Bearer REPLACE_BEARER_TOKEN'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaults",
        "framework": "1password.local",
        "functionality": "Get all Vaults",
        "api_arguments": {},
        "description": "",
        "path": "/vaults",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://1password.local/vaults?filter=name%20eq%20%22Some%20Vault%20Name%22\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaults",
        "framework": "1password.local",
        "functionality": "Get all Vaults",
        "api_arguments": {},
        "description": "",
        "path": "/vaults",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"http://1password.local/vaults?filter=name%20eq%20%22Some%20Vault%20Name%22\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaults",
        "framework": "1password.local",
        "functionality": "Get all Vaults",
        "api_arguments": {},
        "description": "",
        "path": "/vaults",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://1password.local/vaults?filter=name%20eq%20%22Some%20Vault%20Name%22\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"Authorization: Bearer REPLACE_BEARER_TOKEN\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaults",
        "framework": "1password.local",
        "functionality": "Get all Vaults",
        "api_arguments": {},
        "description": "",
        "path": "/vaults",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"http://1password.local/vaults?filter=name%20eq%20%22Some%20Vault%20Name%22\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaults",
        "framework": "1password.local",
        "functionality": "Get all Vaults",
        "api_arguments": {},
        "description": "",
        "path": "/vaults",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url http://1password.local/vaults/%7BvaultUuid%7D \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultById",
        "framework": "1password.local",
        "functionality": "Get Vault details and metadata",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://1password.local/vaults/%7BvaultUuid%7D\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultById",
        "framework": "1password.local",
        "functionality": "Get Vault details and metadata",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://1password.local/vaults/%7BvaultUuid%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultById",
        "framework": "1password.local",
        "functionality": "Get Vault details and metadata",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPConnection(\"1password.local\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/vaults/%7BvaultUuid%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultById",
        "framework": "1password.local",
        "functionality": "Get Vault details and metadata",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://1password.local/vaults/%7BvaultUuid%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultById",
        "framework": "1password.local",
        "functionality": "Get Vault details and metadata",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}",
        "method": "get",
        "lang": "go",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://1password.local/vaults/%7BvaultUuid%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Authorization\"] = 'Bearer REPLACE_BEARER_TOKEN'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultById",
        "framework": "1password.local",
        "functionality": "Get Vault details and metadata",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://1password.local/vaults/%7BvaultUuid%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultById",
        "framework": "1password.local",
        "functionality": "Get Vault details and metadata",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"http://1password.local/vaults/%7BvaultUuid%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultById",
        "framework": "1password.local",
        "functionality": "Get Vault details and metadata",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://1password.local/vaults/%7BvaultUuid%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"Authorization: Bearer REPLACE_BEARER_TOKEN\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultById",
        "framework": "1password.local",
        "functionality": "Get Vault details and metadata",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"http://1password.local/vaults/%7BvaultUuid%7D\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultById",
        "framework": "1password.local",
        "functionality": "Get Vault details and metadata",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Vaults"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url 'http://1password.local/vaults/%7BvaultUuid%7D/items?filter=title%20eq%20%22Some%20Item%20Name%22' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItems",
        "framework": "1password.local",
        "functionality": "Get all items for inside a Vault",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://1password.local/vaults/%7BvaultUuid%7D/items?filter=title%20eq%20%22Some%20Item%20Name%22\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItems",
        "framework": "1password.local",
        "functionality": "Get all items for inside a Vault",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://1password.local/vaults/%7BvaultUuid%7D/items',\n  qs: {filter: 'title eq \"Some Item Name\"'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItems",
        "framework": "1password.local",
        "functionality": "Get all items for inside a Vault",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPConnection(\"1password.local\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/vaults/%7BvaultUuid%7D/items?filter=title%20eq%20%22Some%20Item%20Name%22\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItems",
        "framework": "1password.local",
        "functionality": "Get all items for inside a Vault",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://1password.local/vaults/%7BvaultUuid%7D/items?filter=title%20eq%20%22Some%20Item%20Name%22\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItems",
        "framework": "1password.local",
        "functionality": "Get all items for inside a Vault",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "get",
        "lang": "go",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://1password.local/vaults/%7BvaultUuid%7D/items?filter=title%20eq%20%22Some%20Item%20Name%22\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Authorization\"] = 'Bearer REPLACE_BEARER_TOKEN'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItems",
        "framework": "1password.local",
        "functionality": "Get all items for inside a Vault",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://1password.local/vaults/%7BvaultUuid%7D/items?filter=title%20eq%20%22Some%20Item%20Name%22\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItems",
        "framework": "1password.local",
        "functionality": "Get all items for inside a Vault",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"http://1password.local/vaults/%7BvaultUuid%7D/items?filter=title%20eq%20%22Some%20Item%20Name%22\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItems",
        "framework": "1password.local",
        "functionality": "Get all items for inside a Vault",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://1password.local/vaults/%7BvaultUuid%7D/items?filter=title%20eq%20%22Some%20Item%20Name%22\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"Authorization: Bearer REPLACE_BEARER_TOKEN\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItems",
        "framework": "1password.local",
        "functionality": "Get all items for inside a Vault",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"http://1password.local/vaults/%7BvaultUuid%7D/items?filter=title%20eq%20%22Some%20Item%20Name%22\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItems",
        "framework": "1password.local",
        "functionality": "Get all items for inside a Vault",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "curl --request POST \\\n  --url http://1password.local/vaults/%7BvaultUuid%7D/items \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"category\":\"LOGIN\",\"favorite\":false,\"id\":\"string\",\"tags\":[\"string\"],\"title\":\"string\",\"urls\":[{\"href\":\"https://example.com\",\"primary\":true},{\"href\":\"https://example.org\"}],\"vault\":{\"id\":\"string\"},\"version\":0,\"fields\":[{\"generate\":false,\"id\":\"string\",\"label\":\"string\",\"purpose\":\"\",\"recipe\":{\"characterSets\":[\"LETTERS\"],\"excludeCharacters\":\"abc1\",\"length\":32},\"section\":{\"id\":\"string\"},\"type\":\"STRING\",\"value\":\"string\"}],\"files\":[{\"content\":\"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\",\"content_path\":\"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\",\"id\":\"6r65pjq33banznomn7q22sj44e\",\"name\":\"foo.txt\",\"size\":35}],\"sections\":[{\"id\":\"string\",\"label\":\"string\"}]}'",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "CreateVaultItem",
        "framework": "1password.local",
        "functionality": "Create a new Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "post",
        "lang": "cURL",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"category\\\":\\\"LOGIN\\\",\\\"favorite\\\":false,\\\"id\\\":\\\"string\\\",\\\"tags\\\":[\\\"string\\\"],\\\"title\\\":\\\"string\\\",\\\"urls\\\":[{\\\"href\\\":\\\"https://example.com\\\",\\\"primary\\\":true},{\\\"href\\\":\\\"https://example.org\\\"}],\\\"vault\\\":{\\\"id\\\":\\\"string\\\"},\\\"version\\\":0,\\\"fields\\\":[{\\\"generate\\\":false,\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"purpose\\\":\\\"\\\",\\\"recipe\\\":{\\\"characterSets\\\":[\\\"LETTERS\\\"],\\\"excludeCharacters\\\":\\\"abc1\\\",\\\"length\\\":32},\\\"section\\\":{\\\"id\\\":\\\"string\\\"},\\\"type\\\":\\\"STRING\\\",\\\"value\\\":\\\"string\\\"}],\\\"files\\\":[{\\\"content\\\":\\\"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\\\",\\\"content_path\\\":\\\"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\\\",\\\"id\\\":\\\"6r65pjq33banznomn7q22sj44e\\\",\\\"name\\\":\\\"foo.txt\\\",\\\"size\\\":35}],\\\"sections\\\":[{\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\"}]}\");\nRequest request = new Request.Builder()\n  .url(\"http://1password.local/vaults/%7BvaultUuid%7D/items\")\n  .post(body)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "CreateVaultItem",
        "framework": "1password.local",
        "functionality": "Create a new Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "post",
        "lang": "Java",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'http://1password.local/vaults/%7BvaultUuid%7D/items',\n  headers: {\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN',\n    'content-type': 'application/json'\n  },\n  body: {\n    category: 'LOGIN',\n    favorite: false,\n    id: 'string',\n    tags: ['string'],\n    title: 'string',\n    urls: [{href: 'https://example.com', primary: true}, {href: 'https://example.org'}],\n    vault: {id: 'string'},\n    version: 0,\n    fields: [\n      {\n        generate: false,\n        id: 'string',\n        label: 'string',\n        purpose: '',\n        recipe: {characterSets: ['LETTERS'], excludeCharacters: 'abc1', length: 32},\n        section: {id: 'string'},\n        type: 'STRING',\n        value: 'string'\n      }\n    ],\n    files: [\n      {\n        content: 'VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=',\n        content_path: 'v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content',\n        id: '6r65pjq33banznomn7q22sj44e',\n        name: 'foo.txt',\n        size: 35\n      }\n    ],\n    sections: [{id: 'string', label: 'string'}]\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "CreateVaultItem",
        "framework": "1password.local",
        "functionality": "Create a new Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "post",
        "lang": "Node",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPConnection(\"1password.local\")\n\npayload = \"{\\\"category\\\":\\\"LOGIN\\\",\\\"favorite\\\":false,\\\"id\\\":\\\"string\\\",\\\"tags\\\":[\\\"string\\\"],\\\"title\\\":\\\"string\\\",\\\"urls\\\":[{\\\"href\\\":\\\"https://example.com\\\",\\\"primary\\\":true},{\\\"href\\\":\\\"https://example.org\\\"}],\\\"vault\\\":{\\\"id\\\":\\\"string\\\"},\\\"version\\\":0,\\\"fields\\\":[{\\\"generate\\\":false,\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"purpose\\\":\\\"\\\",\\\"recipe\\\":{\\\"characterSets\\\":[\\\"LETTERS\\\"],\\\"excludeCharacters\\\":\\\"abc1\\\",\\\"length\\\":32},\\\"section\\\":{\\\"id\\\":\\\"string\\\"},\\\"type\\\":\\\"STRING\\\",\\\"value\\\":\\\"string\\\"}],\\\"files\\\":[{\\\"content\\\":\\\"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\\\",\\\"content_path\\\":\\\"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\\\",\\\"id\\\":\\\"6r65pjq33banznomn7q22sj44e\\\",\\\"name\\\":\\\"foo.txt\\\",\\\"size\\\":35}],\\\"sections\\\":[{\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\"}]}\"\n\nheaders = {\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"POST\", \"/vaults/%7BvaultUuid%7D/items\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "CreateVaultItem",
        "framework": "1password.local",
        "functionality": "Create a new Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "post",
        "lang": "Python",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://1password.local/vaults/%7BvaultUuid%7D/items\"\n\n\tpayload := strings.NewReader(\"{\\\"category\\\":\\\"LOGIN\\\",\\\"favorite\\\":false,\\\"id\\\":\\\"string\\\",\\\"tags\\\":[\\\"string\\\"],\\\"title\\\":\\\"string\\\",\\\"urls\\\":[{\\\"href\\\":\\\"https://example.com\\\",\\\"primary\\\":true},{\\\"href\\\":\\\"https://example.org\\\"}],\\\"vault\\\":{\\\"id\\\":\\\"string\\\"},\\\"version\\\":0,\\\"fields\\\":[{\\\"generate\\\":false,\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"purpose\\\":\\\"\\\",\\\"recipe\\\":{\\\"characterSets\\\":[\\\"LETTERS\\\"],\\\"excludeCharacters\\\":\\\"abc1\\\",\\\"length\\\":32},\\\"section\\\":{\\\"id\\\":\\\"string\\\"},\\\"type\\\":\\\"STRING\\\",\\\"value\\\":\\\"string\\\"}],\\\"files\\\":[{\\\"content\\\":\\\"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\\\",\\\"content_path\\\":\\\"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\\\",\\\"id\\\":\\\"6r65pjq33banznomn7q22sj44e\\\",\\\"name\\\":\\\"foo.txt\\\",\\\"size\\\":35}],\\\"sections\\\":[{\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\"}]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "CreateVaultItem",
        "framework": "1password.local",
        "functionality": "Create a new Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "post",
        "lang": "go",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://1password.local/vaults/%7BvaultUuid%7D/items\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Authorization\"] = 'Bearer REPLACE_BEARER_TOKEN'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"category\\\":\\\"LOGIN\\\",\\\"favorite\\\":false,\\\"id\\\":\\\"string\\\",\\\"tags\\\":[\\\"string\\\"],\\\"title\\\":\\\"string\\\",\\\"urls\\\":[{\\\"href\\\":\\\"https://example.com\\\",\\\"primary\\\":true},{\\\"href\\\":\\\"https://example.org\\\"}],\\\"vault\\\":{\\\"id\\\":\\\"string\\\"},\\\"version\\\":0,\\\"fields\\\":[{\\\"generate\\\":false,\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"purpose\\\":\\\"\\\",\\\"recipe\\\":{\\\"characterSets\\\":[\\\"LETTERS\\\"],\\\"excludeCharacters\\\":\\\"abc1\\\",\\\"length\\\":32},\\\"section\\\":{\\\"id\\\":\\\"string\\\"},\\\"type\\\":\\\"STRING\\\",\\\"value\\\":\\\"string\\\"}],\\\"files\\\":[{\\\"content\\\":\\\"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\\\",\\\"content_path\\\":\\\"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\\\",\\\"id\\\":\\\"6r65pjq33banznomn7q22sj44e\\\",\\\"name\\\":\\\"foo.txt\\\",\\\"size\\\":35}],\\\"sections\\\":[{\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\"}]}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "CreateVaultItem",
        "framework": "1password.local",
        "functionality": "Create a new Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "post",
        "lang": "Ruby",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://1password.local/vaults/%7BvaultUuid%7D/items\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"category\\\":\\\"LOGIN\\\",\\\"favorite\\\":false,\\\"id\\\":\\\"string\\\",\\\"tags\\\":[\\\"string\\\"],\\\"title\\\":\\\"string\\\",\\\"urls\\\":[{\\\"href\\\":\\\"https://example.com\\\",\\\"primary\\\":true},{\\\"href\\\":\\\"https://example.org\\\"}],\\\"vault\\\":{\\\"id\\\":\\\"string\\\"},\\\"version\\\":0,\\\"fields\\\":[{\\\"generate\\\":false,\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"purpose\\\":\\\"\\\",\\\"recipe\\\":{\\\"characterSets\\\":[\\\"LETTERS\\\"],\\\"excludeCharacters\\\":\\\"abc1\\\",\\\"length\\\":32},\\\"section\\\":{\\\"id\\\":\\\"string\\\"},\\\"type\\\":\\\"STRING\\\",\\\"value\\\":\\\"string\\\"}],\\\"files\\\":[{\\\"content\\\":\\\"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\\\",\\\"content_path\\\":\\\"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\\\",\\\"id\\\":\\\"6r65pjq33banznomn7q22sj44e\\\",\\\"name\\\":\\\"foo.txt\\\",\\\"size\\\":35}],\\\"sections\\\":[{\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\"}]}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "CreateVaultItem",
        "framework": "1password.local",
        "functionality": "Create a new Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "post",
        "lang": "PHP",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"category\": \"LOGIN\",\n  \"favorite\": false,\n  \"id\": \"string\",\n  \"tags\": [\"string\"],\n  \"title\": \"string\",\n  \"urls\": [[\n      \"href\": \"https://example.com\",\n      \"primary\": true\n    ], [\"href\": \"https://example.org\"]],\n  \"vault\": [\"id\": \"string\"],\n  \"version\": 0,\n  \"fields\": [\n    [\n      \"generate\": false,\n      \"id\": \"string\",\n      \"label\": \"string\",\n      \"purpose\": \"\",\n      \"recipe\": [\n        \"characterSets\": [\"LETTERS\"],\n        \"excludeCharacters\": \"abc1\",\n        \"length\": 32\n      ],\n      \"section\": [\"id\": \"string\"],\n      \"type\": \"STRING\",\n      \"value\": \"string\"\n    ]\n  ],\n  \"files\": [\n    [\n      \"content\": \"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\",\n      \"content_path\": \"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\",\n      \"id\": \"6r65pjq33banznomn7q22sj44e\",\n      \"name\": \"foo.txt\",\n      \"size\": 35\n    ]\n  ],\n  \"sections\": [\n    [\n      \"id\": \"string\",\n      \"label\": \"string\"\n    ]\n  ]\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"http://1password.local/vaults/%7BvaultUuid%7D/items\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "CreateVaultItem",
        "framework": "1password.local",
        "functionality": "Create a new Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "post",
        "lang": "swift",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://1password.local/vaults/%7BvaultUuid%7D/items\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"Authorization: Bearer REPLACE_BEARER_TOKEN\");\nheaders = curl_slist_append(headers, \"content-type: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"category\\\":\\\"LOGIN\\\",\\\"favorite\\\":false,\\\"id\\\":\\\"string\\\",\\\"tags\\\":[\\\"string\\\"],\\\"title\\\":\\\"string\\\",\\\"urls\\\":[{\\\"href\\\":\\\"https://example.com\\\",\\\"primary\\\":true},{\\\"href\\\":\\\"https://example.org\\\"}],\\\"vault\\\":{\\\"id\\\":\\\"string\\\"},\\\"version\\\":0,\\\"fields\\\":[{\\\"generate\\\":false,\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"purpose\\\":\\\"\\\",\\\"recipe\\\":{\\\"characterSets\\\":[\\\"LETTERS\\\"],\\\"excludeCharacters\\\":\\\"abc1\\\",\\\"length\\\":32},\\\"section\\\":{\\\"id\\\":\\\"string\\\"},\\\"type\\\":\\\"STRING\\\",\\\"value\\\":\\\"string\\\"}],\\\"files\\\":[{\\\"content\\\":\\\"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\\\",\\\"content_path\\\":\\\"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\\\",\\\"id\\\":\\\"6r65pjq33banznomn7q22sj44e\\\",\\\"name\\\":\\\"foo.txt\\\",\\\"size\\\":35}],\\\"sections\\\":[{\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\"}]}\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "CreateVaultItem",
        "framework": "1password.local",
        "functionality": "Create a new Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "post",
        "lang": "libcurl",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const data = JSON.stringify({\n  \"category\": \"LOGIN\",\n  \"favorite\": false,\n  \"id\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"title\": \"string\",\n  \"urls\": [\n    {\n      \"href\": \"https://example.com\",\n      \"primary\": true\n    },\n    {\n      \"href\": \"https://example.org\"\n    }\n  ],\n  \"vault\": {\n    \"id\": \"string\"\n  },\n  \"version\": 0,\n  \"fields\": [\n    {\n      \"generate\": false,\n      \"id\": \"string\",\n      \"label\": \"string\",\n      \"purpose\": \"\",\n      \"recipe\": {\n        \"characterSets\": [\n          \"LETTERS\"\n        ],\n        \"excludeCharacters\": \"abc1\",\n        \"length\": 32\n      },\n      \"section\": {\n        \"id\": \"string\"\n      },\n      \"type\": \"STRING\",\n      \"value\": \"string\"\n    }\n  ],\n  \"files\": [\n    {\n      \"content\": \"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\",\n      \"content_path\": \"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\",\n      \"id\": \"6r65pjq33banznomn7q22sj44e\",\n      \"name\": \"foo.txt\",\n      \"size\": 35\n    }\n  ],\n  \"sections\": [\n    {\n      \"id\": \"string\",\n      \"label\": \"string\"\n    }\n  ]\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"http://1password.local/vaults/%7BvaultUuid%7D/items\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "CreateVaultItem",
        "framework": "1password.local",
        "functionality": "Create a new Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items",
        "method": "post",
        "lang": "javascript xhr",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "curl --request DELETE \\\n  --url http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DeleteVaultItem",
        "framework": "1password.local",
        "functionality": "Delete an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "delete",
        "lang": "cURL",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\")\n  .delete(null)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DeleteVaultItem",
        "framework": "1password.local",
        "functionality": "Delete an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "delete",
        "lang": "Java",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DeleteVaultItem",
        "framework": "1password.local",
        "functionality": "Delete an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "delete",
        "lang": "Node",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPConnection(\"1password.local\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"DELETE\", \"/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DeleteVaultItem",
        "framework": "1password.local",
        "functionality": "Delete an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "delete",
        "lang": "Python",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DeleteVaultItem",
        "framework": "1password.local",
        "functionality": "Delete an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "delete",
        "lang": "go",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Authorization\"] = 'Bearer REPLACE_BEARER_TOKEN'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DeleteVaultItem",
        "framework": "1password.local",
        "functionality": "Delete an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "delete",
        "lang": "Ruby",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DeleteVaultItem",
        "framework": "1password.local",
        "functionality": "Delete an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "delete",
        "lang": "PHP",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DeleteVaultItem",
        "framework": "1password.local",
        "functionality": "Delete an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "delete",
        "lang": "swift",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"Authorization: Bearer REPLACE_BEARER_TOKEN\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DeleteVaultItem",
        "framework": "1password.local",
        "functionality": "Delete an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "delete",
        "lang": "libcurl",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DeleteVaultItem",
        "framework": "1password.local",
        "functionality": "Delete an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "delete",
        "lang": "javascript xhr",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItemById",
        "framework": "1password.local",
        "functionality": "Get the details of an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItemById",
        "framework": "1password.local",
        "functionality": "Get the details of an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItemById",
        "framework": "1password.local",
        "functionality": "Get the details of an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPConnection(\"1password.local\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItemById",
        "framework": "1password.local",
        "functionality": "Get the details of an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItemById",
        "framework": "1password.local",
        "functionality": "Get the details of an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "get",
        "lang": "go",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Authorization\"] = 'Bearer REPLACE_BEARER_TOKEN'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItemById",
        "framework": "1password.local",
        "functionality": "Get the details of an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItemById",
        "framework": "1password.local",
        "functionality": "Get the details of an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItemById",
        "framework": "1password.local",
        "functionality": "Get the details of an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"Authorization: Bearer REPLACE_BEARER_TOKEN\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItemById",
        "framework": "1password.local",
        "functionality": "Get the details of an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetVaultItemById",
        "framework": "1password.local",
        "functionality": "Get the details of an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "curl --request PATCH \\\n  --url http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"op\":\"add\",\"path\":\"/fields/06gnn2b95example10q91512p5/label\",\"value\":{}}]'",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "PatchVaultItem",
        "framework": "1password.local",
        "functionality": "Update a subset of Item attributes",
        "api_arguments": {},
        "description": "Applies a modified [RFC6902 JSON Patch](https://tools.ietf.org/html/rfc6902) document to an Item or ItemField. This endpoint only supports `add`, `remove` and `replace` operations.\n\nWhen modifying a specific ItemField, the ItemField's ID in the `path` attribute of the operation object: `/fields/{fieldId}`\n",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "patch",
        "lang": "cURL",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"[{\\\"op\\\":\\\"add\\\",\\\"path\\\":\\\"/fields/06gnn2b95example10q91512p5/label\\\",\\\"value\\\":{}}]\");\nRequest request = new Request.Builder()\n  .url(\"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\")\n  .patch(body)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "PatchVaultItem",
        "framework": "1password.local",
        "functionality": "Update a subset of Item attributes",
        "api_arguments": {},
        "description": "Applies a modified [RFC6902 JSON Patch](https://tools.ietf.org/html/rfc6902) document to an Item or ItemField. This endpoint only supports `add`, `remove` and `replace` operations.\n\nWhen modifying a specific ItemField, the ItemField's ID in the `path` attribute of the operation object: `/fields/{fieldId}`\n",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "patch",
        "lang": "Java",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D',\n  headers: {\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN',\n    'content-type': 'application/json'\n  },\n  body: [{op: 'add', path: '/fields/06gnn2b95example10q91512p5/label', value: {}}],\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "PatchVaultItem",
        "framework": "1password.local",
        "functionality": "Update a subset of Item attributes",
        "api_arguments": {},
        "description": "Applies a modified [RFC6902 JSON Patch](https://tools.ietf.org/html/rfc6902) document to an Item or ItemField. This endpoint only supports `add`, `remove` and `replace` operations.\n\nWhen modifying a specific ItemField, the ItemField's ID in the `path` attribute of the operation object: `/fields/{fieldId}`\n",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "patch",
        "lang": "Node",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPConnection(\"1password.local\")\n\npayload = \"[{\\\"op\\\":\\\"add\\\",\\\"path\\\":\\\"/fields/06gnn2b95example10q91512p5/label\\\",\\\"value\\\":{}}]\"\n\nheaders = {\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"PATCH\", \"/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "PatchVaultItem",
        "framework": "1password.local",
        "functionality": "Update a subset of Item attributes",
        "api_arguments": {},
        "description": "Applies a modified [RFC6902 JSON Patch](https://tools.ietf.org/html/rfc6902) document to an Item or ItemField. This endpoint only supports `add`, `remove` and `replace` operations.\n\nWhen modifying a specific ItemField, the ItemField's ID in the `path` attribute of the operation object: `/fields/{fieldId}`\n",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "patch",
        "lang": "Python",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\"\n\n\tpayload := strings.NewReader(\"[{\\\"op\\\":\\\"add\\\",\\\"path\\\":\\\"/fields/06gnn2b95example10q91512p5/label\\\",\\\"value\\\":{}}]\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "PatchVaultItem",
        "framework": "1password.local",
        "functionality": "Update a subset of Item attributes",
        "api_arguments": {},
        "description": "Applies a modified [RFC6902 JSON Patch](https://tools.ietf.org/html/rfc6902) document to an Item or ItemField. This endpoint only supports `add`, `remove` and `replace` operations.\n\nWhen modifying a specific ItemField, the ItemField's ID in the `path` attribute of the operation object: `/fields/{fieldId}`\n",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "patch",
        "lang": "go",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Authorization\"] = 'Bearer REPLACE_BEARER_TOKEN'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"[{\\\"op\\\":\\\"add\\\",\\\"path\\\":\\\"/fields/06gnn2b95example10q91512p5/label\\\",\\\"value\\\":{}}]\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "PatchVaultItem",
        "framework": "1password.local",
        "functionality": "Update a subset of Item attributes",
        "api_arguments": {},
        "description": "Applies a modified [RFC6902 JSON Patch](https://tools.ietf.org/html/rfc6902) document to an Item or ItemField. This endpoint only supports `add`, `remove` and `replace` operations.\n\nWhen modifying a specific ItemField, the ItemField's ID in the `path` attribute of the operation object: `/fields/{fieldId}`\n",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "patch",
        "lang": "Ruby",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"[{\\\"op\\\":\\\"add\\\",\\\"path\\\":\\\"/fields/06gnn2b95example10q91512p5/label\\\",\\\"value\\\":{}}]\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "PatchVaultItem",
        "framework": "1password.local",
        "functionality": "Update a subset of Item attributes",
        "api_arguments": {},
        "description": "Applies a modified [RFC6902 JSON Patch](https://tools.ietf.org/html/rfc6902) document to an Item or ItemField. This endpoint only supports `add`, `remove` and `replace` operations.\n\nWhen modifying a specific ItemField, the ItemField's ID in the `path` attribute of the operation object: `/fields/{fieldId}`\n",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "patch",
        "lang": "PHP",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  [\n    \"op\": \"add\",\n    \"path\": \"/fields/06gnn2b95example10q91512p5/label\",\n    \"value\": []\n  ]\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "PatchVaultItem",
        "framework": "1password.local",
        "functionality": "Update a subset of Item attributes",
        "api_arguments": {},
        "description": "Applies a modified [RFC6902 JSON Patch](https://tools.ietf.org/html/rfc6902) document to an Item or ItemField. This endpoint only supports `add`, `remove` and `replace` operations.\n\nWhen modifying a specific ItemField, the ItemField's ID in the `path` attribute of the operation object: `/fields/{fieldId}`\n",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "patch",
        "lang": "swift",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"Authorization: Bearer REPLACE_BEARER_TOKEN\");\nheaders = curl_slist_append(headers, \"content-type: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"[{\\\"op\\\":\\\"add\\\",\\\"path\\\":\\\"/fields/06gnn2b95example10q91512p5/label\\\",\\\"value\\\":{}}]\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "PatchVaultItem",
        "framework": "1password.local",
        "functionality": "Update a subset of Item attributes",
        "api_arguments": {},
        "description": "Applies a modified [RFC6902 JSON Patch](https://tools.ietf.org/html/rfc6902) document to an Item or ItemField. This endpoint only supports `add`, `remove` and `replace` operations.\n\nWhen modifying a specific ItemField, the ItemField's ID in the `path` attribute of the operation object: `/fields/{fieldId}`\n",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "patch",
        "lang": "libcurl",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const data = JSON.stringify([\n  {\n    \"op\": \"add\",\n    \"path\": \"/fields/06gnn2b95example10q91512p5/label\",\n    \"value\": {}\n  }\n]);\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "PatchVaultItem",
        "framework": "1password.local",
        "functionality": "Update a subset of Item attributes",
        "api_arguments": {},
        "description": "Applies a modified [RFC6902 JSON Patch](https://tools.ietf.org/html/rfc6902) document to an Item or ItemField. This endpoint only supports `add`, `remove` and `replace` operations.\n\nWhen modifying a specific ItemField, the ItemField's ID in the `path` attribute of the operation object: `/fields/{fieldId}`\n",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "patch",
        "lang": "javascript xhr",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "curl --request PUT \\\n  --url http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n  --header 'content-type: application/json' \\\n  --data '{\"category\":\"LOGIN\",\"favorite\":false,\"id\":\"string\",\"tags\":[\"string\"],\"title\":\"string\",\"urls\":[{\"href\":\"https://example.com\",\"primary\":true},{\"href\":\"https://example.org\"}],\"vault\":{\"id\":\"string\"},\"version\":0,\"fields\":[{\"generate\":false,\"id\":\"string\",\"label\":\"string\",\"purpose\":\"\",\"recipe\":{\"characterSets\":[\"LETTERS\"],\"excludeCharacters\":\"abc1\",\"length\":32},\"section\":{\"id\":\"string\"},\"type\":\"STRING\",\"value\":\"string\"}],\"files\":[{\"content\":\"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\",\"content_path\":\"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\",\"id\":\"6r65pjq33banznomn7q22sj44e\",\"name\":\"foo.txt\",\"size\":35}],\"sections\":[{\"id\":\"string\",\"label\":\"string\"}]}'",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "UpdateVaultItem",
        "framework": "1password.local",
        "functionality": "Update an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "put",
        "lang": "cURL",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"category\\\":\\\"LOGIN\\\",\\\"favorite\\\":false,\\\"id\\\":\\\"string\\\",\\\"tags\\\":[\\\"string\\\"],\\\"title\\\":\\\"string\\\",\\\"urls\\\":[{\\\"href\\\":\\\"https://example.com\\\",\\\"primary\\\":true},{\\\"href\\\":\\\"https://example.org\\\"}],\\\"vault\\\":{\\\"id\\\":\\\"string\\\"},\\\"version\\\":0,\\\"fields\\\":[{\\\"generate\\\":false,\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"purpose\\\":\\\"\\\",\\\"recipe\\\":{\\\"characterSets\\\":[\\\"LETTERS\\\"],\\\"excludeCharacters\\\":\\\"abc1\\\",\\\"length\\\":32},\\\"section\\\":{\\\"id\\\":\\\"string\\\"},\\\"type\\\":\\\"STRING\\\",\\\"value\\\":\\\"string\\\"}],\\\"files\\\":[{\\\"content\\\":\\\"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\\\",\\\"content_path\\\":\\\"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\\\",\\\"id\\\":\\\"6r65pjq33banznomn7q22sj44e\\\",\\\"name\\\":\\\"foo.txt\\\",\\\"size\\\":35}],\\\"sections\\\":[{\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\"}]}\");\nRequest request = new Request.Builder()\n  .url(\"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\")\n  .put(body)\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .addHeader(\"content-type\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "UpdateVaultItem",
        "framework": "1password.local",
        "functionality": "Update an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "put",
        "lang": "Java",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D',\n  headers: {\n    Authorization: 'Bearer REPLACE_BEARER_TOKEN',\n    'content-type': 'application/json'\n  },\n  body: {\n    category: 'LOGIN',\n    favorite: false,\n    id: 'string',\n    tags: ['string'],\n    title: 'string',\n    urls: [{href: 'https://example.com', primary: true}, {href: 'https://example.org'}],\n    vault: {id: 'string'},\n    version: 0,\n    fields: [\n      {\n        generate: false,\n        id: 'string',\n        label: 'string',\n        purpose: '',\n        recipe: {characterSets: ['LETTERS'], excludeCharacters: 'abc1', length: 32},\n        section: {id: 'string'},\n        type: 'STRING',\n        value: 'string'\n      }\n    ],\n    files: [\n      {\n        content: 'VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=',\n        content_path: 'v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content',\n        id: '6r65pjq33banznomn7q22sj44e',\n        name: 'foo.txt',\n        size: 35\n      }\n    ],\n    sections: [{id: 'string', label: 'string'}]\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "UpdateVaultItem",
        "framework": "1password.local",
        "functionality": "Update an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "put",
        "lang": "Node",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPConnection(\"1password.local\")\n\npayload = \"{\\\"category\\\":\\\"LOGIN\\\",\\\"favorite\\\":false,\\\"id\\\":\\\"string\\\",\\\"tags\\\":[\\\"string\\\"],\\\"title\\\":\\\"string\\\",\\\"urls\\\":[{\\\"href\\\":\\\"https://example.com\\\",\\\"primary\\\":true},{\\\"href\\\":\\\"https://example.org\\\"}],\\\"vault\\\":{\\\"id\\\":\\\"string\\\"},\\\"version\\\":0,\\\"fields\\\":[{\\\"generate\\\":false,\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"purpose\\\":\\\"\\\",\\\"recipe\\\":{\\\"characterSets\\\":[\\\"LETTERS\\\"],\\\"excludeCharacters\\\":\\\"abc1\\\",\\\"length\\\":32},\\\"section\\\":{\\\"id\\\":\\\"string\\\"},\\\"type\\\":\\\"STRING\\\",\\\"value\\\":\\\"string\\\"}],\\\"files\\\":[{\\\"content\\\":\\\"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\\\",\\\"content_path\\\":\\\"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\\\",\\\"id\\\":\\\"6r65pjq33banznomn7q22sj44e\\\",\\\"name\\\":\\\"foo.txt\\\",\\\"size\\\":35}],\\\"sections\\\":[{\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\"}]}\"\n\nheaders = {\n    'Authorization': \"Bearer REPLACE_BEARER_TOKEN\",\n    'content-type': \"application/json\"\n    }\n\nconn.request(\"PUT\", \"/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "UpdateVaultItem",
        "framework": "1password.local",
        "functionality": "Update an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "put",
        "lang": "Python",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"category\\\":\\\"LOGIN\\\",\\\"favorite\\\":false,\\\"id\\\":\\\"string\\\",\\\"tags\\\":[\\\"string\\\"],\\\"title\\\":\\\"string\\\",\\\"urls\\\":[{\\\"href\\\":\\\"https://example.com\\\",\\\"primary\\\":true},{\\\"href\\\":\\\"https://example.org\\\"}],\\\"vault\\\":{\\\"id\\\":\\\"string\\\"},\\\"version\\\":0,\\\"fields\\\":[{\\\"generate\\\":false,\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"purpose\\\":\\\"\\\",\\\"recipe\\\":{\\\"characterSets\\\":[\\\"LETTERS\\\"],\\\"excludeCharacters\\\":\\\"abc1\\\",\\\"length\\\":32},\\\"section\\\":{\\\"id\\\":\\\"string\\\"},\\\"type\\\":\\\"STRING\\\",\\\"value\\\":\\\"string\\\"}],\\\"files\\\":[{\\\"content\\\":\\\"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\\\",\\\"content_path\\\":\\\"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\\\",\\\"id\\\":\\\"6r65pjq33banznomn7q22sj44e\\\",\\\"name\\\":\\\"foo.txt\\\",\\\"size\\\":35}],\\\"sections\\\":[{\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\"}]}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "UpdateVaultItem",
        "framework": "1password.local",
        "functionality": "Update an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "put",
        "lang": "go",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"Authorization\"] = 'Bearer REPLACE_BEARER_TOKEN'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\\"category\\\":\\\"LOGIN\\\",\\\"favorite\\\":false,\\\"id\\\":\\\"string\\\",\\\"tags\\\":[\\\"string\\\"],\\\"title\\\":\\\"string\\\",\\\"urls\\\":[{\\\"href\\\":\\\"https://example.com\\\",\\\"primary\\\":true},{\\\"href\\\":\\\"https://example.org\\\"}],\\\"vault\\\":{\\\"id\\\":\\\"string\\\"},\\\"version\\\":0,\\\"fields\\\":[{\\\"generate\\\":false,\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"purpose\\\":\\\"\\\",\\\"recipe\\\":{\\\"characterSets\\\":[\\\"LETTERS\\\"],\\\"excludeCharacters\\\":\\\"abc1\\\",\\\"length\\\":32},\\\"section\\\":{\\\"id\\\":\\\"string\\\"},\\\"type\\\":\\\"STRING\\\",\\\"value\\\":\\\"string\\\"}],\\\"files\\\":[{\\\"content\\\":\\\"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\\\",\\\"content_path\\\":\\\"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\\\",\\\"id\\\":\\\"6r65pjq33banznomn7q22sj44e\\\",\\\"name\\\":\\\"foo.txt\\\",\\\"size\\\":35}],\\\"sections\\\":[{\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\"}]}\"\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "UpdateVaultItem",
        "framework": "1password.local",
        "functionality": "Update an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "put",
        "lang": "Ruby",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_POSTFIELDS => \"{\\\"category\\\":\\\"LOGIN\\\",\\\"favorite\\\":false,\\\"id\\\":\\\"string\\\",\\\"tags\\\":[\\\"string\\\"],\\\"title\\\":\\\"string\\\",\\\"urls\\\":[{\\\"href\\\":\\\"https://example.com\\\",\\\"primary\\\":true},{\\\"href\\\":\\\"https://example.org\\\"}],\\\"vault\\\":{\\\"id\\\":\\\"string\\\"},\\\"version\\\":0,\\\"fields\\\":[{\\\"generate\\\":false,\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"purpose\\\":\\\"\\\",\\\"recipe\\\":{\\\"characterSets\\\":[\\\"LETTERS\\\"],\\\"excludeCharacters\\\":\\\"abc1\\\",\\\"length\\\":32},\\\"section\\\":{\\\"id\\\":\\\"string\\\"},\\\"type\\\":\\\"STRING\\\",\\\"value\\\":\\\"string\\\"}],\\\"files\\\":[{\\\"content\\\":\\\"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\\\",\\\"content_path\\\":\\\"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\\\",\\\"id\\\":\\\"6r65pjq33banznomn7q22sj44e\\\",\\\"name\\\":\\\"foo.txt\\\",\\\"size\\\":35}],\\\"sections\\\":[{\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\"}]}\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\",\n    \"content-type: application/json\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "UpdateVaultItem",
        "framework": "1password.local",
        "functionality": "Update an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "put",
        "lang": "PHP",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\n  \"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\",\n  \"content-type\": \"application/json\"\n]\nlet parameters = [\n  \"category\": \"LOGIN\",\n  \"favorite\": false,\n  \"id\": \"string\",\n  \"tags\": [\"string\"],\n  \"title\": \"string\",\n  \"urls\": [[\n      \"href\": \"https://example.com\",\n      \"primary\": true\n    ], [\"href\": \"https://example.org\"]],\n  \"vault\": [\"id\": \"string\"],\n  \"version\": 0,\n  \"fields\": [\n    [\n      \"generate\": false,\n      \"id\": \"string\",\n      \"label\": \"string\",\n      \"purpose\": \"\",\n      \"recipe\": [\n        \"characterSets\": [\"LETTERS\"],\n        \"excludeCharacters\": \"abc1\",\n        \"length\": 32\n      ],\n      \"section\": [\"id\": \"string\"],\n      \"type\": \"STRING\",\n      \"value\": \"string\"\n    ]\n  ],\n  \"files\": [\n    [\n      \"content\": \"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\",\n      \"content_path\": \"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\",\n      \"id\": \"6r65pjq33banznomn7q22sj44e\",\n      \"name\": \"foo.txt\",\n      \"size\": 35\n    ]\n  ],\n  \"sections\": [\n    [\n      \"id\": \"string\",\n      \"label\": \"string\"\n    ]\n  ]\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"PUT\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "UpdateVaultItem",
        "framework": "1password.local",
        "functionality": "Update an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "put",
        "lang": "swift",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PUT\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"Authorization: Bearer REPLACE_BEARER_TOKEN\");\nheaders = curl_slist_append(headers, \"content-type: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"category\\\":\\\"LOGIN\\\",\\\"favorite\\\":false,\\\"id\\\":\\\"string\\\",\\\"tags\\\":[\\\"string\\\"],\\\"title\\\":\\\"string\\\",\\\"urls\\\":[{\\\"href\\\":\\\"https://example.com\\\",\\\"primary\\\":true},{\\\"href\\\":\\\"https://example.org\\\"}],\\\"vault\\\":{\\\"id\\\":\\\"string\\\"},\\\"version\\\":0,\\\"fields\\\":[{\\\"generate\\\":false,\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\",\\\"purpose\\\":\\\"\\\",\\\"recipe\\\":{\\\"characterSets\\\":[\\\"LETTERS\\\"],\\\"excludeCharacters\\\":\\\"abc1\\\",\\\"length\\\":32},\\\"section\\\":{\\\"id\\\":\\\"string\\\"},\\\"type\\\":\\\"STRING\\\",\\\"value\\\":\\\"string\\\"}],\\\"files\\\":[{\\\"content\\\":\\\"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\\\",\\\"content_path\\\":\\\"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\\\",\\\"id\\\":\\\"6r65pjq33banznomn7q22sj44e\\\",\\\"name\\\":\\\"foo.txt\\\",\\\"size\\\":35}],\\\"sections\\\":[{\\\"id\\\":\\\"string\\\",\\\"label\\\":\\\"string\\\"}]}\");\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "UpdateVaultItem",
        "framework": "1password.local",
        "functionality": "Update an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "put",
        "lang": "libcurl",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const data = JSON.stringify({\n  \"category\": \"LOGIN\",\n  \"favorite\": false,\n  \"id\": \"string\",\n  \"tags\": [\n    \"string\"\n  ],\n  \"title\": \"string\",\n  \"urls\": [\n    {\n      \"href\": \"https://example.com\",\n      \"primary\": true\n    },\n    {\n      \"href\": \"https://example.org\"\n    }\n  ],\n  \"vault\": {\n    \"id\": \"string\"\n  },\n  \"version\": 0,\n  \"fields\": [\n    {\n      \"generate\": false,\n      \"id\": \"string\",\n      \"label\": \"string\",\n      \"purpose\": \"\",\n      \"recipe\": {\n        \"characterSets\": [\n          \"LETTERS\"\n        ],\n        \"excludeCharacters\": \"abc1\",\n        \"length\": 32\n      },\n      \"section\": {\n        \"id\": \"string\"\n      },\n      \"type\": \"STRING\",\n      \"value\": \"string\"\n    }\n  ],\n  \"files\": [\n    {\n      \"content\": \"VGhlIGZ1dHVyZSBiZWxvbmdzIHRvIHRoZSBjdXJpb3VzLgo=\",\n      \"content_path\": \"v1/vaults/ionaiwtdvgclrixbt6ztpqcxnq/items/p7eflcy7f5mk7vg6zrzf5rjjyu/files/6r65pjq33banznomn7q22sj44e/content\",\n      \"id\": \"6r65pjq33banznomn7q22sj44e\",\n      \"name\": \"foo.txt\",\n      \"size\": 35\n    }\n  ],\n  \"sections\": [\n    {\n      \"id\": \"string\",\n      \"label\": \"string\"\n    }\n  ]\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "UpdateVaultItem",
        "framework": "1password.local",
        "functionality": "Update an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}",
        "method": "put",
        "lang": "javascript xhr",
        "domain": [
            "Items"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url 'http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files?inline_files=true' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetItemFiles",
        "framework": "1password.local",
        "functionality": "Get all the files inside an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files?inline_files=true\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetItemFiles",
        "framework": "1password.local",
        "functionality": "Get all the files inside an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files',\n  qs: {inline_files: 'true'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetItemFiles",
        "framework": "1password.local",
        "functionality": "Get all the files inside an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPConnection(\"1password.local\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files?inline_files=true\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetItemFiles",
        "framework": "1password.local",
        "functionality": "Get all the files inside an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files?inline_files=true\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetItemFiles",
        "framework": "1password.local",
        "functionality": "Get all the files inside an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files",
        "method": "get",
        "lang": "go",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files?inline_files=true\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Authorization\"] = 'Bearer REPLACE_BEARER_TOKEN'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetItemFiles",
        "framework": "1password.local",
        "functionality": "Get all the files inside an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files?inline_files=true\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetItemFiles",
        "framework": "1password.local",
        "functionality": "Get all the files inside an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files?inline_files=true\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetItemFiles",
        "framework": "1password.local",
        "functionality": "Get all the files inside an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files?inline_files=true\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"Authorization: Bearer REPLACE_BEARER_TOKEN\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetItemFiles",
        "framework": "1password.local",
        "functionality": "Get all the files inside an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files?inline_files=true\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetItemFiles",
        "framework": "1password.local",
        "functionality": "Get all the files inside an Item",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url 'http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D?inline_files=true' \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetDetailsOfFileById",
        "framework": "1password.local",
        "functionality": "Get the details of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D?inline_files=true\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetDetailsOfFileById",
        "framework": "1password.local",
        "functionality": "Get the details of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D',\n  qs: {inline_files: 'true'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetDetailsOfFileById",
        "framework": "1password.local",
        "functionality": "Get the details of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPConnection(\"1password.local\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D?inline_files=true\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetDetailsOfFileById",
        "framework": "1password.local",
        "functionality": "Get the details of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D?inline_files=true\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetDetailsOfFileById",
        "framework": "1password.local",
        "functionality": "Get the details of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}",
        "method": "get",
        "lang": "go",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D?inline_files=true\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Authorization\"] = 'Bearer REPLACE_BEARER_TOKEN'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetDetailsOfFileById",
        "framework": "1password.local",
        "functionality": "Get the details of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D?inline_files=true\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetDetailsOfFileById",
        "framework": "1password.local",
        "functionality": "Get the details of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D?inline_files=true\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetDetailsOfFileById",
        "framework": "1password.local",
        "functionality": "Get the details of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D?inline_files=true\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"Authorization: Bearer REPLACE_BEARER_TOKEN\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetDetailsOfFileById",
        "framework": "1password.local",
        "functionality": "Get the details of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D?inline_files=true\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "GetDetailsOfFileById",
        "framework": "1password.local",
        "functionality": "Get the details of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "curl --request GET \\\n  --url http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D/content \\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DownloadFileByID",
        "framework": "1password.local",
        "functionality": "Get the content of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}/content",
        "method": "get",
        "lang": "cURL",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D/content\")\n  .get()\n  .addHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n  .build();\n\nResponse response = client.newCall(request).execute();",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DownloadFileByID",
        "framework": "1password.local",
        "functionality": "Get the content of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}/content",
        "method": "get",
        "lang": "Java",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D/content',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DownloadFileByID",
        "framework": "1password.local",
        "functionality": "Get the content of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}/content",
        "method": "get",
        "lang": "Node",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import http.client\n\nconn = http.client.HTTPConnection(\"1password.local\")\n\nheaders = { 'Authorization': \"Bearer REPLACE_BEARER_TOKEN\" }\n\nconn.request(\"GET\", \"/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D/content\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DownloadFileByID",
        "framework": "1password.local",
        "functionality": "Get the content of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}/content",
        "method": "get",
        "lang": "Python",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D/content\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DownloadFileByID",
        "framework": "1password.local",
        "functionality": "Get the content of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}/content",
        "method": "get",
        "lang": "go",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D/content\")\n\nhttp = Net::HTTP.new(url.host, url.port)\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Authorization\"] = 'Bearer REPLACE_BEARER_TOKEN'\n\nresponse = http.request(request)\nputs response.read_body",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DownloadFileByID",
        "framework": "1password.local",
        "functionality": "Get the content of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}/content",
        "method": "get",
        "lang": "Ruby",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D/content\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => [\n    \"Authorization: Bearer REPLACE_BEARER_TOKEN\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DownloadFileByID",
        "framework": "1password.local",
        "functionality": "Get the content of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}/content",
        "method": "get",
        "lang": "PHP",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "import Foundation\n\nlet headers = [\"Authorization\": \"Bearer REPLACE_BEARER_TOKEN\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D/content\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DownloadFileByID",
        "framework": "1password.local",
        "functionality": "Get the content of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}/content",
        "method": "get",
        "lang": "swift",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D/content\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"Authorization: Bearer REPLACE_BEARER_TOKEN\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DownloadFileByID",
        "framework": "1password.local",
        "functionality": "Get the content of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}/content",
        "method": "get",
        "lang": "libcurl",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    },
    {
        "api_call": "const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"http://1password.local/vaults/%7BvaultUuid%7D/items/%7BitemUuid%7D/files/%7BfileUuid%7D/content\");\nxhr.setRequestHeader(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\");\n\nxhr.send(data);",
        "api_name": "1Password Connect",
        "api_provider": "1password.local",
        "endpoint": "DownloadFileByID",
        "framework": "1password.local",
        "functionality": "Get the content of a File",
        "api_arguments": {},
        "description": "",
        "path": "/vaults/{vaultUuid}/items/{itemUuid}/files/{fileUuid}/content",
        "method": "get",
        "lang": "javascript xhr",
        "domain": [
            "Files"
        ],
        "api_description": "REST API interface for 1Password Connect.",
        "api_license": ""
    }
]